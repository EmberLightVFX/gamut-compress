Root {
 inputs 0
 project_directory "\[python \{nuke.script_directory()\}]"
 format "1920 1080 0 0 1920 1080 1 HD_1080p"
 proxy_type scale
 proxy_format "960 540 0 0 960 540 1 SD_540p"
}
BackdropNode {
 inputs 0
 name BackdropNode10
 tile_color 0x16161601
 label "<font color=#9e9e9e><font size=7><b>Example Images</b></font>\n<font size=4><b></b></font><font size=2>\n\n\n</font>"
 note_font Helvetica
 note_font_size 150
 note_font_color 0xffffffff
 xpos 9941
 ypos 2190
 bdwidth 12281
 bdheight 4956
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode35
 tile_color 0x51162b01
 label "<font color=#000000><font size=7><b>What images?</b></font>\n<font size=4><b>Download here</b></font><font size=2>\n<a href=https://www.dropbox.com/sh/jbng5hfi6ofqlp8/AABLGGxd9PWYMxFAadHK5mspa?dl=0>https://www.dropbox.com/sh/jbng5hfi6ofqlp8/AABLGGxd9PWYMxFAadHK5mspa?dl=0</a>\n\nThese images are debayered 2k ACES 2065-1 exr versions of the images uploaded to the ACES Gamut Mapping VWG\n\n<a href=https://www.dropbox.com/sh/u6z2a0jboo4vno8/AAB-10qcflhpr0C5LWhs7Kq4a?dl=0>https://www.dropbox.com/sh/u6z2a0jboo4vno8/AAB-10qcflhpr0C5LWhs7Kq4a?dl=0</a>\n\n</font>"
 note_font Helvetica
 note_font_size 30
 note_font_color 0xffffffff
 xpos 10886
 ypos 3266
 bdwidth 764
 bdheight 427
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x3b3b3bff
 note_font Helvetica
 note_font_size 150
 note_font_color 0xffffffff
 xpos 6891
 ypos 2188
 bdwidth 2625
 bdheight 5633
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0xa0a0a01
 label "<font color=#999999><font size=7><b>Open Questions</b></font>\n<font size=4><b></b></font><font size=2>\n    - What are the goals of gamut compression?\n        - To fix \"visual artifacts\"\n        - To \"heal\" out of gamut colors\n        - To ease working with images that have out of gamut values (for example in compositing)\n        \n    - How will this tool be used and where? (this informs the answers to the above questions)\n        - By colorists?\n            - Needs creative controls to affect compressed colors\n        - In a VFX pipeline?\n            - Needs technical controls to specify distance based on source gamut. \n            - Needs to have an exact inverse transform\n            - Might need supporting tools to visualize generated content that is in the \"danger zone\" \n              outside the safety threshold\n        - As the first step in a display rendering transform?\n            - Probably a different set of requirements!\n\n\n    - How do we evaluate the success of a gamut compression alrgorithm?\n        - Maintaining high \"saturation\" in remapped colors\n        - Maintaining \"hue\" (i.e., avoiding \"purple shifts\")\n        - Invertible\n        - Smooth transitions, no artifacts on gradients\n        - Good distribution of remapped values within the threshold\n        - Maximum slope of the compression curve for a given bit depth?\n\n\n    - Should negative values in grain be considered Out of Gamut? Should these be protected?\n    - Should there be controls to adjust RGB ratios for creative control of hue in remapped colors?\n    - Are there other approaches to this? Maybe biasing the direction of the vector?\n\n\n\n</font>"
 note_font Helvetica
 note_font_size 102
 note_font_color 0xffffffff
 xpos 22461
 ypos 2202
 bdwidth 4138
 bdheight 4763
 z_order -10
}
BackdropNode {
 inputs 0
 name BackdropNode11
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>D. Siragusano</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 16930
 ypos 3748
 bdwidth 3101
 bdheight 1240
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>F. Matas</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 14999
 ypos 3727
 bdwidth 1682
 bdheight 1233
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode13
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>J. Johnson</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 20164
 ypos 3728
 bdwidth 1472
 bdheight 1232
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode14
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>M. Smekal</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 13344
 ypos 3728
 bdwidth 1472
 bdheight 1232
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode15
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>T. Mansencal</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 11948
 ypos 3729
 bdwidth 1185
 bdheight 1230
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode16
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>C. Payne</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 10887
 ypos 3734
 bdwidth 886
 bdheight 1219
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Construct Achromatic</b></font>\n\nachromatic = max(r,g,b)"
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7592
 ypos 3090
 bdwidth 295
 bdheight 182
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Construct Distance</b></font>\n\ndistance = (achromatic - RGB) / achromatic\n\n  - Dividing by achromatic normalizes distance such that 1.0 is at the gamut boundary\n  - Shadow rolloff lifts values below a threshold for the distance division only.\n    Reduces distance in dark shadows where grain can cause issues."
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7591
 ypos 3273
 bdwidth 439
 bdheight 221
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode33
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Inversion</b></font>\n\nRGB = achromatic - distance * achromatic\n\n  - RGB is purely a function of distance and achromatic\n  - Achromatic is unaltered by distance compression\n  - Therefore inversion is trivial"
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7588
 ypos 4047
 bdwidth 665
 bdheight 737
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode34
 tile_color 0x23232301
 label "<font color=#4c4c4c><font size=7><b>Contact Sheet</b></font>"
 note_font Helvetica
 note_font_size 83
 note_font_color 0xffffffff
 xpos 19727
 ypos 5369
 bdwidth 1907
 bdheight 1405
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode36
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Parameters</b></font>\n<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b> \nSpecify the tone compression curve to use when  mapping out of gamut colors into the boundary threshold. \n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a> <a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a> <a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a> <a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a> <a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n\n<b>Threshold</b> \nPercentage of the gamut to affect. If threshold is 0.2,  the inner 80% of the gamut will be unaffected and  out of gamut values will be compressed into  the outer 20% of the gamut's color volume.\n\n<b>Shadow Rolloff</b>\nReduce gamut compression effect in grain below specified value.\n\n<b>Max Distance</b>\nPer color component control to specify what distance will be  compressed to the gamut boundary. For example,  a value of cyan=0.2 will map colors with a distance of red=1.2 from  the achromatic axis to red=1.0, which is the gamut boundary.\n\n<b>Direction</b>\nSpecifies whether to apply or inverse the gamut compression operation."
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7546
 ypos 5241
 bdwidth 308
 bdheight 366
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode7
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Compression Curve</b></font>"
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 8276
 ypos 3467
 bdwidth 388
 bdheight 410
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode8
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Compress Distance</b></font>\n\n  - Compress distance values above a threshold\n  - Map the specified distance to the gamut boundary"
 note_font "Helvetica \[pyrs]"
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7587
 ypos 3563
 bdwidth 447
 bdheight 149
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode9
 tile_color 0x30303001
 label "<font color=#878787><font size=7><b>Reconstruct RGB</b></font>\n\nRGB = achromatic - distance * achromatic\n\n  - RGB is purely a function of distance and achromatic\n  - Achromatic is unaltered by distance compression\n  - Therefore inversion is trivial"
 note_font Helvetica
 note_font_size 12
 note_font_color 0xffffffff
 xpos 7586
 ypos 3736
 bdwidth 448
 bdheight 208
 z_order 1
}
BackdropNode {
 inputs 0
 name BackdropNode17
 tile_color 0x2d343a01
 label "<font color=#000000><font size=7><b>Tools</b></font>"
 note_font Helvetica
 note_font_size 24
 note_font_color 0xffffffff
 xpos 10887
 ypos 2707
 bdwidth 666
 bdheight 489
 z_order 12
}
BackdropNode {
 inputs 0
 name BackdropNode28
 tile_color 0x37394201
 label "<font color=#000000><font size=7><b>Implications of Distance</b></font>"
 note_font Helvetica
 note_font_size 48
 note_font_color 0xffffffff
 xpos 7308
 ypos 6206
 bookmark false
 bdwidth 1283
 bdheight 20
 z_order 129
}
BackdropNode {
 inputs 0
 name BackdropNode29
 tile_color 0xff
 label "<font color=#000000><font size=7><b>Algorithm Demo</b></font>"
 note_font Helvetica
 note_font_size 48
 note_font_color 0xffffffff
 xpos 7279
 ypos 2270
 bookmark false
 bdwidth 1283
 bdheight 20
 z_order 129
}
BackdropNode {
 inputs 0
 name BackdropNode30
 tile_color 0x37394201
 label "<font color=#000000><font size=7><b>Parameters and Results</b></font>"
 note_font Helvetica
 note_font_size 48
 note_font_color 0xffffffff
 xpos 7279
 ypos 4958
 bookmark false
 bdwidth 1283
 bdheight 20
 z_order 129
}
BackdropNode {
 inputs 0
 name BackdropNode31
 tile_color 0x37394201
 label "<font color=#000000><font size=7><b>Max Distance Compare</b></font>"
 note_font Helvetica
 note_font_size 48
 note_font_color 0xffffffff
 xpos 7338
 ypos 7094
 bookmark false
 bdwidth 1283
 bdheight 20
 z_order 129
}
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/j_johnson_diffraction_grating_red_helium.aces.exr
 format "2048 1080 0 0 2048 1080 1 2K_DCP"
 origset true
 raw true
 auto_alpha true
 name Read44
 tile_color 0x989898ff
 note_font Helvetica
 xpos 20860
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix3
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 20860
 ypos 4354
}
Dot {
 name Dot45
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20894
 ypos 4506
}
set N78cfeb0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/j_johnson_diffraction_grating_red_dragon.aces.exr
 format "2048 1053 0 0 2048 1053 1 "
 origset true
 raw true
 auto_alpha true
 name Read43
 tile_color 0x989898ff
 note_font Helvetica
 xpos 20750
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix2
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 20750
 ypos 4354
}
Dot {
 name Dot44
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20784
 ypos 4506
}
set N81fe4b0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/j_johnson_diffraction_grating_canon_5dmk3.aces.exr
 format "2048 1367 0 0 2048 1367 1 "
 origset true
 raw true
 auto_alpha true
 name Read42
 tile_color 0x989898ff
 note_font Helvetica
 xpos 20640
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix1
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 20640
 ypos 4354
}
Dot {
 name Dot43
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20674
 ypos 4506
}
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/j_johnson_diffraction_grating_alexa_mini.aces.exr
 format "2048 1317 0 0 2048 1317 1 "
 origset true
 raw true
 auto_alpha true
 name Read41
 tile_color 0x989898ff
 note_font Helvetica
 xpos 20530
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix5
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 20530
 ypos 4354
}
Dot {
 name Dot42
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20564
 ypos 4506
}
set N81b1110 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C096_171213_R11N.0895897.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read25
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19760
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix4
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19760
 ypos 4354
}
Dot {
 name Dot3
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19794
 ypos 4506
}
set N7c79050 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C095_171213_R11N.0893744.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read24
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19650
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix11
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19650
 ypos 4354
}
Dot {
 name Dot1
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19684
 ypos 4506
}
set N7d50e10 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C094_171213_R11N.0892173.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read23
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19540
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix10
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19540
 ypos 4354
}
Dot {
 name Dot6
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19574
 ypos 4506
}
set N80be610 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C093_171213_R11N.0890902.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read22
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19430
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix9
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19430
 ypos 4354
}
Dot {
 name Dot5
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19464
 ypos 4506
}
set N8ac1cc0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C092_171213_R11N.0889688.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read21
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19320
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix8
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19320
 ypos 4354
}
Dot {
 name Dot4
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19354
 ypos 4506
}
set N811b380 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C091_171213_R11N.0888367.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read20
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19210
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix7
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19210
 ypos 4354
}
Dot {
 name Dot7
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19244
 ypos 4506
}
set N816d6d0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C090_171213_R11N.0887144.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read19
 tile_color 0x989898ff
 note_font Helvetica
 xpos 19100
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix6
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 19100
 ypos 4354
}
Dot {
 name Dot9
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19134
 ypos 4506
}
set N8772d60 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C089_171213_R11N.0885836.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read18
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18990
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix17
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18990
 ypos 4354
}
Dot {
 name Dot8
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 19024
 ypos 4506
}
set N87c5060 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C088_171213_R11N.0883827.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read17
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18880
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix16
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18880
 ypos 4354
}
Dot {
 name Dot12
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18914
 ypos 4506
}
set N8447c90 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C087_171213_R11N.0880363.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read16
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18770
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix15
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18770
 ypos 4354
}
Dot {
 name Dot11
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18804
 ypos 4506
}
set N849a150 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C086_171213_R11N.0878098.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read15
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18660
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix14
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18660
 ypos 4354
}
Dot {
 name Dot10
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18694
 ypos 4506
}
set N85063e0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C085_171213_R11N.0876649.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read14
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18550
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix13
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18550
 ypos 4354
}
Dot {
 name Dot13
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18584
 ypos 4506
}
set N8558870 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C084_171213_R11N.0875601.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read13
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18440
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix12
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18440
 ypos 4354
}
Dot {
 name Dot15
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18474
 ypos 4506
}
set N85aadb0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C083_171213_R11N.0874303.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read12
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18330
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix21
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18330
 ypos 4354
}
Dot {
 name Dot14
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18364
 ypos 4506
}
set N85fd270 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C082_171213_R11N.0873001.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read11
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18220
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix20
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18220
 ypos 4354
}
Dot {
 name Dot26
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18254
 ypos 4506
}
set N864f730 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C081_171213_R11N.0871457.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read10
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18110
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix19
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18110
 ypos 4354
}
Dot {
 name Dot25
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18144
 ypos 4506
}
set N86a1bf0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C080_171213_R11N.0869910.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read9
 tile_color 0x989898ff
 note_font Helvetica
 xpos 18000
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix18
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 18000
 ypos 4354
}
Dot {
 name Dot24
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 18034
 ypos 4506
}
set N86f40b0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C079_171213_R11N.0867242.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read8
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17890
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix23
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17890
 ypos 4354
}
Dot {
 name Dot23
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17924
 ypos 4506
}
set N8f5e080 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C078_171213_R11N.0865904.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read7
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17780
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix22
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17780
 ypos 4354
}
Dot {
 name Dot22
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17814
 ypos 4506
}
set N8fb0540 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C077_171213_R11N.0864011.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read6
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17670
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix24
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17670
 ypos 4354
}
Dot {
 name Dot21
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17704
 ypos 4506
}
set N9002a00 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C076_171213_R11N.0862483.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read5
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17560
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix25
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17560
 ypos 4354
}
Dot {
 name Dot20
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17594
 ypos 4506
}
set N9056120 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C075_171213_R11N.0861340.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read4
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17450
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix29
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17450
 ypos 4354
}
Dot {
 name Dot19
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17484
 ypos 4506
}
set N90a85e0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C074_171213_R11N.0858420.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read3
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17340
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix28
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17340
 ypos 4354
}
Dot {
 name Dot18
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17374
 ypos 4506
}
set N90faaa0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C073_171213_R11N.0856643.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read2
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17230
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix27
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17230
 ypos 4354
}
Dot {
 name Dot17
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17264
 ypos 4506
}
set N914cf60 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/d_siragusano_A004C072_171213_R11N.0854945.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read1
 tile_color 0x989898ff
 note_font Helvetica
 xpos 17120
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix26
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 17120
 ypos 4354
}
Dot {
 name Dot16
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 17154
 ypos 4506
}
set N919f420 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_2.aces.00436.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read40
 tile_color 0x989898ff
 note_font Helvetica
 xpos 16130
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix34
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 16130
 ypos 4354
}
Dot {
 name Dot33
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 16164
 ypos 4506
}
set N91f1a30 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_2.aces.00243.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read39
 tile_color 0x989898ff
 note_font Helvetica
 xpos 16020
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix33
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 16020
 ypos 4354
}
Dot {
 name Dot35
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 16054
 ypos 4506
}
set N92444f0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_2.aces.00199.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read38
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15910
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix32
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15910
 ypos 4354
}
Dot {
 name Dot34
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15944
 ypos 4506
}
set N9296ab0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_2.aces.00123.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read37
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15800
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix31
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15800
 ypos 4354
}
Dot {
 name Dot36
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15834
 ypos 4506
}
set N92e9070 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_1.aces.01352.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read36
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15690
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix30
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15690
 ypos 4354
}
Dot {
 name Dot41
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15724
 ypos 4506
}
set N933b530 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_1.aces.01112.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read35
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15580
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix38
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15580
 ypos 4354
}
Dot {
 name Dot40
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15614
 ypos 4506
}
set N938d9f0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_1.aces.00472.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read34
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15470
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix37
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15470
 ypos 4354
}
Dot {
 name Dot39
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15504
 ypos 4506
}
set N93e06c0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_1.aces.00408.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read33
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15360
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix36
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15360
 ypos 4354
}
Dot {
 name Dot38
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15394
 ypos 4506
}
set N9432b80 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/f_matas_Alexamini_OutofGamut_1.aces.00122.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read32
 tile_color 0x989898ff
 note_font Helvetica
 xpos 15250
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix35
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 15250
 ypos 4354
}
Dot {
 name Dot37
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 15284
 ypos 4506
}
set N9485040 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A018C013_191220_R19I_03.aces.exr
 format "2048 768 0 0 2048 768 1 "
 origset true
 raw true
 auto_alpha true
 name Read51
 tile_color 0x989898ff
 note_font Helvetica
 xpos 14370
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix45
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 14370
 ypos 4354
}
Dot {
 name Dot47
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14404
 ypos 4506
}
set N94d7530 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A018C013_191220_R19I_02.aces.exr
 format "2048 768 0 0 2048 768 1 "
 origset true
 raw true
 auto_alpha true
 name Read50
 tile_color 0x989898ff
 note_font Helvetica
 xpos 14260
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix44
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 14260
 ypos 4354
}
Dot {
 name Dot46
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14294
 ypos 4506
}
set N95299f0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A016C009_191220_R19I.aces.exr
 format "2048 768 0 0 2048 768 1 "
 origset true
 raw true
 auto_alpha true
 name Read49
 tile_color 0x989898ff
 note_font Helvetica
 xpos 14150
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix43
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 14150
 ypos 4354
}
Dot {
 name Dot52
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14184
 ypos 4506
}
set N957beb0 [stack 0]
Read {
 inputs 0
 file_type exr
 file /cave/dev/color/aces_gamut_vwg/images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A009C002_190210_R0EI_02.aces.exr
 format "2048 1319 0 0 2048 1319 1 "
 origset true
 colorspace data
 raw true
 auto_alpha true
 name Read58
 tile_color 0x989898ff
 note_font Helvetica
 xpos 14040
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix55
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 14040
 ypos 4354
}
Dot {
 name Dot96
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14074
 ypos 4506
}
set Na143a80 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A009C002_190210_R0EI.aces.exr
 format "2048 1319 0 0 2048 1319 1 "
 origset true
 raw true
 auto_alpha true
 name Read48
 tile_color 0x989898ff
 note_font Helvetica
 xpos 13930
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix42
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 13930
 ypos 4354
}
Dot {
 name Dot51
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 13964
 ypos 4506
}
set Na195f50 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A006C004_190809_R39K.aces.exr
 format "2048 1319 0 0 2048 1319 1 "
 origset true
 raw true
 auto_alpha true
 name Read47
 tile_color 0x989898ff
 note_font Helvetica
 xpos 13820
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix41
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 13820
 ypos 4354
}
Dot {
 name Dot50
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 13854
 ypos 4506
}
set Na1e8430 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A004C007_190809_R39K.aces.exr
 format "2048 1319 0 0 2048 1319 1 "
 origset true
 raw true
 auto_alpha true
 name Read46
 tile_color 0x989898ff
 note_font Helvetica
 xpos 13710
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix40
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 13710
 ypos 4354
}
Dot {
 name Dot49
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 13744
 ypos 4506
}
set Na23a900 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/m_smekal_A002_C029_06025K.0000000F.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read45
 tile_color 0x989898ff
 note_font Helvetica
 xpos 13600
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix39
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 13600
 ypos 4354
}
Dot {
 name Dot48
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 13634
 ypos 4506
}
set Na28cdd0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/lambertian_sphere_grain.e-gamut_to_aces.exr
 format "1920 1080 0 0 1920 1080 1 HD_1080p"
 origset true
 raw true
 auto_alpha true
 name Read57
 tile_color 0x989898ff
 note_font Helvetica
 xpos 12720
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix46
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 12720
 ypos 4354
}
Dot {
 name Dot58
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 12754
 ypos 4506
}
set Na2df2a0 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/lambertian_sphere.e-gamut_to_aces.exr
 format "1920 1080 0 0 1920 1080 1 HD_1080p"
 origset true
 raw true
 auto_alpha true
 name Read56
 tile_color 0x989898ff
 note_font Helvetica
 xpos 12610
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix47
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 12610
 ypos 4354
}
Dot {
 name Dot59
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 12644
 ypos 4506
}
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/t_mansencal_Cornell_Box_Rigid_Spheres_190_Patch_Roughplastic_Point_Grey_Grasshopper_50S5C_RGB_W.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 raw true
 auto_alpha true
 name Read54
 tile_color 0x989898ff
 note_font Helvetica
 xpos 12500
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix49
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 12500
 ypos 4354
}
Dot {
 name Dot55
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 12534
 ypos 4506
}
set Na383c70 [stack 0]
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/t_mansencal_5dmk2_spac-o-ween.aces.exr
 format "2048 1364 0 0 2048 1364 1 "
 origset true
 version 1
 raw true
 auto_alpha true
 name Read53
 tile_color 0x989898ff
 note_font Helvetica
 xpos 12390
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix48
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 12390
 ypos 4354
}
Dot {
 name Dot54
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 12424
 ypos 4506
}
Read {
 inputs 0
 file_type exr
 file ../images/aces_gamut_mapping_vwg_images_ap0/c_payne_J001_C001_08178N_001.aces.exr
 format "2048 1152 0 0 2048 1152 1 "
 origset true
 raw true
 auto_alpha true
 name Read52
 tile_color 0x989898ff
 note_font Helvetica
 xpos 11290
 ypos 4206
}
ColorMatrix {
 matrix {
     {1.451439381 -0.2365107685 -0.2149285674}
     {-0.07655383646 1.176229835 -0.09967593104}
     {0.008316127583 -0.0060324613 0.997716248}
   }
 name ColorMatrix50
 label "ACES to ACEScg"
 note_font Helvetica
 xpos 11290
 ypos 4354
}
Dot {
 name Dot53
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 11324
 ypos 4506
}
set Na428630 [stack 0]
Switch {
 inputs 51
 which {{frame-1}}
 name Switch1
 note_font "Bitstream Vera Sans"
 xpos 15800
 ypos 5174
 hide_input true
}
FrameRange {
 first_frame 1
 last_frame 50
 time ""
 name FrameRange3
 label "\[value first_frame]-\[value last_frame]"
 note_font Helvetica
 xpos 15800
 ypos 5242
}
NoOp {
 name ___anchor_rcyo
 tile_color 0x989898ff
 label "<font size=7>\[value title]"
 note_font Helvetica
 xpos 15800
 ypos 5399
 icon Output.png
 addUserKnob {20 anchor_tab l anchor}
 addUserKnob {1 title}
 title images
}
set Na440710 [stack 0]
NoOp {
 name ___pointer_rcyo1
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 15800
 ypos 5543
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_rcyo
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
push $Na23a900
Transform {
 translate {-324 -62}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform10
 note_font Helvetica
 xpos 21300
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop12
 note_font Helvetica
 xpos 21300
 ypos 5799
}
Dot {
 name Dot87
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 21334
 ypos 6066
}
push $Na195f50
Transform {
 translate {-762 64}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform9
 note_font Helvetica
 xpos 21190
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop11
 note_font Helvetica
 xpos 21190
 ypos 5799
}
Dot {
 name Dot86
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 21224
 ypos 6066
}
push $Na2df2a0
Transform {
 translate {-382 238}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform7
 note_font Helvetica
 xpos 20970
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop9
 note_font Helvetica
 xpos 20970
 ypos 5799
}
Dot {
 name Dot84
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 21004
 ypos 6066
}
push $N94d7530
Transform {
 translate {-300 374}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform8
 note_font Helvetica
 xpos 21080
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop10
 note_font Helvetica
 xpos 21080
 ypos 5799
}
Dot {
 name Dot85
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 21114
 ypos 6066
}
push $Na28cdd0
Transform {
 translate {-2 100}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform6
 note_font Helvetica
 xpos 20860
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop8
 note_font Helvetica
 xpos 20860
 ypos 5799
}
Dot {
 name Dot82
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20894
 ypos 6066
}
push $Na383c70
Transform {
 translate {116 478}
 scale 0.9
 center {960 540}
 shutteroffset centred
 name Transform4
 note_font Helvetica
 xpos 20530
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop6
 note_font Helvetica
 xpos 20530
 ypos 5799
}
Dot {
 name Dot60
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20564
 ypos 6066
}
push $N78cfeb0
Transform {
 translate {-532 54}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform5
 note_font Helvetica
 xpos 20640
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop7
 note_font Helvetica
 xpos 20640
 ypos 5799
}
Dot {
 name Dot81
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20674
 ypos 6066
}
push $N8447c90
Transform {
 translate {-76 94}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform3
 note_font Helvetica
 xpos 20420
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop5
 note_font Helvetica
 xpos 20420
 ypos 5799
}
Dot {
 name Dot57
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20454
 ypos 6066
}
push $N919f420
Transform {
 translate {-76 94}
 scale 0.8515
 center {960 540}
 shutteroffset centred
 name Transform2
 note_font Helvetica
 xpos 20310
 ypos 5727
 hide_input true
}
Crop {
 box {572 592 1084 1104}
 reformat true
 crop false
 name Crop4
 note_font Helvetica
 xpos 20310
 ypos 5799
}
Dot {
 name Dot56
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20344
 ypos 6066
}
push $N92e9070
Crop {
 box {508 604 1020 1116}
 reformat true
 crop false
 name Crop1
 note_font Helvetica
 xpos 20200
 ypos 5799
 hide_input true
}
Dot {
 name Dot32
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20234
 ypos 6066
}
push $N938d9f0
Crop {
 box {1548 644 2060 1156}
 reformat true
 crop false
 name Crop2
 note_font Helvetica
 xpos 20090
 ypos 5799
 hide_input true
}
Dot {
 name Dot31
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20124
 ypos 6066
}
push $Na428630
Transform {
 translate {594 322}
 scale 0.9
 center {960 540}
 shutteroffset centred
 name Transform1
 note_font Helvetica
 xpos 19980
 ypos 5727
 hide_input true
}
Crop {
 box {700 476 1212 988}
 reformat true
 crop false
 name Crop3
 note_font Helvetica
 xpos 19980
 ypos 5799
}
Dot {
 name Dot30
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 20014
 ypos 6066
}
ContactSheet {
 inputs 12
 width {{width*columns}}
 height {{height/pixel_aspect*rows}}
 roworder TopBottom
 name ContactSheet1
 note_font Helvetica
 xpos 19980
 ypos 6279
}
Write {
 file ../images/collage.acescg.exr
 file_type exr
 compression "Zip (16 scanlines)"
 metadata "all metadata"
 first_part rgba
 version 2
 name Write2
 note_font Helvetica
 xpos 19980
 ypos 6442
}
Group {
 inputs 0
 name PlotSlice
 xpos 11070
 ypos 2846
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {4 plot M {replace over right bottom}}
 addUserKnob {7 thickness}
 thickness 0.1
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.2
 addUserKnob {7 min_value l "min value" R -1 0}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {342 335}
 addUserKnob {6 draw_line l "draw line" +STARTLINE}
 draw_line true
 addUserKnob {7 line_width l "line width" R 0.5 3}
 line_width 1
 addUserKnob {41 color T Constant5.color}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -898
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set Na5ef3e0 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set Na5f40b0 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -448
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -400
 }
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -590
  ypos -322
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -590
  ypos -274
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression1
  note_font Helvetica
  xpos -590
  ypos -225
 }
set Na63edb0 [stack 0]
 Fill {
  color {1 -10 0 1}
  name Fill1
  note_font Helvetica
  xpos -480
  ypos -225
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression2
  note_font Helvetica
  xpos -480
  ypos -201
 }
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression4
  xpos -480
  ypos -154
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Multiply {
  channels rgba
  value 0.25
  name Multiply1
  note_font Helvetica
  xpos -480
  ypos -129
 }
push $Na63edb0
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression3
  xpos -590
  ypos -130
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Merge2 {
  inputs 2
  operation plus
  bbox B
  output rgb
  name Merge2
  note_font Helvetica
  xpos -590
  ypos -57
 }
 Dot {
  name Dot14
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos -6
 }
set Na6a2790 [stack 0]
 Rectangle {
  opacity 0.395
  area {{width/2-swidth/2} 0 {width/2+swidth/2} {height}}
  color {1 0 0 1}
  name Rectangle1
  label 0.5
  xpos -370
  ypos -40
  addUserKnob {20 User}
  addUserKnob {7 swidth}
  swidth 3
 }
 Dot {
  name Dot3
  xpos -226
  ypos -54
 }
set Na6b6d10 [stack 0]
 Dot {
  name Dot9
  xpos -6
  ypos -54
 }
 Constant {
  inputs 0
  color {1 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -480
  ypos -826
  postage_stamp false
 }
 NoOp {
  name Line
  xpos -480
  ypos -778
  addUserKnob {20 User}
  addUserKnob {12 pt1}
  pt1 {{parent.pos1} {parent.pos1}}
  addUserKnob {12 pt2}
  pt2 {{parent.pos2} {parent.pos2}}
  addUserKnob {7 Radius R 1 15}
  Radius {{parent.line_width}}
  addUserKnob {7 angle}
  angle {{"(pt1.x<pt2.x)? (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000) :  (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000)+180"}}
 }
 Reformat {
  type "to box"
  box_width {{"sqrt( pow(parent.Line.pt2.x - parent.Line.pt1.x, 2) + pow(parent.Line.pt2.y - parent.Line.pt1.y, 2) )"}}
  box_height {{parent.Line.Radius*2}}
  box_fixed true
  resize fill
  filter impulse
  name Reformat3
  xpos -480
  ypos -730
 }
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -480
  ypos -682
 }
 Transform {
  translate {{parent.pt1.x x1 66} {parent.pt1.y-(parent.Tickness) x1 174}}
  rotate {{parent.Line.angle}}
  center {0 {parent.Tickness}}
  filter Parzen
  name Transform2
  xpos -480
  ypos -634
 }
push $Na5f40b0
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  note_font Helvetica
  xpos -480
  ypos -561
  disable {{!parent.draw_line x1 1}}
 }
 Dot {
  name Dot2
  xpos -336
  ypos -558
 }
 Dot {
  name Dot1
  xpos -116
  ypos -558
 }
set Na70ef80 [stack 0]
 Dot {
  name Dot7
  xpos 104
  ypos -558
 }
 ContactSheet {
  inputs 2
  width {{Input.width i}}
  height {{Input.height*2 i}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos 70
  ypos -16
 }
 Dot {
  name Dot11
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos 104
  ypos 282
 }
push $Na6b6d10
push $Na70ef80
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -150
  ypos -16
 }
 Dot {
  name Dot15
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos 282
 }
push $Na6a2790
push $Na6a2790
 ChannelMerge {
  inputs 2
  A rgba.red
  B rgba.green
  name ChannelMerge1
  xpos -590
  ypos 98
 }
set Na73a590 [stack 0]
push $Na73a590
 ChannelMerge {
  inputs 2
  B rgba.blue
  name ChannelMerge2
  xpos -590
  ypos 170
 }
 Dot {
  name Dot17
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos 282
 }
set Na753ca0 [stack 0]
push $Na5ef3e0
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos 278
 }
push $Na753ca0
 Switch {
  inputs 4
  which {{parent.plot}}
  name switch_plot_type
  xpos -810
  ypos 422
 }
 Output {
  name Output1
  xpos -810
  ypos 662
 }
end_group
Group {
 inputs 0
 name GamutCompress
 label "\[value method]: \[value direction]"
 xpos 11070
 ypos 3056
 addUserKnob {20 GamutCompress}
 addUserKnob {41 method T compress.method}
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {41 threshold T compress.threshold}
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {41 cyan T compress.cyan}
 addUserKnob {41 magenta T compress.magenta}
 addUserKnob {41 yellow T compress.yellow}
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -226
 }
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Na787130 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -260
  ypos -129
 }
set Na790ce0 [stack 0]
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -78
 }
set Na79e810 [stack 0]
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 114
 }
push $Na79e810
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -150
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
set Na7a8740 [stack 0]
 Dot {
  name Dot7
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos 66
 }
push $Na790ce0
push $Na787130
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -129
 }
push $Na7a8740
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Group {
  name compress
  knobChanged "from math import (pow, exp, log, tan, atan, atanh, cos, pi, fabs)\n\ndef i_log(x):\n    return (exp((1-t+t*log(1-x)-x*t*log(1-x))/(t*(1-x))))*t+x*t-k\ndef i_exp(x):\n    return -log((-x+1)/(t-x))*(-t+x)+t-k\ndef i_atan(x):\n    return (2*tan((pi*(1-t))/(2*(x-t)))*(x-t))/pi+t-k\ndef i_tanh(x):\n    return atanh((1-t)/(x-t))*(x-t)+t-k\ndef sign(x):\n    return 0 if x == 0 else 1 if x > 0 else -1\n\ndef bisect(f, a, b):\n    if sign(f(a)) == sign(f(b)): \n        # bad estimate. return something close to linear\n        if method == 'exp' or method == 'log':\n            return -100\n        else: \n            return 1.99999\n    c = (a+b)/2.0\n    y = f(c)\n    if y == 0:\n        return c # lucky guess\n    n = 1\n    while fabs(y) > tol and n <= nmax:\n        if sign(y) == sign(f(a)):\n            a = c\n        else:\n            b = c\n        c = (a+b)/2.0\n        y = f(c)\n        n += 1\n    return c\n\ndef calc():\n    a = 1.0001\n    b = 5\n    if method == 'log':\n        f = i_log\n        a = -50\n        b = 0.98\n    elif method == 'exp':\n        f = i_exp\n    elif method == 'atan':\n        f = i_atan\n    elif method == 'tanh':\n        f = i_tanh\n        a = 1.000001\n    lim = bisect(f, a, b)\n    return lim\n\n\nn = nuke.thisNode()\nknob = nuke.thisKnob()\n\nt = 1-n\['threshold'].getValue()\nmethod = n\['method'].value()\n\ntol = 1e-3\nnmax = 100\n\nn.begin()\nif n\['method'].value() != 'reinhard':\n    k_knobs = \['cyan', 'magenta', 'yellow']\n    lim_knobs = \['lim_x', 'lim_y', 'lim_z']\n    if knob.name() in k_knobs:\n        lim_knob = lim_knobs\[k_knobs.index(knob.name())]\n        k = knob.getValue()+1\n        lim = calc()\n        n\[lim_knob].setValue(lim)\n    elif knob.name() == 'method' or knob.name() == 'threshold':\n        for i, lknob in enumerate(lim_knobs):\n            k = n\[k_knobs\[i]].getValue()+1\n            lim = calc()\n            n\[lknob].setValue(lim)\n            \nn.end()"
  note_font Helvetica
  xpos -40
  ypos -9
  addUserKnob {20 compress}
  addUserKnob {4 method M {log reinhard exp atan tanh ""}}
  addUserKnob {7 threshold R 0 0.3}
  threshold 0.2
  addUserKnob {7 cyan}
  cyan 0.2
  addUserKnob {7 magenta}
  magenta 0.2
  addUserKnob {7 yellow}
  yellow 0.2
  addUserKnob {26 ""}
  addUserKnob {7 lim_x R -5 2}
  lim_x 0.8010845947
  addUserKnob {7 lim_y R -5 2}
  lim_y 0.8010845947
  addUserKnob {7 lim_z R -5 2}
  lim_z 0.8010845947
  addUserKnob {26 ""}
  addUserKnob {6 invert +STARTLINE}
  invert {{parent.direction}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -202
  }
  Dot {
   name Dot2
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xff
   xpos -6
   ypos -102
  }
set Na7ee080 [stack 0]
  Dot {
   name Dot1
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xff
   xpos 324
   ypos -30
  }
set Na7f2d50 [stack 0]
  Expression {
   expr0 r<thr?r:thr+(lim_x-thr)*log((1+(r/(lim_x-thr)-thr/(lim_x-thr)))/(1-(r/(lim_x-thr)-thr/(lim_x-thr))))/2
   expr1 g<thr?g:thr+(lim_y-thr)*log((1+(g/(lim_y-thr)-thr/(lim_y-thr)))/(1-(g/(lim_y-thr)-thr/(lim_y-thr))))/2
   expr2 b<thr?b:thr+(lim_z-thr)*log((1+(b/(lim_z-thr)-thr/(lim_z-thr)))/(1-(b/(lim_z-thr)-thr/(lim_z-thr))))/2
   name uncompress_tanh
   note_font Helvetica
   xpos 510
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na7f2d50
  Expression {
   temp_name0 pi
   temp_expr0 3.14159265359
   expr0 r<thr?r:thr+(lim_x-thr)*2/pi*tan(pi/2*(r-thr)/(lim_x-thr))
   expr1 g<thr?g:thr+(lim_y-thr)*2/pi*tan(pi/2*(g-thr)/(lim_y-thr))
   expr2 b<thr?b:thr+(lim_z-thr)*2/pi*tan(pi/2*(b-thr)/(lim_z-thr))
   name uncompress_atan
   xpos 400
   ypos 38
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na7f2d50
  Expression {
   expr0 r<thr?r:-log((r-lim_x)/(thr-lim_x))*(-thr+lim_x)+thr
   expr1 g<thr?g:-log((g-lim_y)/(thr-lim_y))*(-thr+lim_y)+thr
   expr2 b<thr?b:-log((b-lim_z)/(thr-lim_z))*(-thr+lim_z)+thr
   name uncompress_exp
   note_font Helvetica
   xpos 290
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na7f2d50
  Expression {
   expr0 r<thr?r:(thr+1/(1/(r-thr)-1/(1-thr)+1/(lim_x-thr)))
   expr1 g<thr?g:(thr+1/(1/(g-thr)-1/(1-thr)+1/(lim_y-thr)))
   expr2 b<thr?b:(thr+1/(1/(b-thr)-1/(1-thr)+1/(lim_z-thr)))
   name uncompress_reinhard
   note_font Helvetica
   xpos 180
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.compress_reinhard.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.compress_reinhard.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.compress_reinhard.lim_z}}
  }
push $Na7f2d50
  Expression {
   expr0 r<thr?r:exp((r-thr+thr*log(1-lim_x)-lim_x*thr*log(1-lim_x))/(thr*(1-lim_x)))*thr+lim_x*thr
   expr1 "g<thr?g:exp((g-thr+thr*log(1-lim_y)-lim_y*thr*log(1-lim_y))/(thr*(1-lim_y)))*thr+lim_y*thr\n"
   expr2 b<thr?b:exp((b-thr+thr*log(1-lim_z)-lim_z*thr*log(1-lim_z))/(thr*(1-lim_z)))*thr+lim_z*thr
   name uncompress_log
   note_font Helvetica
   xpos 70
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
  Switch {
   inputs 5
   which {{parent.method}}
   name switch_method1
   note_font Helvetica
   xpos 290
   ypos 135
  }
push $Na7ee080
  Dot {
   name Dot6
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xff
   xpos -336
   ypos -30
  }
set Na8501a0 [stack 0]
  Expression {
   expr0 r<thr?r:thr+(lim_x-thr)*tanh(((r-thr)/(lim_x-thr)))
   expr1 g<thr?g:thr+(lim_y-thr)*tanh(((g-thr)/(lim_y-thr)))
   expr2 b<thr?b:thr+(lim_z-thr)*tanh(((b-thr)/(lim_z-thr)))
   name compress_tanh
   note_font Helvetica
   xpos -150
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na8501a0
  Expression {
   temp_name0 pi
   temp_expr0 3.14159265359
   expr0 r<thr?r:thr+(lim_x-thr)*2/pi*atan(pi/2*(r-thr)/(lim_x-thr))
   expr1 g<thr?g:thr+(lim_y-thr)*2/pi*atan(pi/2*(g-thr)/(lim_y-thr))
   expr2 b<thr?b:thr+(lim_z-thr)*2/pi*atan(pi/2*(b-thr)/(lim_z-thr))
   name compress_atan
   xpos -260
   ypos 38
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na8501a0
  Expression {
   expr0 r<thr?r:lim_x-(lim_x-thr)*exp(-(((r-thr)*((lim_x)/(lim_x-thr))/lim_x)))
   expr1 g<thr?g:lim_y-(lim_y-thr)*exp(-(((g-thr)*((lim_y)/(lim_y-thr))/lim_y)))
   expr2 b<thr?b:lim_z-(lim_z-thr)*exp(-(((b-thr)*((lim_z)/(lim_z-thr))/lim_z)))
   name compress_exp
   note_font Helvetica
   xpos -370
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
push $Na8501a0
  Expression {
   expr0 r<thr?r:(thr+1/(1/(r-thr)+1/(1-thr)-1/(lim_x-thr)))
   expr1 g<thr?g:(thr+1/(1/(g-thr)+1/(1-thr)-1/(lim_y-thr)))
   expr2 b<thr?b:(thr+1/(1/(b-thr)+1/(1-thr)-1/(lim_z-thr)))
   name compress_reinhard
   note_font Helvetica
   xpos -480
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.cyan+1}}
   addUserKnob {7 lim_y}
   lim_y {{parent.magenta+1}}
   addUserKnob {7 lim_z}
   lim_z {{parent.yellow+1}}
  }
push $Na8501a0
  Expression {
   expr0 r<thr?r:thr*log(r/thr-lim_x)-lim_x*thr*log(r/thr-lim_x)+thr-thr*log(1-lim_x)+lim_x*thr*log(1-lim_x)
   expr1 g<thr?g:thr*log(g/thr-lim_y)-lim_y*thr*log(g/thr-lim_y)+thr-thr*log(1-lim_y)+lim_y*thr*log(1-lim_y)
   expr2 b<thr?b:thr*log(b/thr-lim_z)-lim_z*thr*log(b/thr-lim_z)+thr-thr*log(1-lim_z)+lim_z*thr*log(1-lim_z)
   name compress_log
   note_font Helvetica
   xpos -590
   ypos 39
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 thr t "complement of threshold"}
   thr {{1-parent.threshold}}
   addUserKnob {7 lim_x}
   lim_x {{parent.lim_x}}
   addUserKnob {7 lim_y}
   lim_y {{parent.lim_y}}
   addUserKnob {7 lim_z}
   lim_z {{parent.lim_z}}
  }
  Switch {
   inputs 5
   which {{parent.method}}
   name switch_method
   note_font Helvetica
   xpos -370
   ypos 135
  }
  Switch {
   inputs 2
   which {{parent.invert}}
   name switch_reverse
   xpos -40
   ypos 278
  }
  Output {
   name Output
   xpos -40
   ypos 422
  }
 end_group
 Merge2 {
  inputs 2
  operation multiply
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge5
  note_font Helvetica
  xpos -40
  ypos 111
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
Group {
 inputs 0
 name GamutCompress_blink
 label "\[value method] : \[value direction]"
 xpos 11180
 ypos 3056
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.2
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.2
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_aces-ap1-gamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read63
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7660
 ypos 5693
 postage_stamp false
}
Reformat {
 format "2048 2048 0 0 2048 2048 1 square_2K"
 name Reformat1
 note_font Helvetica
 xpos 7660
 ypos 5746
}
Dot {
 name Dot118
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 5866
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_spectrum-locus.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read64
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7770
 ypos 5693
 postage_stamp false
}
Reformat {
 format "2048 2048 0 0 2048 2048 1 square_2K"
 name Reformat2
 note_font Helvetica
 xpos 7770
 ypos 5746
}
Dot {
 name Dot119
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7804
 ypos 5818
}
ColorWheel {
 inputs 0
 format "4096 4096 0 0 4096 4096 1 square_4K"
 edgeValue 0
 name ColorWheel5
 note_font Helvetica
 xpos 7990
 ypos 5247
}
Unpremult {
 name Unpremult2
 note_font Helvetica
 xpos 7990
 ypos 5343
}
Saturation {
 saturation 4
 mode Average
 name Saturation3
 label "\[value saturation]"
 note_font Helvetica
 xpos 7990
 ypos 5386
}
Group {
 inputs 0
 name GamutGrid1
 xpos 8210
 ypos 5439
 postage_stamp true
 addUserKnob {20 GamutGrid}
 addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
 gamut "Filmlight E-Gamut"
 addUserKnob {4 style M {dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density R 10 150}
 density 100
 addUserKnob {4 output t "choose pixel output type\n" M {rgb xyz ""}}
 addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
 addUserKnob {20 chromaticities_grp l "" +STARTLINE n 1}
 chromaticities_grp 0
 addUserKnob {41 rxy T ColorMatrix.rxy}
 addUserKnob {41 gxy T ColorMatrix.gxy}
 addUserKnob {41 bxy T ColorMatrix.bxy}
 addUserKnob {41 wxy T ColorMatrix.wxy}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {20 endGroup n -1}
}
 ColorWheel {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  centerSaturation 1
  fillFormat false
  area {-170 -158 682 670}
  name ColorWheel4
  xpos -260
  ypos 14
  postage_stamp false
 }
 Crop {
  box {0 0 512 512}
  crop false
  name Crop2
  xpos -260
  ypos 38
 }
 Reformat {
  type scale
  scale {{max(parent.density/50,0.25)}}
  resize distort
  filter impulse
  pbb true
  name Reformat3
  note_font "Bitstream Vera Sans"
  xpos -260
  ypos 62
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -226
  ypos 114
 }
set Naa29e90 [stack 0]
push $Naa29e90
 ContactSheet {
  inputs 2
  width {{width*columns}}
  height {{height/pixel_aspect*rows}}
  rows 1
  columns 2
  roworder TopBottom
  name ContactSheet2
  xpos -260
  ypos 158
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -226
  ypos 282
 }
 ColorWheel {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  fillFormat false
  area {40 40 472 472}
  name ColorWheel1
  xpos -40
  ypos -658
  postage_stamp false
 }
 Reformat {
  type scale
  scale {{max(parent.density/50,0.25)}}
  resize distort
  filter impulse
  pbb true
  name Reformat1
  note_font "Bitstream Vera Sans"
  xpos -40
  ypos -634
 }
 Crop {
  box {0 0 {width} {height}}
  reformat true
  name Crop1
  note_font "Bitstream Vera Sans"
  xpos -40
  ypos -610
 }
 Unpremult {
  name Unpremult1
  xpos -40
  ypos -514
 }
 ColorMatrix {
  matrix {
      {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
      {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
      {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
    }
  invert {{parent.invert}}
  name ColorMatrix
  label "RGB to XYZ"
  xpos -40
  ypos -439
  addUserKnob {20 Gamut}
  addUserKnob {3 which}
  which {{parent.gamut}}
  addUserKnob {12 rxy +DISABLED}
  rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
  addUserKnob {12 gxy +DISABLED}
  gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
  addUserKnob {12 bxy +DISABLED}
  bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
  addUserKnob {12 wxy +DISABLED}
  wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -40
  ypos -352
 }
set Naa87850 [stack 0]
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos -342
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression10
  label "CIE Yxy to CIELuv"
  xpos -589
  ypos -319
  disable {{!parent.distribution}}
 }
 Expression {
  expr0 r
  expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
  expr2 "hypot(g-white.x, b-white.y)"
  expr3 a
  name Expression11
  xpos -590
  ypos -250
  cached true
  addUserKnob {20 User}
  addUserKnob {12 white}
  white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
 }
set Naac02a0 [stack 0]
 Posterize {
  channels rgb
  Colors {{rint(parent.density/3*2)}}
  name Posterize1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos -202
 }
set Naacfdc0 [stack 0]
push $Naac02a0
 Dot {
  name Dot15
  note_font "Bitstream Vera Sans"
  xpos -446
  ypos -222
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy1
  xpos -480
  ypos -136
 }
push $Naacfdc0
push $Naac02a0
 Dot {
  name Dot16
  note_font "Bitstream Vera Sans"
  xpos -666
  ypos -222
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.green
  name Copy2
  xpos -700
  ypos -136
 }
 ContactSheet {
  inputs 2
  width {{width*columns}}
  height {{height/pixel_aspect*rows}}
  rows 1
  columns 2
  center true
  roworder TopBottom
  name ContactSheet3
  xpos -590
  ypos -82
 }
 Expression {
  expr0 r
  expr1 cos(radians(g*360))*b+white.x
  expr2 sin(radians(g*360))*b+white.y
  expr3 a
  name Expression12
  xpos -590
  ypos -46
  cached true
  addUserKnob {20 User}
  addUserKnob {12 white}
  white {{parent.Expression11.white} {parent.Expression11.white}}
 }
 Expression {
  expr0 r
  expr1 "9*g / ( 6*g - 16*b + 12)"
  expr2 "4*b/ ( 6*g - 16*b + 12)"
  name Expression13
  label "CIELuv to CIE Yxy"
  xpos -592
  ypos -12
  disable {{!parent.distribution}}
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -590
  ypos 32
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to RGB"
  xpos -590
  ypos 80
 }
 Clamp {
  channels rgba
  maximum_enable false
  name ClampMin2
  xpos -590
  ypos 118
 }
 Clamp {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  minimum 1
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 152
 }
 Premult {
  name Premult1
  xpos -590
  ypos 206
 }
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge2
  xpos -590
  ypos 278
 }
 Shuffle {
  alpha white
  name Shuffle1
  label "\[value in] -> \[value out]"
  xpos -590
  ypos 320
 }
 Dot {
  name Dot3
  label " GRID"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
push $Naa29e90
push $Naa87850
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression14
  label "CIE Yxy to CIELuv"
  xpos -40
  ypos -302
  disable {{!parent.distribution}}
 }
 Expression {
  expr0 r
  expr1 rint(g*Colors)/Colors
  expr2 rint(b*Colors)/Colors
  expr3 a
  name Expression1
  label rint
  note_font "Bitstream Vera Sans"
  xpos -40
  ypos -248
  addUserKnob {20 User}
  addUserKnob {7 Colors R 1 256}
  Colors {{parent.density}}
 }
 Expression {
  expr0 r
  expr1 "9*g / ( 6*g - 16*b + 12)"
  expr2 "4*b/ ( 6*g - 16*b + 12)"
  name Expression3
  label "CIELuv to CIE Yxy"
  xpos -40
  ypos -190
  disable {{!parent.distribution}}
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -40
  ypos -142
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to RGB"
  xpos -40
  ypos -72
 }
 Clamp {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  minimum 1
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp4
  note_font "Bitstream Vera Sans"
  xpos -40
  ypos -16
 }
 Premult {
  name Premult2
  xpos -40
  ypos 38
 }
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge1
  xpos -40
  ypos 110
 }
 Clamp {
  channels rgba
  maximum_enable false
  name ClampMin1
  xpos -40
  ypos 182
 }
 Dot {
  name Dot4
  label " DOTS"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 378
 }
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch1
  xpos -260
  ypos 494
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "RGB to XYZ"
  xpos -260
  ypos 560
  disable {{!parent.output}}
 }
 Output {
  name Output
  xpos -260
  ypos 734
 }
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  area {40 40 472 472}
  name ColorWheel2
  xpos -40
  ypos -706
  postage_stamp false
 }
end_group
Switch {
 inputs 2
 which 1
 name Switch2
 note_font Helvetica
 xpos 7990
 ypos 5463
 disable true
}
Group {
 name ChromaticityConverter_live3
 tile_color 0xbd91c9ff
 label "\[if \{\[value invert]\} \{return \"\[value dst_colorspace_name] to \[value src_colorspace_name]\"\} else \{return \"\[value src_colorspace_name] to \[value dst_colorspace_name]\"\}]"
 xpos 7990
 ypos 5568
 addUserKnob {20 ChromaticityConverter_tab l ChromaticityConverter}
 addUserKnob {26 colorspace_chromaticities_label l " " T "<b>Src Colorspace Chromaticities</b>"}
 addUserKnob {35 src_presets l preset M {colorspace/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} src_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.31270 0.32900\} src_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.31270 0.32900\} src_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} src_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.31270 0.32900\} src_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.31400 0.35100\} src_colorspace_name \{P3DCI\}\}" colorspace/ArriAlexaWideGamut "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 -0.10200\} wxy \{0.31270 0.32900\} src_colorspace_name \{ArriAlexaWideGamut\}\}" "colorspace/AdobeRGB\t" "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.3290\} src_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} src_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} src_colorspace_name \{ProPhotoRGB\}\}" colorspace/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} src_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.3290\} src_colorspace_name \{REDWideGamutRGB\}\}" colorspace/GoProProtune "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} src_colorspace_name \{GoProProtune\}\}" colorspace/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} src_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.3290\} src_colorspace_name \{PanasonicVGamut\}\}" colorspace/XYZ "knobs this \{rxy \{0 0\} gxy \{0 0\} bxy \{0 0\} wxy \{0 0\} src_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 rxy l r T _knobchanged_.rxy}
 addUserKnob {41 gxy l g T _knobchanged_.gxy}
 addUserKnob {41 bxy l b T _knobchanged_.bxy}
 addUserKnob {41 wxy l w T _knobchanged_.wxy}
 addUserKnob {1 src_colorspace_name l src +DISABLED}
 src_colorspace_name "Filmlight E-Gamut"
 addUserKnob {26 ""}
 addUserKnob {26 dst_colorspace_chromaticities_label l " " T "<b>Dst Colorspace Chromaticities</b>"}
 addUserKnob {35 dst_presets l preset M {colorspace/ACES "knobs this \{drxy \{0.73470 0.26530\} dgxy \{0.00000 1.00000\} dbxy \{0.00010 -0.07700\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{drxy \{0.713 0.293\} dgxy \{0.165 0.830\} dbxy \{0.128 0.044\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ drxy \{0.8 0.3177\} dgxy \{0.18 0.9\} dbxy \{0.065 -0.0805\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{drxy \{0.64000 0.33000\} dgxy \{0.30000 0.60000\} dbxy \{0.15000 0.06000\} dwxy \{0.31270 0.32900\} dst_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.31270 0.32900\} dst_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.31270 0.32900\} dst_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.31400 0.35100\} dst_colorspace_name \{P3DCI\}\}" colorspace/ArriAlexaWideGamut "knobs this \{drxy \{0.68400 0.31300\} dgxy \{0.22100 0.84800\} dbxy \{0.08610 -0.10200\} dwxy \{0.31270 0.32900\} dst_colorspace_name \{ArriAlexaWideGamut\}\}" "colorspace/AdobeRGB\t" "knobs this \{drxy \{0.6400 0.3300\} dgxy \{0.2100 0.7100\} dbxy \{0.1500 0.0600\} dwxy \{0.3127 0.3290\} dst_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{drxy \{0.7347 0.2653\} dgxy \{0.1152 0.8264\} dbxy \{0.1566 0.0177\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01  8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{drxy \{0.734699 0.265301\} dgxy \{0.159597 0.840403\} dbxy \{0.036598 0.000105\} dwxy \{0.345704 0.358540\} dst_colorspace_name \{ProPhotoRGB\}\}" colorspace/REDDRAGONcolor "knobs this \{drxy \{0.753044222785 0.327830576682\} dgxy \{0.299570228481 0.700699321956\} dbxy \{0.079642066735 -0.0549379510888\} dwxy \{0.321683187724 0.337673316035\} dst_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{drxy \{0.753044491143 0.327831029513\} dgxy \{0.299570490451 0.700699415614\} dbxy \{0.145011584278 0.0510971250879\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{drxy \{0.699747001291 0.329046930313\} dgxy \{0.304264039024 0.623641145129\} dbxy \{0.134913961296 0.0347174412813\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{drxy \{0.878682510476 0.32496400741\} dgxy \{0.300888714367 0.679054755791\} dbxy \{0.0953986946056 -0.0293793268343\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{drxy \{0.701181035906 0.329014155583\} dgxy \{0.300600304652 0.683788834269\} dbxy \{0.108154455624 -0.00868817578666\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{drxy \{0.701180591892 0.329013699116\} dgxy \{0.300600395529 0.683788824257\} dbxy \{0.145331946229 0.0516168036226\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{drxy \{0.780308 0.304253\} dgxy \{0.121595 1.493994\} dbxy \{0.095612 -0.084589\} dwxy \{0.3127 0.3290\} dst_colorspace_name \{REDWideGamutRGB\}\}" colorspace/GoProProtune "knobs this \{drxy \{0.69848046 0.19302645\} dgxy \{0.32955538 1.02459662\} dbxy \{0.10844263 -0.03467857\} dwxy \{0.3127 0.329\} dst_colorspace_name \{GoProProtune\}\}" colorspace/CanonCinemaGamut "knobs this \{drxy \{0.74 0.27\} dgxy \{0.17 1.14\} dbxy \{0.08 -0.1\} dwxy \{0.3127 0.329\} dst_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{drxy \{0.73 0.28\} dgxy\{0.14 0.855\} dbxy \{0.1 -0.05\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{drxy \{0.766 0.275\} dgxy \{0.225 0.8\} dbxy \{0.089 -0.087\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{drxy \{0.730 0.280\} dgxy \{0.165 0.840\} dbxy \{0.100 -0.030\} dwxy \{0.3127 0.3290\} dst_colorspace_name \{PanasonicVGamut\}\}" colorspace/XYZ "knobs this \{drxy \{0 0\} dgxy \{0 0\} dbxy \{0 0\} dwxy \{0 0\} dst_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 drxy l r T _knobchanged_.drxy}
 addUserKnob {41 dgxy l g T _knobchanged_.dgxy}
 addUserKnob {41 dbxy l b T _knobchanged_.dbxy}
 addUserKnob {41 dwxy l w T _knobchanged_.dwxy}
 addUserKnob {1 dst_colorspace_name l dst +DISABLED}
 dst_colorspace_name ACEScg
 addUserKnob {26 ""}
 addUserKnob {26 chromatic_adaptation_label l " " T "<b>Chromatic Adaptation</b>"}
 addUserKnob {41 cat_method l method T _knobchanged_.cat_method}
 addUserKnob {26 ""}
 addUserKnob {41 invert T _knobchanged_.invert}
 addUserKnob {22 create_matrix_node l "Create Matrix" t "Create ColorMatrix node with the current values." T "node = nuke.thisNode()\nnode\['calculate_matrix'].execute()\nnuke.root().begin()\n_ = \[n.setSelected(False) for n in nuke.allNodes(recurseGroups=True)]\nm = nuke.createNode('ColorMatrix')\nm\['matrix'].setValue(node\['matrix'].getValue())\nm.setXYpos(node.xpos()-120, node.ypos())\nm\['label'].setValue(node\['label'].getValue())" +STARTLINE}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {22 clear l Clear T "n = nuke.thisNode()\nn\['matrix'].setValue(\[1,0,0,0,1,0,0,0,1])\nn\['label'].setValue('')" +STARTLINE}
 addUserKnob {22 show_matrix l Show t "Show matrix values in a popup window for copying." T "node = nuke.thisNode()\nshow_4x4 = node\['show_matrix_4x4'].getValue()\nshow_commas = node\['show_matrix_commas'].getValue()\n\nif show_commas:\n    sep = ', '\nelse:\n    sep = ' '\n\nmtx = \[format(i, '.8f') for i in node\['matrix'].getValue()]\n\nif show_4x4:\n    z = \['0']\n    mtx = mtx\[0:3] + z + mtx\[3:6] + z + mtx\[6:9] + z*4 + \['1']\n\nnuke.message(sep.join(mtx))" +STARTLINE}
 addUserKnob {6 show_matrix_4x4 l "show 4x4" t "present values in a 4x4 matrix (useful for ocio)" -STARTLINE}
 addUserKnob {6 show_matrix_commas l "show comma sep" t "show matrix comma separated." -STARTLINE}
 addUserKnob {22 save_spimtx l "Save spimtx" T "# inspired by ColorMatrixPlus by hpd\ndef write_spimtx(mtx_node, spimtx_file):\n    mtx_vals = mtx_node\['matrix'].getValue()\n    with open(spimtx_file, \"w\") as f:\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[0], mtx_vals\[1], mtx_vals\[2]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[3], mtx_vals\[4], mtx_vals\[5]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[6], mtx_vals\[7], mtx_vals\[8]) )\n\nnode = nuke.thisNode()\nfilepath = nuke.getFilename('Save Matrix', '*.spimtx')\n\nif filepath:\n    if not filepath.endswith('.spimtx'):\n        filepath = filepath + '.spimtx'\n    write_spimtx(node, filepath)" +STARTLINE}
 addUserKnob {22 load_spimtx l "Load spimtx" -STARTLINE T "# Inspired by ColorMatrixPlus by hpd\ndef load_spimtx(spimtx, mtx_node):\n    with open( spimtx, 'r') as file:\n        lines = file.readlines()\n    matrix_values = list()\n    for line in lines:\n        matrix_values.extend( map(float, line.strip().split(' ')\[0:3]) )\n    mtx_node\['matrix'].setValue(matrix_values)\n\nspimtx = nuke.getFilename('Load SPIMTX', '*.spimtx')\nif spimtx:\n    load_spimtx( spimtx, nuke.thisNode() )\n"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 206
 }
 Dot {
  name _knobchanged_
  knobChanged "import nuke\nfloat2 = nuke.math.Vector2\nfloat3 = nuke.math.Vector3\nfloat3x3 = nuke.math.Matrix3\n\nCONE_RESP_MAT_BRADFORD = float3x3()\nCONE_RESP_MAT_CAT02 = float3x3()\nCONE_RESP_MAT_VONKRIES = float3x3()\nCONE_RESP_MAT_SHARP = float3x3()\nCONE_RESP_MAT_CMCCAT2000 = float3x3()\n\n# From ACESlib.Utilities_Color : 166\nCONE_RESP_MAT_BRADFORD.set(0.89510, -0.75020,  0.03890, 0.26640,  1.71350, -0.06850, -0.16140,  0.03670,  1.02960)\nCONE_RESP_MAT_CAT02.set(0.73280, -0.70360,  0.00300, 0.42960,  1.69750,  0.01360, -0.16240, 0.00610, 0.98340)\n\n# https://web.stanford.edu/~sujason/ColorBalancing/adaptation.html\n# from S. Bianco. \"Two New von Kries Based Chromatic Adapatation Transforms Found by Numerical Optimization.\"\nCONE_RESP_MAT_VONKRIES.set(0.40024, -0.2263, 0, 0.7076, 1.16532, 0, -0.08081, 0.0457, 0.91822)\nCONE_RESP_MAT_SHARP.set(1.2694, -0.8364, 0.0297, -0.0988, 1.8006, -0.0315, -0.1706, 0.0357, 1.0018)\nCONE_RESP_MAT_CMCCAT2000.set(0.7982, -0.5918, 0.0008, 0.3389, 1.5512, 0.239, -0.1371, 0.0406, 0.9753)\n\n\ndef transpose(mtx):\n    # transpose (swap rows to columns) of a 3x3 matrix\n    order = \[0, 3, 6, 1, 4, 7, 2, 5, 8]\n    omtx = float3x3()\n    for i in xrange(9):\n        omtx\[i] = mtx\[order\[i]]\n    return omtx\n\ndef mult_f33_f33(A, B):\n    # Calculate multiplication of 3x3 matrix A and 3x3 matrix B\n    C = float3x3()\n    C.makeIdentity()\n\n    # Row 1\n    C\[0] = (A\[0]*B\[0] + A\[1]*B\[3] + A\[2]*B\[6])\n    C\[1] = (A\[0]*B\[1] + A\[1]*B\[4] + A\[2]*B\[7])\n    C\[2] = (A\[0]*B\[2] + A\[1]*B\[5] + A\[2]*B\[8])\n    # Row 2\n    C\[3] = (A\[3]*B\[0] + A\[4]*B\[3] + A\[5]*B\[6])\n    C\[4] = (A\[3]*B\[1] + A\[4]*B\[4] + A\[5]*B\[7])\n    C\[5] = (A\[3]*B\[2] + A\[4]*B\[5] + A\[5]*B\[8])\n    # Row 3\n    C\[6] = (A\[6]*B\[0] + A\[7]*B\[3] + A\[8]*B\[6])\n    C\[7] = (A\[6]*B\[1] + A\[7]*B\[4] + A\[8]*B\[7])\n    C\[8] = (A\[6]*B\[2] + A\[7]*B\[5] + A\[8]*B\[8])\n\n    return C;\n\n\ndef mult_f3_f33(src, mtx):\n    return float3(mtx\[0] * src\[0] + mtx\[1] * src\[1] + \n    mtx\[2] * src\[2], mtx\[3] * src\[0] + mtx\[4] * src\[1] + \n    mtx\[5] * src\[2], mtx\[6] * src\[0] + mtx\[7] * src\[1] + \n    mtx\[8] * src\[2])\n\n\ndef XYZ_2_xyY(XYZ):\n    xyY = float3()\n    divisor = (XYZ\[0] + XYZ\[1] + XYZ\[2])\n    if (divisor == 0.):\n        divisor = 1e-10\n    xyY.set(XYZ\[0] / divisor, XYZ\[1] / divisor, XYZ\[1])\n    return xyY\n\n\ndef xyY_2_XYZ(xyY):\n    XYZ = float3()\n    XYZ.set(\n        xyY\[0] * xyY\[2] / max( xyY\[1], 1e-10), \\\n        xyY\[2], \\\n        (1.0 - xyY\[0] - xyY\[1]) * xyY\[2] / max( xyY\[1], 1e-10)\n        )\n    return XYZ\n\n\ndef calculate_cat_matrix(src_xy, des_xy, coneRespMat=CONE_RESP_MAT_BRADFORD):\n    # Calculates and returns a 3x3 Von Kries chromatic adaptation transform \n    # from src_xy to des_xy using the cone response primaries defined \n    # by coneRespMat. By default, coneRespMat is set to CONE_RESP_MAT_BRADFORD. \n    # The default coneRespMat can be overridden at runtime. \n\n    src_xyY = float3(src_xy\[0], src_xy\[1], 1.0)\n    des_xyY = float3(des_xy\[0], des_xy\[1], 1.0)\n\n    src_XYZ = xyY_2_XYZ( src_xyY )\n    des_XYZ = xyY_2_XYZ( des_xyY )\n\n    src_coneResp = mult_f3_f33(src_XYZ, coneRespMat)\n    des_coneResp = mult_f3_f33(des_XYZ, coneRespMat)\n\n    vkMat = float3x3()\n    vkMat.set(\n        des_coneResp\[0] / src_coneResp\[0], 0.0, 0.0,\n        0.0, des_coneResp\[1] / src_coneResp\[1], 0.0,\n        0.0, 0.0, des_coneResp\[2] / src_coneResp\[2]\n        )\n\n    cat_matrix = float3x3()\n    coneRespMatInv = coneRespMat.inverse()\n    cat_matrix = coneRespMat * ( vkMat * coneRespMatInv)\n    \n    return cat_matrix\n\n\ndef RGBtoXYZ(xy, Y=1.0, inverse=False):\n    # given r g b chromaticities and whitepoint, convert RGB colors to XYZ\n    # based on CtlColorSpace.cpp from the CTL source code : 77\n    # param: xy - dict of chromaticity xy coordinates: rxy: float2(x, y) etc\n    # param: Y - luminance of \"white\" - defaults to 1.0\n    # param: inverse - calculate XYZ to RGB instead\n    r = xy\['rxy']\n    g = xy\['gxy']\n    b = xy\['bxy']\n    w = xy\['wxy']\n\n    X = w.x * Y / w.y\n    Z = (1 - w.x - w.y) * Y / w.y\n\n    # Scale factors for matrix rows\n    d = r.x * (b.y - g.y) + b.x * (g.y - r.y) + g.x * (r.y - b.y)\n\n    Sr =    (X * (b.y - g.y) -      \\\n            g.x * (Y * (b.y - 1) +  \\\n            b.y  * (X + Z)) +       \\\n            b.x  * (Y * (g.y - 1) + \\\n            g.y * (X + Z))) / d\n    \n    Sg =    (X * (r.y - b.y) +      \\\n            r.x * (Y * (b.y - 1) +  \\\n            b.y * (X + Z)) -        \\\n            b.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    Sb =    (X * (g.y - r.y) -      \\\n            r.x * (Y * (g.y - 1) +  \\\n            g.y * (X + Z)) +        \\\n            g.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    # Assemble the matrix\n    M = float3x3()\n    M.set(  Sr * r.x, Sr * r.y, Sr * (1 - r.x - r.y),\n            Sg * g.x, Sg * g.y, Sg * (1 - g.x - g.y),\n            Sb * b.x, Sb * b.y, Sb * (1 - b.x - b.y))\n    if inverse:\n        M = M.inverse()\n        return M\n    else:\n        return M\n\n\ndef get_primaries(node, dst=False):\n    # get colorspace chromaticities xy coordinates from node\n    dst_pri = \['drxy', 'dgxy', 'dbxy', 'dwxy']\n    pri = \['rxy', 'gxy', 'bxy', 'wxy']\n    d = \{\}\n    for i, p in enumerate(pri):\n        if dst:\n            d\[p] = float2(node\[dst_pri\[i]].getValue()\[0], node\[dst_pri\[i]].getValue()\[1])\n        else:\n            d\[p] = float2(node\[p].getValue()\[0], node\[p].getValue()\[1])\n    return d\n\n\n\ndef start():\n    node = nuke.thisGroup()\n    \n    identity_mtx = float3x3()\n    identity_mtx.makeIdentity()\n\n    invert = node\['invert'].getValue()\n    label = node\['label']\n    cat_method = node\['cat_method'].value()\n    src_primaries = get_primaries(node)\n    dst_primaries = get_primaries(node, dst=True)\n    src_colorspace_name = node\['src_colorspace_name'].getValue()\n    dst_colorspace_name = node\['dst_colorspace_name'].getValue()\n    \n    # Check for XYZ on src / destination\n    enable_src = (src_colorspace_name != 'XYZ')\n    enable_dst = (dst_colorspace_name != 'XYZ')\n    whitepoint_changed = (src_primaries\['wxy']\[0] != dst_primaries\['wxy']\[0] or src_primaries\['wxy']\[1] != dst_primaries\['wxy']\[1])\n\n    # Get chromatic adaptation method\n    if cat_method == 'Bradford':\n        coneRespMat = CONE_RESP_MAT_BRADFORD\n    elif cat_method == 'cat02':\n        coneRespMat = CONE_RESP_MAT_CAT02\n    elif cat_method == 'vonKries Hunt-Pointer-Estevez D65-Normalized':\n        coneRespMat = CONE_RESP_MAT_VONKRIES\n    elif cat_method == 'cmccat2000':\n        coneRespMat = CONE_RESP_MAT_CMCCAT2000\n    elif cat_method == 'sharp':\n        coneRespMat = CONE_RESP_MAT_SHARP\n    elif cat_method == 'None':\n        coneRespMat = identity_mtx\n        whitepoint_changed = False\n\n    if enable_src:\n        # Calculate Source RGB to XYZ matrix\n        src_rgb_to_xyz_mtx = RGBtoXYZ(src_primaries)\n\n    if enable_dst:\n        # Calculate Destination XYZ to RGB matrix\n        dst_xyz_to_rgb_mtx = RGBtoXYZ(dst_primaries, inverse=True)\n\n    if enable_src and not enable_dst:\n        # Convert from Source RGB to XYZ only\n        mtx = src_rgb_to_xyz_mtx\n\n    if enable_dst and not enable_src:\n        # Convert from XYZ to Destination RGB only\n        mtx = dst_xyz_to_rgb_mtx\n\n    if enable_src and enable_dst:\n        if whitepoint_changed:\n            # Calculate chromatic adaptation matrix\n            cat_mtx = calculate_cat_matrix(src_primaries\['wxy'], dst_primaries\['wxy'], coneRespMat=coneRespMat)\n            # We will use our own matrix multiplication algorithm since there seems to be precision issues with the nuke.math module :/\n            # mtx = (cat_mtx * src_rgb_to_xyz_mtx) * dst_xyz_to_rgb_mtx\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, mult_f33_f33(cat_mtx, src_rgb_to_xyz_mtx))\n        else:\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, src_rgb_to_xyz_mtx)\n\n    if invert:\n        mtx = mtx.inverse()\n\n    node\['matrix'].setValue(mtx)\n\n    return True\n\n\n\nn = nuke.thisNode()\ng = nuke.thisGroup()\nk = nuke.thisKnob()\n\nstart()\n"
  tile_color 0x5b0000
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 258
  addUserKnob {20 Knobs}
  addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  rxy {0.8 0.3177}
  addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  gxy {0.18 0.9}
  addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  bxy {0.065 -0.0805}
  addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  wxy {0.3127 0.329}
  addUserKnob {12 drxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  drxy {0.713 0.293}
  addUserKnob {12 dgxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  dgxy {0.165 0.83}
  addUserKnob {12 dbxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  dbxy {0.128 0.044}
  addUserKnob {12 dwxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  dwxy {0.32168 0.33767}
  addUserKnob {4 cat_method l method t "Choose the chromatic adaptation method for adapting whitepoint." M {Bradford cat02 "vonKries Hunt-Pointer-Estevez D65-Normalized" cmccat2000 sharp None}}
  addUserKnob {6 invert t "Invert direction of matrix." +STARTLINE}
 }
 ColorMatrix {
  matrix {
      {1.108112097 0.03140494972 -0.1395167857}
      {-0.01674522832 1.209697127 -0.192951858}
      {-0.08946809173 -0.06806001067 1.157528043}
    }
  name ColorMatrix
  xpos -40
  ypos 302
 }
 Output {
  name Output
  xpos -40
  ypos 350
 }
end_group
Group {
 name GamutCompress_blink1
 label "\[value method] : \[value direction]"
 xpos 7990
 ypos 5648
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method exp
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.15
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.165
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.165
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
set Nac8eea0 [stack 0]
Group {
 name PlotChromaticity5
 label colorwheel
 xpos 7990
 ypos 5744
 addUserKnob {20 PlotGamut_tab l PlotGamut}
 addUserKnob {6 plot_input l "&nbsp;<b>Plot Input Pixels" t "Enable plotting of the input pixels" +STARTLINE}
 plot_input true
 addUserKnob {41 input_gamut t "Set the gamut that the input colors are encoded in" T GamutToXYZ3.gamut}
 addUserKnob {4 diagram t "Choose the type of chromaticity diagram" M {"CIE 1931 xy Chromaticity Diagram" "CIE 1976 u' v' Uniform Chromaticity Scale Diagram" ""}}
 addUserKnob {4 plot_type l "plot type" t "Choose the type of plot rendering.\n\nBlinkScript uses a custom blinkscript plotting node which is very fast.\n\nPositionToPoints renders each pixels as a point in 3D space and renders it through a ScanlineRender node. Much slower and more buggy, but can be useful for visualizing the 3 dimensional aspect of the color data." M {BlinkScript "PositionToPoints + ScanlineRender"}}
 addUserKnob {6 enable_sample_color l "enable sample color" t "Enable plotting of the sampled color below" +STARTLINE}
 addUserKnob {41 sample_color l "sample color" t "sample and plot selected color" T SampleColor.color}
 addUserKnob {22 follow_viewer l "follow viewer" T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('v = nuke.activeViewer().node()\\nif v and v.name() == nuke.thisNode().name():\\n    con = v.input(nuke.activeViewer().activeInput())\\n    plt = nuke.toNode(\"\{0\}\")\\n    plt.setInput(0, con)'.format(n.name()))" +STARTLINE}
 addUserKnob {22 unfollow_viewer l "unfollow viewer" -STARTLINE T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('')"}
 addUserKnob {26 ""}
 addUserKnob {26 plot_dimensions_label l " " T "<b>Plot Dimensions"}
 addUserKnob {7 right_margin l "right margin" R 1 1.5}
 right_margin 1.3
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin 0.08
 addUserKnob {41 output_format l format T Plot_Input.format}
 addUserKnob {6 resample_input l "resample input" t "scale down input - can help speed up plotting for high resolution inputs." +STARTLINE}
 addUserKnob {3 input_width l " " t "width to resample input to" -STARTLINE}
 input_width 2048
 addUserKnob {6 map_overlays_to_input_gamut l "map overlays to input gamut" t "This maps the overlays like the spectral locus, pointer's gamut, and the gamut overlay to the working gamut instead of keeping them as XYZ.\n\nFor example if the input gamut is ACEScg, these overlays will be mapped to that. Note that this can cause most of the overlays to be negative or highly saturated which might harm the visual appearance." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 draw_axis l "&nbsp;&nbsp; <b> Coordinate Grid" t "Draw coordinate grid" +STARTLINE}
 draw_axis true
 addUserKnob {6 full_width_grid l "full width grid" t "Enable full width coordinate grid" +STARTLINE}
 addUserKnob {41 plot_cie_xy_axis_color l "axis color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_color}
 addUserKnob {41 plot_cie_xy_axis_hatch_color l "grid color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_hatch_color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_spectral_locus l " &nbsp;&nbsp; <b> Spectral Locus" t "draw the spectrum locus: the boundary of color the human eye can see." +STARTLINE}
 addUserKnob {6 colorize_spectral_locus l "colorize spectral locus" +STARTLINE}
 addUserKnob {41 spectral_locus_color l color T Fill2.color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_gamut_overlay l " &nbsp;&nbsp; <b> Gamut Overlay" t "draw an overlay of a color gamut (choose gamut below)" +STARTLINE}
 addUserKnob {41 gamut_overlay l gamut t "choose gamut to overlay" T GamutToXYZ_OVERLAY.gamut}
 addUserKnob {4 style t "Choose the style to display the gamut plot" M {boundary dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density t "Density of the grid or points if style is not boundary" R 10 100}
 density 55
 addUserKnob {7 opacity_gamut_overlay l opacity R 0.1 1}
 opacity_gamut_overlay 0.5
 addUserKnob {6 colorize_gamut_boundary l "colorize gamut boundary" t "use a constant color for the gamut overlay instead of the spectral boundary colors." +STARTLINE}
 addUserKnob {41 overlay_gamut_color l color t "gamut boundary fill color, if enabled." T Fill1.color}
 addUserKnob {26 ""}
 addUserKnob {6 enable_pointers_gamut l "&nbsp; <b>Pointers Gamut" t "Enable Pointer's gamut overlay" +STARTLINE}
 addUserKnob {6 enable_pointer_samples l "enable samples" t "show the individual pointer gamut samples" +STARTLINE}
 addUserKnob {6 colorize_pointers_gamut l "colorize pointers gamut" t "set the pointer's gamut colors to a constant" +STARTLINE}
 addUserKnob {41 color T ColorizePointers.color}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "Draw Gamut"
  note_font_size 42
  xpos -2165
  ypos -325
  bdwidth 585
  bdheight 1462
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x222222ff
  label "Draw Spectral Locus"
  note_font_size 42
  xpos -955
  ypos -321
  bdwidth 582
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "Plot Input Pixels"
  note_font_size 42
  xpos 218
  ypos -633
  bdwidth 797
  bdheight 2562
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x202020ff
  label "Pointer's Gamut"
  note_font_size 48
  xpos -1535
  ypos -321
  bdwidth 554
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3a3a3aff
  label "Sample Input Color"
  note_font_size 42
  xpos -112
  ypos 75
  bdwidth 664
  bdheight 714
  z_order 4
 }
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name Camera1
  xpos -708
  ypos 1329
 }
 Input {
  inputs 0
  name Input
  xpos 620
  ypos -490
 }
 AddChannels {
  name AddChannels1
  xpos 620
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{parent.input_width}}
  box_height {{rint(box_width/(input.width/input.height))}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  filter impulse
  name ResampleInput
  xpos 620
  ypos -370
  disable {{!parent.resample_input}}
 }
 Dot {
  name Dot7
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 162
 }
set Nad3e470 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 162
 }
 Group {
  name GamutToXYZ3
  label "\[value gamut] to XYZ\n"
  xpos 730
  ypos 248
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 730
  ypos 296
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression4
  label "CIE Yxy to CIELuv"
  xpos 730
  ypos 344
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot13
  label " Pos"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 618
 }
set Nadac350 [stack 0]
push $Nad3e470
 Dot {
  name Dot16
  label " Col"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 522
 }
set Nadb1430 [stack 0]
 Group {
  inputs 2
  name PlotPoints2
  xpos 730
  ypos 686
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
add_layer {pos pos.red pos.green pos.blue pos.alpha}
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 0.1
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 1266
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -1470
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -1470
  ypos -9
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -1470
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -1470
  ypos 98
 }
 BlackOutside {
  name BlackOutside2
  xpos -1470
  ypos 179
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -1470
  ypos 227
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1436
  ypos 282
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -1250
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -1250
  ypos -10
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -1250
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -1250
  ypos 98
 }
 BlackOutside {
  name BlackOutside3
  xpos -1250
  ypos 179
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -1250
  ypos 228
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1250
  ypos 278
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -1250
  ypos 325
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -1250
  ypos 367
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 402
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -776
  ypos 402
 }
set Naf1ccb0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -700
  ypos -122
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -700
  ypos -80
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -700
  ypos -26
 }
set Naf3abd0 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos -22
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -590
  ypos 16
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 70
 }
 BlackOutside {
  name BlackOutside1
  xpos -590
  ypos 118
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos 194
 }
push $Naf3abd0
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -700
  ypos 16
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -700
  ypos 74
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 136
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -700
  ypos 190
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -700
  ypos 227
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -700
  ypos 279
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -700
  ypos 305
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -700
  ypos 337
  disable {{parent.draw_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 378
 }
set Nb031050 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -590
  ypos 398
  disable {{!parent.enable_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -590
  ypos 493
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 609
 }
set Nb05a090 [stack 0]
push $Naf1ccb0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -810
  ypos 440
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix3
  label "XYZ to working"
  xpos -810
  ypos 478
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.43 1 1}
  unpremult rgba.alpha
  name ColorizePointers
  xpos -810
  ypos 575
  disable {{!parent.colorize_pointers_gamut x1 1}}
 }
push $Nb031050
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 429
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to working"
  xpos -700
  ypos 477
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0.5 1 1}
  unpremult rgba.alpha
  name Fill2
  xpos -700
  ypos 528
  disable {{!parent.colorize_spectral_locus}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -700
  ypos 581
  disable {{!parent.enable_pointers_gamut}}
 }
set Nb0c1d30 [stack 0]
 Group {
  inputs 2
  name PlotPoints1
  xpos -590
  ypos 650
  disable {{!(parent.draw_spectral_locus||parent.enable_pointers_gamut)}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Group {
  inputs 0
  name GamutGrid
  xpos -2054
  ypos 336
  addUserKnob {20 GamutGrid}
  addUserKnob {3 style}
  style {{max(0,parent.style-1)}}
  addUserKnob {3 distribution -STARTLINE}
  distribution {{parent.distribution}}
  addUserKnob {7 density R 10 150}
  density {{parent.density}}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {12 wxy}
  wxy {{parent.GamutToXYZ_OVERLAY.wxy} {parent.GamutToXYZ_OVERLAY.wxy}}
 }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   centerSaturation 1
   fillFormat false
   area {-170 -158 682 670}
   name ColorWheel4
   xpos -260
   ypos 3
   postage_stamp false
  }
  Crop {
   box {0 0 512 512}
   crop false
   name Crop2
   xpos -260
   ypos 29
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat3
   note_font "Bitstream Vera Sans"
   xpos -260
   ypos 110
  }
set Nb125d70 [stack 0]
push $Nb125d70
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   roworder TopBottom
   name ContactSheet2
   xpos -260
   ypos 169
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -226
   ypos 246
  }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   fillFormat false
   area {40 40 472 472}
   name ColorWheel1
   xpos -40
   ypos -664
   postage_stamp false
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -628
  }
  Crop {
   box {0 0 {width} {height}}
   reformat true
   name Crop1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -602
  }
  Unpremult {
   name Unpremult1
   xpos -40
   ypos -526
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos -415
  }
  Colorspace {
   colorspace_in CIE-XYZ
   colorspace_out CIE-Yxy
   name Colorspace1
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -341
  }
set Nb17fc00 [stack 0]
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos -331
  }
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression5
   label "CIE Yxy to CIELuv"
   xpos -590
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
   expr2 "hypot(g-white.x, b-white.y)"
   expr3 a
   name Expression3
   xpos -590
   ypos -261
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
  }
set Nb1ab4c0 [stack 0]
  Posterize {
   channels rgb
   Colors {{rint(parent.density/3*2)}}
   name Posterize1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos -194
  }
set Nb1ba6c0 [stack 0]
push $Nb1ab4c0
  Dot {
   name Dot15
   note_font "Bitstream Vera Sans"
   xpos -446
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   name Copy1
   xpos -480
   ypos -154
  }
push $Nb1ba6c0
push $Nb1ab4c0
  Dot {
   name Dot16
   note_font "Bitstream Vera Sans"
   xpos -666
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   name Copy2
   xpos -700
   ypos -153
  }
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   center true
   roworder TopBottom
   name ContactSheet3
   xpos -590
   ypos -102
  }
  Expression {
   expr0 r
   expr1 cos(radians(g*360))*b+white.x
   expr2 sin(radians(g*360))*b+white.y
   expr3 a
   name Expression19
   xpos -590
   ypos -57
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{parent.Expression3.white} {parent.Expression3.white}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression2
   label "CIELuv to CIE Yxy"
   xpos -590
   ypos -16
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace2
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -590
   ypos 31
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix1
   label "XYZ to RGB"
   xpos -590
   ypos 81
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin2
   xpos -590
   ypos 119
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 156
  }
  Premult {
   name Premult1
   xpos -590
   ypos 194
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge2
   xpos -590
   ypos 242
  }
  Shuffle {
   alpha white
   name Shuffle1
   label "\[value in] -> \[value out]"
   xpos -590
   ypos 314
  }
  Dot {
   name Dot3
   label " GRID"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos 378
  }
set Nb280f50 [stack 0]
push $Nb125d70
push $Nb17fc00
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression4
   label "CIE Yxy to CIELuv"
   xpos -40
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 rint(g*Colors)/Colors
   expr2 rint(b*Colors)/Colors
   expr3 a
   name Expression1
   label rint
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -233
   addUserKnob {20 User}
   addUserKnob {7 Colors R 1 256}
   Colors {{parent.density}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression6
   label "CIELuv to CIE Yxy"
   xpos -40
   ypos -184
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace3
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -133
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix3
   label "XYZ to RGB"
   xpos -40
   ypos -57
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp4
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -13
  }
  Premult {
   name Premult2
   xpos -40
   ypos 34
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge1
   xpos -40
   ypos 110
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin1
   xpos -40
   ypos 175
  }
  Dot {
   name Dot4
   label " DOTS"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 378
  }
set Nb30cba0 [stack 0]
  Switch {
   inputs 2
   which {{parent.style}}
   name Switch1
   xpos -257
   ypos 483
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix2
   label "RGB to XYZ"
   xpos -257
   ypos 560
  }
  Output {
   name Output
   xpos -257
   ypos 740
  }
  ColorWheel {
   inputs 0
   format "256 256 0 0 256 256 1 square_256"
   area {40 40 472 472}
   name ColorWheel2
   xpos -37
   ypos -705
   postage_stamp false
  }
push $Nb30cba0
push $Nb280f50
  Viewer {
   inputs 2
   frame_range 1-100
   viewerProcess "aces (rec1886)"
   name Viewer1
   note_font Helvetica
   xpos -666
   ypos 543
  }
 end_group
set Nb106fb0 [stack 0]
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  centerSaturation 1
  name ColorWheel4
  xpos -1910
  ypos 254
  postage_stamp false
 }
 Unpremult {
  name Unpremult1
  xpos -1910
  ypos 302
 }
 Group {
  name GamutToXYZ_OVERLAY
  label "\[value gamut] to XYZ\n"
  xpos -1910
  ypos 344
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 29
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 89
  }
 end_group
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch_Outline
  xpos -1910
  ypos 398
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 450
 }
set Nb3b5490 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1800
  ypos 440
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1800
  ypos 512
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 570
 }
set Nb3e08f0 [stack 0]
push $Nb3b5490
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to working"
  xpos -1910
  ypos 471
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Fill1
  xpos -1910
  ypos 530
  disable {{!parent.colorize_gamut_boundary}}
 }
set Nb3f2fc0 [stack 0]
 Group {
  inputs 2
  name PlotPoints
  xpos -1800
  ypos 614
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 1266
 }
 Scene {
  inputs 3
  name Scene1
  xpos -580
  ypos 1242
 }
push $Nadac350
push $Nadb1430
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{"parent.diagram? parent.right_margin * 0.72 : parent.right_margin"}}
  plot_cie_xy_left_margin {{parent.left_margin}}
  plot_cie_xy_process_input {{parent.plot_input}}
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Input
  xpos 620
  ypos 608
 }
set Nb4468c0 [stack 0]
 Fill {
  color 0
  name Fill4
  xpos -464
  ypos 1357
  hide_input true
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender
  xpos -590
  ypos 1382
 }
 Dot {
  name Dot17
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 1482
 }
push $Nb3e08f0
push $Nb3f2fc0
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 3a854edac5c1c8e3a3d2801ec73798509e6e91ec7294287590bd8357a67964d1 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 5 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 5 \"padding\" 1 1 \"left_margin\" 1 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input true
  plot_cie_xy_add_samples 0.5
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Gamut
  xpos -1910
  ypos 608
 }
 Multiply {
  channels rgba
  value {{parent.opacity_gamut_overlay}}
  name GamutOverlayOpacity
  xpos -1910
  ypos 686
  disable true
 }
 Group {
  name HueRotate1
  note_font Helvetica
  xpos -1910
  ypos 722
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
 FrameHold {
  first_frame 1
  name FrameHold2
  xpos -1910
  ypos 764
  cached true
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 834
 }
push $Nb05a090
push $Nb0c1d30
 BlinkScript {
  inputs 2
  recompileCount 5
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 65751dc3c93d46b59ba922fda7175ada4e69018b6dd8c29c890f1487b4a4c5d0 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 9 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"draw_axes\" Bool 1 AA== \"grid_hatch_length\" Float 1 AAAAAA== \"axis_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"axis_hatch_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 9 \"padding\" 1 1 \"left_margin\" 1 1 \"draw_axes\" 1 1 \"grid_hatch_length\" 1 1 \"axis_color\" 4 1 \"axis_hatch_color\" 4 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool draw_axes;\n  float grid_hatch_length;\n  float4 axis_color;\n  float4 axis_hatch_color;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n\n  void draw_grid() \{\n    // grid width in pixels. expresses a 0 to 1 range in CIE xy\n    float grid_width = 1.0f * outsize + offset;\n    // hatch interval gives us cross-hatching at specified interval in pixels. defaults to 0.1\n    int hatch_int = int(round(grid_width - offset) * 0.1f);\n    float hatchw = outsize * grid_hatch_length; // The width of the cross-hatch: 1% of grid width\n\n    int hatch_ct = 0;\n    for ( int i = offset; i < grid_width; i++ ) \{\n      // draw vertical axis\n      bilin( float2(offset, i), axis_color);\n      // draw horizontal axis\n      bilin( float2(i, offset), axis_color);\n      // draw cross hatches at every \n      if (hatch_ct == hatch_int) \{\n        hatch_ct = 0;\n        for ( int j = -outsize*0.01; j < hatchw; j++) \{\n          bilin(float2(round(offset + j), i), axis_hatch_color);\n          bilin(float2(i+ (offset-offset), round(offset + j)), axis_hatch_color);\n        \}\n      \}\n      hatch_ct++;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n    // Draw axes if enabled\n    if (draw_axes) \{\n      draw_grid();\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_draw_axes {{parent.draw_axis}}
  plot_cie_xy_grid_hatch_length {{"parent.full_width_grid ? 1 : 0.01"}}
  plot_cie_xy_axis_color {0.1 0.1 0.1 1}
  plot_cie_xy_axis_hatch_color {0.034 0.034 0.034 1}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input {{"parent.draw_spectral_locus || parent.enable_pointers_gamut"}}
  plot_cie_xy_add_samples 0.7
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SpectralLocus_and_Axis
  xpos -700
  ypos 643
 }
 FrameHold {
  first_frame 1
  name FrameHold1
  xpos -700
  ypos 699
  cached true
 }
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 762
 }
push $Nad3e470
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos 400
  ypos 110
  postage_stamp false
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input0]"}}
  name Switch1
  xpos 400
  ypos 158
 }
 Fill {
  output rgb
  color {0.9885 -0.0035 0 1}
  name SampleColor
  xpos 290
  ypos 158
 }
 Fill {
  output alpha
  name Fill3
  xpos 290
  ypos 224
 }
 Reformat {
  type "to box"
  box_width 1
  box_height {{box_width}}
  box_fixed true
  name ReformatBox
  xpos 290
  ypos 278
 }
set Nb573940 [stack 0]
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "working to XYZ"
  xpos 180
  ypos 272
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 180
  ypos 320
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression6
  label "CIE Yxy to CIELuv"
  xpos 180
  ypos 368
  disable {{!parent.diagram}}
 }
push $Nb573940
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_process_input true
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SampledColor
  xpos 290
  ypos 368
 }
 Dot {
  name Dot22
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos 426
 }
set Nb5cd1c0 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate1
  label "\[value size]"
  xpos 290
  ypos 488
 }
set Nb5d3710 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate2
  label "\[value size]"
  xpos 180
  ypos 488
 }
push $Nb5cd1c0
 Dot {
  name Dot21
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 426
 }
 Dilate {
  channels rgba
  size 1
  name Dilate5
  label "\[value size]"
  xpos -40
  ypos 464
 }
 FilterErode {
  channels rgba
  size -0.5
  filter gaussian
  name FilterErode1
  label "\[value size]"
  note_font Helvetica
  xpos -40
  ypos 514
 }
set Nb5fa570 [stack 0]
 Dilate {
  channels rgba
  size {0 {parent.Dilate3.size.w}}
  name Dilate4
  label "\[value size]"
  xpos -40
  ypos 584
 }
push $Nb5fa570
 Dilate {
  channels rgba
  size {{Output.width*plus_size/100} 0}
  name Dilate3
  label "\[value size]"
  xpos 70
  ypos 512
  addUserKnob {20 User}
  addUserKnob {7 plus_size R 0 4}
  plus_size 0.8
 }
 Merge2 {
  inputs 2
  operation screen
  bbox B
  name Merge9
  note_font Helvetica
  xpos 70
  ypos 591
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge10
  note_font Helvetica
  xpos 180
  ypos 591
 }
 Group {
  name HueRotate
  note_font Helvetica
  xpos 180
  ypos 639
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
push $Nb5d3710
 Merge2 {
  inputs 2
  bbox B
  name Merge8
  xpos 290
  ypos 638
 }
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 690
 }
push $Nb4468c0
 Merge2 {
  inputs 2
  bbox B
  name Merge7
  xpos 620
  ypos 686
  disable {{!parent.enable_sample_color}}
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 620
  ypos 758
  disable {{"!parent.draw_spectral_locus && !parent.draw_axis"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 620
  ypos 830
  disable {{!parent.draw_gamut_overlay}}
 }
 Blur {
  channels rgba
  size 1.5
  name Blur1
  label "poor man's antialiasing"
  xpos 620
  ypos 1136
 }
 Switch {
  inputs 2
  which {{parent.plot_type}}
  name Switch_PlotType
  xpos 620
  ypos 1478
 }
 Output {
  name Output
  xpos 620
  ypos 1641
 }
push $Nb106fb0
 Viewer {
  frame_range 1-100
  viewerProcess "aces (rec1886)"
  name Viewer1
  note_font Helvetica
  xpos -2460
  ypos 783
 }
end_group
Merge2 {
 inputs 2
 bbox B
 name Merge20
 label "spectral locus"
 note_font Helvetica
 xpos 7990
 ypos 5810
}
Merge2 {
 inputs 2
 bbox B
 name Merge21
 label acescg
 note_font Helvetica
 xpos 7990
 ypos 5858
}
Dot {
 name Dot117
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8024
 ypos 5946
}
Group {
 inputs 0
 name VisualizeColorDistance
 xpos 11400
 ypos 2846
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Nb75a250 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Nb75f210 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Nb7640f0 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Nb768fc0 [stack 0]
push $Nb7640f0
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Nb768fc0
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Nb796d80 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Nb796d80
push $Nb75f210
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Nb75a250
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 inputs 0
 name Distance
 label "0 to 1.5"
 note_font Helvetica
 xpos 8320
 ypos 3563
 postage_stamp true
}
 Constant {
  inputs 0
  name Constant1
  note_font Helvetica
  xpos 1156
  ypos -687
  postage_stamp false
 }
 Ramp {
  p0 {0 0}
  p1 {{width} 0}
  name Ramp1
  note_font Helvetica
  xpos 1156
  ypos -633
 }
 Multiply {
  channels rgb
  value 1.5
  name Multiply1
  note_font Helvetica
  xpos 1156
  ypos -585
 }
 Output {
  name Output1
  xpos 1156
  ypos -491
 }
end_group
Group {
 name compress1
 knobChanged "from math import (pow, exp, log, tan, atan, atanh, cos, pi, fabs)\n\ndef i_log(x):\n    return (exp((1-t+t*log(1-x)-x*t*log(1-x))/(t*(1-x))))*t+x*t-k\ndef i_exp(x):\n    return -log((-x+1)/(t-x))*(-t+x)+t-k\ndef i_atan(x):\n    return (2*tan((pi*(1-t))/(2*(x-t)))*(x-t))/pi+t-k\ndef i_tanh(x):\n    return atanh((1-t)/(x-t))*(x-t)+t-k\ndef sign(x):\n    return 0 if x == 0 else 1 if x > 0 else -1\n\ndef bisect(f, a, b):\n    if sign(f(a)) == sign(f(b)): \n        # bad estimate. return something close to linear\n        if method == 'exp' or method == 'log':\n            return -100\n        else: \n            return 1.99999\n    c = (a+b)/2.0\n    y = f(c)\n    if y == 0:\n        return c # lucky guess\n    n = 1\n    while fabs(y) > tol and n <= nmax:\n        if sign(y) == sign(f(a)):\n            a = c\n        else:\n            b = c\n        c = (a+b)/2.0\n        y = f(c)\n        n += 1\n    return c\n\ndef calc():\n    a = 1.0001\n    b = 5\n    if method == 'log':\n        f = i_log\n        a = -50\n        b = 0.98\n    elif method == 'exp':\n        f = i_exp\n    elif method == 'atan':\n        f = i_atan\n    elif method == 'tanh':\n        f = i_tanh\n        a = 1.000001\n    lim = bisect(f, a, b)\n    return lim\n\n\nn = nuke.thisNode()\nknob = nuke.thisKnob()\n\nt = 1-n\['threshold'].getValue()\nmethod = n\['method'].value()\n\ntol = 1e-3\nnmax = 100\n\nn.begin()\nif n\['method'].value() != 'reinhard':\n    k_knobs = \['cyan', 'magenta', 'yellow']\n    lim_knobs = \['lim_x', 'lim_y', 'lim_z']\n    if knob.name() in k_knobs:\n        lim_knob = lim_knobs\[k_knobs.index(knob.name())]\n        k = knob.getValue()+1\n        lim = calc()\n        n\[lim_knob].setValue(lim)\n    elif knob.name() == 'method' or knob.name() == 'threshold':\n        for i, lknob in enumerate(lim_knobs):\n            k = n\[k_knobs\[i]].getValue()+1\n            lim = calc()\n            n\[lknob].setValue(lim)\n            \nn.end()"
 note_font Helvetica
 xpos 8320
 ypos 3687
 addUserKnob {20 compress}
 addUserKnob {4 method M {log reinhard exp atan tanh ""}}
 method tanh
 addUserKnob {7 threshold R 0 0.3}
 threshold 0.3
 addUserKnob {7 cyan}
 cyan 0.89
 addUserKnob {7 magenta}
 magenta 0.2
 addUserKnob {7 yellow}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {7 lim_x R -5 2}
 lim_x 1.00021653
 addUserKnob {7 lim_y R -5 2}
 lim_y 1.030762711
 addUserKnob {7 lim_z R -5 2}
 lim_z 1.030762711
 addUserKnob {26 ""}
 addUserKnob {6 invert +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -202
 }
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -102
 }
set Nb84edb0 [stack 0]
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos -30
 }
set Nb853a80 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*log((1+(r/(lim_x-thr)-thr/(lim_x-thr)))/(1-(r/(lim_x-thr)-thr/(lim_x-thr))))/2
  expr1 g<thr?g:thr+(lim_y-thr)*log((1+(g/(lim_y-thr)-thr/(lim_y-thr)))/(1-(g/(lim_y-thr)-thr/(lim_y-thr))))/2
  expr2 b<thr?b:thr+(lim_z-thr)*log((1+(b/(lim_z-thr)-thr/(lim_z-thr)))/(1-(b/(lim_z-thr)-thr/(lim_z-thr))))/2
  name uncompress_tanh
  note_font Helvetica
  xpos 510
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb853a80
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*tan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*tan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*tan(pi/2*(b-thr)/(lim_z-thr))
  name uncompress_atan
  xpos 400
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb853a80
 Expression {
  expr0 r<thr?r:-log((r-lim_x)/(thr-lim_x))*(-thr+lim_x)+thr
  expr1 g<thr?g:-log((g-lim_y)/(thr-lim_y))*(-thr+lim_y)+thr
  expr2 b<thr?b:-log((b-lim_z)/(thr-lim_z))*(-thr+lim_z)+thr
  name uncompress_exp
  note_font Helvetica
  xpos 290
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb853a80
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)-1/(1-thr)+1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)-1/(1-thr)+1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)-1/(1-thr)+1/(lim_z-thr)))
  name uncompress_reinhard
  note_font Helvetica
  xpos 180
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.compress_reinhard.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.compress_reinhard.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.compress_reinhard.lim_z}}
 }
push $Nb853a80
 Expression {
  expr0 r<thr?r:exp((r-thr+thr*log(1-lim_x)-lim_x*thr*log(1-lim_x))/(thr*(1-lim_x)))*thr+lim_x*thr
  expr1 "g<thr?g:exp((g-thr+thr*log(1-lim_y)-lim_y*thr*log(1-lim_y))/(thr*(1-lim_y)))*thr+lim_y*thr\n"
  expr2 b<thr?b:exp((b-thr+thr*log(1-lim_z)-lim_z*thr*log(1-lim_z))/(thr*(1-lim_z)))*thr+lim_z*thr
  name uncompress_log
  note_font Helvetica
  xpos 70
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method1
  note_font Helvetica
  xpos 290
  ypos 135
 }
push $Nb84edb0
 Dot {
  name Dot6
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -336
  ypos -30
 }
set Nb8b1270 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*tanh(((r-thr)/(lim_x-thr)))
  expr1 g<thr?g:thr+(lim_y-thr)*tanh(((g-thr)/(lim_y-thr)))
  expr2 b<thr?b:thr+(lim_z-thr)*tanh(((b-thr)/(lim_z-thr)))
  name compress_tanh
  note_font Helvetica
  xpos -150
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb8b1270
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*atan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*atan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*atan(pi/2*(b-thr)/(lim_z-thr))
  name compress_atan
  xpos -260
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb8b1270
 Expression {
  expr0 r<thr?r:lim_x-(lim_x-thr)*exp(-(((r-thr)*((lim_x)/(lim_x-thr))/lim_x)))
  expr1 g<thr?g:lim_y-(lim_y-thr)*exp(-(((g-thr)*((lim_y)/(lim_y-thr))/lim_y)))
  expr2 b<thr?b:lim_z-(lim_z-thr)*exp(-(((b-thr)*((lim_z)/(lim_z-thr))/lim_z)))
  name compress_exp
  note_font Helvetica
  xpos -370
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nb8b1270
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)+1/(1-thr)-1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)+1/(1-thr)-1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)+1/(1-thr)-1/(lim_z-thr)))
  name compress_reinhard
  note_font Helvetica
  xpos -480
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.cyan+1}}
  addUserKnob {7 lim_y}
  lim_y {{parent.magenta+1}}
  addUserKnob {7 lim_z}
  lim_z {{parent.yellow+1}}
 }
push $Nb8b1270
 Expression {
  expr0 r<thr?r:thr*log(r/thr-lim_x)-lim_x*thr*log(r/thr-lim_x)+thr-thr*log(1-lim_x)+lim_x*thr*log(1-lim_x)
  expr1 g<thr?g:thr*log(g/thr-lim_y)-lim_y*thr*log(g/thr-lim_y)+thr-thr*log(1-lim_y)+lim_y*thr*log(1-lim_y)
  expr2 b<thr?b:thr*log(b/thr-lim_z)-lim_z*thr*log(b/thr-lim_z)+thr-thr*log(1-lim_z)+lim_z*thr*log(1-lim_z)
  name compress_log
  note_font Helvetica
  xpos -590
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method
  note_font Helvetica
  xpos -370
  ypos 135
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name switch_reverse
  xpos -40
  ypos 278
 }
 Output {
  name Output
  xpos -40
  ypos 422
 }
end_group
Group {
 name PlotSlice3
 xpos 8320
 ypos 3734
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {4 plot M {replace over right bottom}}
 addUserKnob {7 thickness}
 thickness 0.1
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.5
 addUserKnob {7 min_value l "min value" R -1 0}
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {1920 0}
 addUserKnob {6 draw_line l "draw line" +STARTLINE}
 draw_line true
 addUserKnob {7 line_width l "line width" R 0.5 3}
 line_width 1
 addUserKnob {41 color T Constant5.color}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -898
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set Nb92b1c0 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set Nb92fe90 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -448
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -400
 }
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -590
  ypos -322
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -590
  ypos -274
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression1
  note_font Helvetica
  xpos -590
  ypos -225
 }
set Nb97a1e0 [stack 0]
 Fill {
  color {1 -10 0 1}
  name Fill1
  note_font Helvetica
  xpos -480
  ypos -225
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression2
  note_font Helvetica
  xpos -480
  ypos -201
 }
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression4
  xpos -480
  ypos -154
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Multiply {
  channels rgba
  value 0.25
  name Multiply1
  note_font Helvetica
  xpos -480
  ypos -129
 }
push $Nb97a1e0
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression3
  xpos -590
  ypos -130
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Merge2 {
  inputs 2
  operation plus
  bbox B
  output rgb
  name Merge2
  note_font Helvetica
  xpos -590
  ypos -57
 }
 Dot {
  name Dot14
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos -6
 }
set Nb9dc450 [stack 0]
 Rectangle {
  opacity 0.395
  area {{width/2-swidth/2} 0 {width/2+swidth/2} {height}}
  color {1 0 0 1}
  name Rectangle1
  label 0.5
  xpos -370
  ypos -40
  addUserKnob {20 User}
  addUserKnob {7 swidth}
  swidth 3
 }
 Dot {
  name Dot3
  xpos -226
  ypos -54
 }
set Nb9f0160 [stack 0]
 Dot {
  name Dot9
  xpos -6
  ypos -54
 }
 Constant {
  inputs 0
  color {1 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -480
  ypos -826
  postage_stamp false
 }
 NoOp {
  name Line
  xpos -480
  ypos -778
  addUserKnob {20 User}
  addUserKnob {12 pt1}
  pt1 {{parent.pos1} {parent.pos1}}
  addUserKnob {12 pt2}
  pt2 {{parent.pos2} {parent.pos2}}
  addUserKnob {7 Radius R 1 15}
  Radius {{parent.line_width}}
  addUserKnob {7 angle}
  angle {{"(pt1.x<pt2.x)? (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000) :  (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000)+180"}}
 }
 Reformat {
  type "to box"
  box_width {{"sqrt( pow(parent.Line.pt2.x - parent.Line.pt1.x, 2) + pow(parent.Line.pt2.y - parent.Line.pt1.y, 2) )"}}
  box_height {{parent.Line.Radius*2}}
  box_fixed true
  resize fill
  filter impulse
  name Reformat3
  xpos -480
  ypos -730
 }
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -480
  ypos -682
 }
 Transform {
  translate {{parent.pt1.x x1 66} {parent.pt1.y-(parent.Tickness) x1 174}}
  rotate {{parent.Line.angle}}
  center {0 {parent.Tickness}}
  filter Parzen
  name Transform2
  xpos -480
  ypos -634
 }
push $Nb92fe90
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  note_font Helvetica
  xpos -480
  ypos -561
  disable {{!parent.draw_line x1 1}}
 }
 Dot {
  name Dot2
  xpos -336
  ypos -558
 }
 Dot {
  name Dot1
  xpos -116
  ypos -558
 }
set Nba488e0 [stack 0]
 Dot {
  name Dot7
  xpos 104
  ypos -558
 }
 ContactSheet {
  inputs 2
  width {{Input.width i}}
  height {{Input.height*2 i}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos 70
  ypos -16
 }
 Dot {
  name Dot11
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos 104
  ypos 282
 }
push $Nb9f0160
push $Nba488e0
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -150
  ypos -16
 }
 Dot {
  name Dot15
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos 282
 }
push $Nb9dc450
push $Nb9dc450
 ChannelMerge {
  inputs 2
  A rgba.red
  B rgba.green
  name ChannelMerge1
  xpos -590
  ypos 98
 }
set Nba739a0 [stack 0]
push $Nba739a0
 ChannelMerge {
  inputs 2
  B rgba.blue
  name ChannelMerge2
  xpos -590
  ypos 170
 }
 Dot {
  name Dot17
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos 282
 }
set Nba8d050 [stack 0]
push $Nb92b1c0
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos 278
 }
push $Nba8d050
 Switch {
  inputs 4
  which {{parent.plot}}
  name switch_plot_type
  xpos -810
  ypos 422
 }
 Output {
  name Output1
  xpos -810
  ypos 662
 }
end_group
Shuffle {
 green red
 blue red
 alpha red
 name Shuffle4
 note_font Helvetica
 xpos 8320
 ypos 3783
}
Dot {
 name Dot120
 label " full"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8354
 ypos 3834
}
Group {
 inputs 0
 name Distance1
 label "0.8 to 1.5"
 note_font Helvetica
 xpos 8540
 ypos 3563
 postage_stamp true
}
 Constant {
  inputs 0
  name Constant1
  note_font Helvetica
  xpos 1156
  ypos -687
  postage_stamp false
 }
 Ramp {
  p0 {0 0}
  p1 {{width} 0}
  name Ramp1
  note_font Helvetica
  xpos 1156
  ypos -633
 }
 Grade {
  black 0.8
  white 1.5
  black_clamp false
  name Grade1
  note_font Helvetica
  xpos 1156
  ypos -573
 }
 Output {
  name Output1
  xpos 1156
  ypos -491
 }
end_group
Group {
 name compress2
 knobChanged "from math import (pow, exp, log, tan, atan, atanh, cos, pi, fabs)\n\ndef i_log(x):\n    return (exp((1-t+t*log(1-x)-x*t*log(1-x))/(t*(1-x))))*t+x*t-k\ndef i_exp(x):\n    return -log((-x+1)/(t-x))*(-t+x)+t-k\ndef i_atan(x):\n    return (2*tan((pi*(1-t))/(2*(x-t)))*(x-t))/pi+t-k\ndef i_tanh(x):\n    return atanh((1-t)/(x-t))*(x-t)+t-k\ndef sign(x):\n    return 0 if x == 0 else 1 if x > 0 else -1\n\ndef bisect(f, a, b):\n    if sign(f(a)) == sign(f(b)): \n        # bad estimate. return something close to linear\n        if method == 'exp' or method == 'log':\n            return -100\n        else: \n            return 1.99999\n    c = (a+b)/2.0\n    y = f(c)\n    if y == 0:\n        return c # lucky guess\n    n = 1\n    while fabs(y) > tol and n <= nmax:\n        if sign(y) == sign(f(a)):\n            a = c\n        else:\n            b = c\n        c = (a+b)/2.0\n        y = f(c)\n        n += 1\n    return c\n\ndef calc():\n    a = 1.0001\n    b = 5\n    if method == 'log':\n        f = i_log\n        a = -50\n        b = 0.98\n    elif method == 'exp':\n        f = i_exp\n    elif method == 'atan':\n        f = i_atan\n    elif method == 'tanh':\n        f = i_tanh\n        a = 1.000001\n    lim = bisect(f, a, b)\n    return lim\n\n\nn = nuke.thisNode()\nknob = nuke.thisKnob()\n\nt = 1-n\['threshold'].getValue()\nmethod = n\['method'].value()\n\ntol = 1e-3\nnmax = 100\n\nn.begin()\nif n\['method'].value() != 'reinhard':\n    k_knobs = \['cyan', 'magenta', 'yellow']\n    lim_knobs = \['lim_x', 'lim_y', 'lim_z']\n    if knob.name() in k_knobs:\n        lim_knob = lim_knobs\[k_knobs.index(knob.name())]\n        k = knob.getValue()+1\n        lim = calc()\n        n\[lim_knob].setValue(lim)\n    elif knob.name() == 'method' or knob.name() == 'threshold':\n        for i, lknob in enumerate(lim_knobs):\n            k = n\[k_knobs\[i]].getValue()+1\n            lim = calc()\n            n\[lknob].setValue(lim)\n            \nn.end()"
 note_font Helvetica
 xpos 8540
 ypos 3687
 addUserKnob {20 compress}
 addUserKnob {4 method M {log reinhard exp atan tanh ""}}
 method {{parent.compress1.method}}
 addUserKnob {7 threshold R 0 0.3}
 threshold 0.2
 addUserKnob {7 cyan}
 cyan 0.415
 addUserKnob {7 magenta}
 magenta 0.2
 addUserKnob {7 yellow}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {7 lim_x R -5 2}
 lim_x {{parent.compress1.lim_x x4 1.035987775 x49 0.857481842}}
 addUserKnob {7 lim_y R -5 2}
 lim_y {{parent.compress1.lim_y x49 0.8010845947}}
 addUserKnob {7 lim_z R -5 2}
 lim_z {{parent.compress1.lim_z x49 0.8010845947}}
 addUserKnob {26 ""}
 addUserKnob {6 invert +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -202
 }
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -102
 }
set Nbb0c420 [stack 0]
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos -30
 }
set Nbb110f0 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*log((1+(r/(lim_x-thr)-thr/(lim_x-thr)))/(1-(r/(lim_x-thr)-thr/(lim_x-thr))))/2
  expr1 g<thr?g:thr+(lim_y-thr)*log((1+(g/(lim_y-thr)-thr/(lim_y-thr)))/(1-(g/(lim_y-thr)-thr/(lim_y-thr))))/2
  expr2 b<thr?b:thr+(lim_z-thr)*log((1+(b/(lim_z-thr)-thr/(lim_z-thr)))/(1-(b/(lim_z-thr)-thr/(lim_z-thr))))/2
  name uncompress_tanh
  note_font Helvetica
  xpos 510
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb110f0
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*tan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*tan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*tan(pi/2*(b-thr)/(lim_z-thr))
  name uncompress_atan
  xpos 400
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb110f0
 Expression {
  expr0 r<thr?r:-log((r-lim_x)/(thr-lim_x))*(-thr+lim_x)+thr
  expr1 g<thr?g:-log((g-lim_y)/(thr-lim_y))*(-thr+lim_y)+thr
  expr2 b<thr?b:-log((b-lim_z)/(thr-lim_z))*(-thr+lim_z)+thr
  name uncompress_exp
  note_font Helvetica
  xpos 290
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb110f0
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)-1/(1-thr)+1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)-1/(1-thr)+1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)-1/(1-thr)+1/(lim_z-thr)))
  name uncompress_reinhard
  note_font Helvetica
  xpos 180
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.compress_reinhard.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.compress_reinhard.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.compress_reinhard.lim_z}}
 }
push $Nbb110f0
 Expression {
  expr0 r<thr?r:exp((r-thr+thr*log(1-lim_x)-lim_x*thr*log(1-lim_x))/(thr*(1-lim_x)))*thr+lim_x*thr
  expr1 "g<thr?g:exp((g-thr+thr*log(1-lim_y)-lim_y*thr*log(1-lim_y))/(thr*(1-lim_y)))*thr+lim_y*thr\n"
  expr2 b<thr?b:exp((b-thr+thr*log(1-lim_z)-lim_z*thr*log(1-lim_z))/(thr*(1-lim_z)))*thr+lim_z*thr
  name uncompress_log
  note_font Helvetica
  xpos 70
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method1
  note_font Helvetica
  xpos 290
  ypos 135
 }
push $Nbb0c420
 Dot {
  name Dot6
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -336
  ypos -30
 }
set Nbb6eb30 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*tanh(((r-thr)/(lim_x-thr)))
  expr1 g<thr?g:thr+(lim_y-thr)*tanh(((g-thr)/(lim_y-thr)))
  expr2 b<thr?b:thr+(lim_z-thr)*tanh(((b-thr)/(lim_z-thr)))
  name compress_tanh
  note_font Helvetica
  xpos -150
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb6eb30
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*atan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*atan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*atan(pi/2*(b-thr)/(lim_z-thr))
  name compress_atan
  xpos -260
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb6eb30
 Expression {
  expr0 r<thr?r:lim_x-(lim_x-thr)*exp(-(((r-thr)*((lim_x)/(lim_x-thr))/lim_x)))
  expr1 g<thr?g:lim_y-(lim_y-thr)*exp(-(((g-thr)*((lim_y)/(lim_y-thr))/lim_y)))
  expr2 b<thr?b:lim_z-(lim_z-thr)*exp(-(((b-thr)*((lim_z)/(lim_z-thr))/lim_z)))
  name compress_exp
  note_font Helvetica
  xpos -370
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Nbb6eb30
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)+1/(1-thr)-1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)+1/(1-thr)-1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)+1/(1-thr)-1/(lim_z-thr)))
  name compress_reinhard
  note_font Helvetica
  xpos -480
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.cyan+1}}
  addUserKnob {7 lim_y}
  lim_y {{parent.magenta+1}}
  addUserKnob {7 lim_z}
  lim_z {{parent.yellow+1}}
 }
push $Nbb6eb30
 Expression {
  expr0 r<thr?r:thr*log(r/thr-lim_x)-lim_x*thr*log(r/thr-lim_x)+thr-thr*log(1-lim_x)+lim_x*thr*log(1-lim_x)
  expr1 g<thr?g:thr*log(g/thr-lim_y)-lim_y*thr*log(g/thr-lim_y)+thr-thr*log(1-lim_y)+lim_y*thr*log(1-lim_y)
  expr2 b<thr?b:thr*log(b/thr-lim_z)-lim_z*thr*log(b/thr-lim_z)+thr-thr*log(1-lim_z)+lim_z*thr*log(1-lim_z)
  name compress_log
  note_font Helvetica
  xpos -590
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method
  note_font Helvetica
  xpos -370
  ypos 135
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name switch_reverse
  xpos -40
  ypos 278
 }
 Output {
  name Output
  xpos -40
  ypos 422
 }
end_group
Group {
 name PlotSlice4
 xpos 8540
 ypos 3734
 addUserKnob {20 PlotSlice_tab l PlotSlice}
 addUserKnob {4 plot M {replace over right bottom}}
 addUserKnob {7 thickness}
 thickness 0.1
 addUserKnob {7 max_value l "max value" R 1 10}
 max_value 1.5
 addUserKnob {7 min_value l "min value" R -1 0}
 min_value 0.8
 addUserKnob {12 pos1 l p1}
 addUserKnob {12 pos2 l p2 -STARTLINE}
 pos2 {1920 0}
 addUserKnob {6 draw_line l "draw line" +STARTLINE}
 draw_line true
 addUserKnob {7 line_width l "line width" R 0.5 3}
 line_width 1
 addUserKnob {41 color T Constant5.color}
}
 Input {
  inputs 0
  name Input
  xpos -810
  ypos -898
 }
 Dot {
  name Dot13
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -776
  ypos -558
 }
set Nbbe8970 [stack 0]
 Dot {
  name Dot12
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos -556
  ypos -558
 }
set Nbbed640 [stack 0]
 Transform {
  translate {{-parent.pos1} {-parent.pos1}}
  black_outside false
  name Transform4
  label T
  xpos -590
  ypos -520
 }
 Transform {
  rotate {{"-degrees( atan2(parent.pos2.y-parent.pos1.y, parent.pos2.x-parent.pos1.x) )"}}
  black_outside false
  name Transform5
  label "R\n"
  xpos -590
  ypos -448
 }
 Transform {
  scale {{"width / sqrt(pow(parent.pos2.x-parent.pos1.x,2) + pow(parent.pos2.y-parent.pos1.y,2))"}}
  black_outside false
  name Transform6
  label S
  xpos -590
  ypos -400
 }
 Crop {
  box {0 0 {Input.width} 1}
  reformat true
  crop false
  name Crop1
  xpos -590
  ypos -322
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  resize distort
  filter impulse
  name Reformat1
  xpos -590
  ypos -274
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression1
  note_font Helvetica
  xpos -590
  ypos -225
 }
set Nbc38030 [stack 0]
 Fill {
  color {1 -10 0 1}
  name Fill1
  note_font Helvetica
  xpos -480
  ypos -225
 }
 Expression {
  expr0 r/(max_value-min_value)-min_value
  expr1 g/(max_value-min_value)-min_value
  expr2 b/(max_value-min_value)-min_value
  expr3 a/(max_value-min_value)-min_value
  name Expression2
  note_font Helvetica
  xpos -480
  ypos -201
 }
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression4
  xpos -480
  ypos -154
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Multiply {
  channels rgba
  value 0.25
  name Multiply1
  note_font Helvetica
  xpos -480
  ypos -129
 }
push $Nbc38030
 Expression {
  expr0 "fabs((y/height)-r)<=tolerance ? 1 : 0"
  expr1 "fabs((y/height)-g)<=tolerance ? 1 : 0"
  expr2 "fabs((y/height)-b)<=tolerance ? 1 : 0"
  expr3 "fabs((y/height)-a)<=tolerance ? 1 : 0"
  name Expression3
  xpos -590
  ypos -130
  addUserKnob {20 User}
  addUserKnob {7 tolerance}
  tolerance {{parent.thickness/100}}
 }
 Merge2 {
  inputs 2
  operation plus
  bbox B
  output rgb
  name Merge2
  note_font Helvetica
  xpos -590
  ypos -57
 }
 Dot {
  name Dot14
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos -6
 }
set Nbc9a2a0 [stack 0]
 Rectangle {
  opacity 0.395
  area {{width/2-swidth/2} 0 {width/2+swidth/2} {height}}
  color {1 0 0 1}
  name Rectangle1
  label 0.5
  xpos -370
  ypos -40
  addUserKnob {20 User}
  addUserKnob {7 swidth}
  swidth 3
 }
 Dot {
  name Dot3
  xpos -226
  ypos -54
 }
set Nbcadfb0 [stack 0]
 Dot {
  name Dot9
  xpos -6
  ypos -54
 }
 Constant {
  inputs 0
  color {1 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -480
  ypos -826
  postage_stamp false
 }
 NoOp {
  name Line
  xpos -480
  ypos -778
  addUserKnob {20 User}
  addUserKnob {12 pt1}
  pt1 {{parent.pos1} {parent.pos1}}
  addUserKnob {12 pt2}
  pt2 {{parent.pos2} {parent.pos2}}
  addUserKnob {7 Radius R 1 15}
  Radius {{parent.line_width}}
  addUserKnob {7 angle}
  angle {{"(pt1.x<pt2.x)? (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000) :  (int( atan( (pt1.y - pt2.y) / (pt1.x - pt2.x)) * (180/pi) * 1000) / 1000)+180"}}
 }
 Reformat {
  type "to box"
  box_width {{"sqrt( pow(parent.Line.pt2.x - parent.Line.pt1.x, 2) + pow(parent.Line.pt2.y - parent.Line.pt1.y, 2) )"}}
  box_height {{parent.Line.Radius*2}}
  box_fixed true
  resize fill
  filter impulse
  name Reformat3
  xpos -480
  ypos -730
 }
 Crop {
  box {0 0 {width} {height}}
  name Crop2
  xpos -480
  ypos -682
 }
 Transform {
  translate {{parent.pt1.x x1 66} {parent.pt1.y-(parent.Tickness) x1 174}}
  rotate {{parent.Line.angle}}
  center {0 {parent.Tickness}}
  filter Parzen
  name Transform2
  xpos -480
  ypos -634
 }
push $Nbbed640
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  note_font Helvetica
  xpos -480
  ypos -561
  disable {{!parent.draw_line x1 1}}
 }
 Dot {
  name Dot2
  xpos -336
  ypos -558
 }
 Dot {
  name Dot1
  xpos -116
  ypos -558
 }
set Nbd06730 [stack 0]
 Dot {
  name Dot7
  xpos 104
  ypos -558
 }
 ContactSheet {
  inputs 2
  width {{Input.width i}}
  height {{Input.height*2 i}}
  rows 2
  columns 1
  roworder TopBottom
  name ContactSheet2
  label Bottom
  xpos 70
  ypos -16
 }
 Dot {
  name Dot11
  note_font_size 42
  note_font_color 0x7f7f7f01
  xpos 104
  ypos 282
 }
push $Nbcadfb0
push $Nbd06730
 ContactSheet {
  inputs 2
  width {{Input.width*2}}
  height {{Input.height}}
  rows 1
  columns 2
  name ContactSheet1
  label Right
  xpos -150
  ypos -16
 }
 Dot {
  name Dot15
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos 282
 }
push $Nbc9a2a0
push $Nbc9a2a0
 ChannelMerge {
  inputs 2
  A rgba.red
  B rgba.green
  name ChannelMerge1
  xpos -590
  ypos 98
 }
set Nbd31980 [stack 0]
push $Nbd31980
 ChannelMerge {
  inputs 2
  B rgba.blue
  name ChannelMerge2
  xpos -590
  ypos 170
 }
 Dot {
  name Dot17
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -556
  ypos 282
 }
set Nbd4b030 [stack 0]
push $Nbbe8970
 Merge2 {
  inputs 2
  name Merge1
  xpos -810
  ypos 278
 }
push $Nbd4b030
 Switch {
  inputs 4
  which {{parent.plot}}
  name switch_plot_type
  xpos -810
  ypos 422
 }
 Output {
  name Output1
  xpos -810
  ypos 662
 }
end_group
Shuffle {
 green red
 blue red
 alpha red
 name Shuffle5
 note_font Helvetica
 xpos 8540
 ypos 3783
}
Dot {
 name Dot121
 label " detail"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8574
 ypos 3834
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_arri-alexa-widegamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read65
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7880
 ypos 6461
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade11
 note_font Helvetica
 xpos 7880
 ypos 6514
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade12
 note_font Helvetica
 xpos 7880
 ypos 6562
}
Dot {
 name Dot129
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 6834
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_aces-ap1-gamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read67
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7990
 ypos 6461
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade18
 note_font Helvetica
 xpos 7990
 ypos 6514
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade19
 note_font Helvetica
 xpos 7990
 ypos 6562
}
Dot {
 name Dot131
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8024
 ypos 6786
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_spectrum-locus.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read66
 tile_color 0x989898ff
 note_font Helvetica
 xpos 8100
 ypos 6461
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade16
 note_font Helvetica
 xpos 8100
 ypos 6514
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade17
 note_font Helvetica
 xpos 8100
 ypos 6562
}
Dot {
 name Dot130
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8134
 ypos 6738
}
ColorWheel {
 inputs 0
 format "4096 4096 0 0 4096 4096 1 square_4K"
 edgeValue 0
 name ColorWheel7
 note_font Helvetica
 xpos 8320
 ypos 6399
}
Unpremult {
 name Unpremult5
 note_font Helvetica
 xpos 8320
 ypos 6495
}
Saturation {
 saturation 4
 mode Average
 name Saturation6
 label "\[value saturation]"
 note_font Helvetica
 xpos 8320
 ypos 6538
}
Group {
 name PlotChromaticity7
 label colorwheel
 xpos 8320
 ypos 6608
 addUserKnob {20 PlotGamut_tab l PlotGamut}
 addUserKnob {6 plot_input l "&nbsp;<b>Plot Input Pixels" t "Enable plotting of the input pixels" +STARTLINE}
 plot_input true
 addUserKnob {41 input_gamut t "Set the gamut that the input colors are encoded in" T GamutToXYZ3.gamut}
 addUserKnob {4 diagram t "Choose the type of chromaticity diagram" M {"CIE 1931 xy Chromaticity Diagram" "CIE 1976 u' v' Uniform Chromaticity Scale Diagram" ""}}
 addUserKnob {4 plot_type l "plot type" t "Choose the type of plot rendering.\n\nBlinkScript uses a custom blinkscript plotting node which is very fast.\n\nPositionToPoints renders each pixels as a point in 3D space and renders it through a ScanlineRender node. Much slower and more buggy, but can be useful for visualizing the 3 dimensional aspect of the color data." M {BlinkScript "PositionToPoints + ScanlineRender"}}
 addUserKnob {6 enable_sample_color l "enable sample color" t "Enable plotting of the sampled color below" +STARTLINE}
 addUserKnob {41 sample_color l "sample color" t "sample and plot selected color" T SampleColor.color}
 addUserKnob {22 follow_viewer l "follow viewer" T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('v = nuke.activeViewer().node()\\nif v and v.name() == nuke.thisNode().name():\\n    con = v.input(nuke.activeViewer().activeInput())\\n    plt = nuke.toNode(\"\{0\}\")\\n    plt.setInput(0, con)'.format(n.name()))" +STARTLINE}
 addUserKnob {22 unfollow_viewer l "unfollow viewer" -STARTLINE T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('')"}
 addUserKnob {26 ""}
 addUserKnob {26 plot_dimensions_label l " " T "<b>Plot Dimensions"}
 addUserKnob {7 right_margin l "right margin" R 1 1.5}
 right_margin 1.3
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin 0.08
 addUserKnob {41 output_format l format T Plot_Input.format}
 addUserKnob {6 resample_input l "resample input" t "scale down input - can help speed up plotting for high resolution inputs." +STARTLINE}
 addUserKnob {3 input_width l " " t "width to resample input to" -STARTLINE}
 input_width 2048
 addUserKnob {6 map_overlays_to_input_gamut l "map overlays to input gamut" t "This maps the overlays like the spectral locus, pointer's gamut, and the gamut overlay to the working gamut instead of keeping them as XYZ.\n\nFor example if the input gamut is ACEScg, these overlays will be mapped to that. Note that this can cause most of the overlays to be negative or highly saturated which might harm the visual appearance." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 draw_axis l "&nbsp;&nbsp; <b> Coordinate Grid" t "Draw coordinate grid" +STARTLINE}
 draw_axis true
 addUserKnob {6 full_width_grid l "full width grid" t "Enable full width coordinate grid" +STARTLINE}
 addUserKnob {41 plot_cie_xy_axis_color l "axis color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_color}
 addUserKnob {41 plot_cie_xy_axis_hatch_color l "grid color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_hatch_color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_spectral_locus l " &nbsp;&nbsp; <b> Spectral Locus" t "draw the spectrum locus: the boundary of color the human eye can see." +STARTLINE}
 draw_spectral_locus true
 addUserKnob {6 colorize_spectral_locus l "colorize spectral locus" +STARTLINE}
 addUserKnob {41 spectral_locus_color l color T Fill2.color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_gamut_overlay l " &nbsp;&nbsp; <b> Gamut Overlay" t "draw an overlay of a color gamut (choose gamut below)" +STARTLINE}
 addUserKnob {41 gamut_overlay l gamut t "choose gamut to overlay" T GamutToXYZ_OVERLAY.gamut}
 addUserKnob {4 style t "Choose the style to display the gamut plot" M {boundary dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density t "Density of the grid or points if style is not boundary" R 10 100}
 density 55
 addUserKnob {7 opacity_gamut_overlay l opacity R 0.1 1}
 opacity_gamut_overlay 0.5
 addUserKnob {6 colorize_gamut_boundary l "colorize gamut boundary" t "use a constant color for the gamut overlay instead of the spectral boundary colors." +STARTLINE}
 colorize_gamut_boundary true
 addUserKnob {41 overlay_gamut_color l color t "gamut boundary fill color, if enabled." T Fill1.color}
 addUserKnob {26 ""}
 addUserKnob {6 enable_pointers_gamut l "&nbsp; <b>Pointers Gamut" t "Enable Pointer's gamut overlay" +STARTLINE}
 addUserKnob {6 enable_pointer_samples l "enable samples" t "show the individual pointer gamut samples" +STARTLINE}
 addUserKnob {6 colorize_pointers_gamut l "colorize pointers gamut" t "set the pointer's gamut colors to a constant" +STARTLINE}
 addUserKnob {41 color T ColorizePointers.color}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "Draw Gamut"
  note_font_size 42
  xpos -2165
  ypos -325
  bdwidth 585
  bdheight 1462
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x222222ff
  label "Draw Spectral Locus"
  note_font_size 42
  xpos -955
  ypos -321
  bdwidth 582
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "Plot Input Pixels"
  note_font_size 42
  xpos 218
  ypos -633
  bdwidth 797
  bdheight 2562
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x202020ff
  label "Pointer's Gamut"
  note_font_size 48
  xpos -1535
  ypos -321
  bdwidth 554
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3a3a3aff
  label "Sample Input Color"
  note_font_size 42
  xpos -112
  ypos 75
  bdwidth 664
  bdheight 714
  z_order 4
 }
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name Camera1
  xpos -708
  ypos 1329
 }
 Input {
  inputs 0
  name Input
  xpos 620
  ypos -490
 }
 AddChannels {
  name AddChannels1
  xpos 620
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{parent.input_width}}
  box_height {{rint(box_width/(input.width/input.height))}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  filter impulse
  name ResampleInput
  xpos 620
  ypos -370
  disable {{!parent.resample_input}}
 }
 Dot {
  name Dot7
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 162
 }
set Nbf43d20 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 162
 }
 Group {
  name GamutToXYZ3
  label "\[value gamut] to XYZ\n"
  xpos 730
  ypos 248
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 730
  ypos 296
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression4
  label "CIE Yxy to CIELuv"
  xpos 730
  ypos 344
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot13
  label " Pos"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 618
 }
set Nbfb2330 [stack 0]
push $Nbf43d20
 Dot {
  name Dot16
  label " Col"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 522
 }
set Nbfb7410 [stack 0]
 Group {
  inputs 2
  name PlotPoints2
  xpos 730
  ypos 686
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 0.1
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 1266
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -1470
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -1470
  ypos -9
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -1470
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -1470
  ypos 98
 }
 BlackOutside {
  name BlackOutside2
  xpos -1470
  ypos 179
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -1470
  ypos 227
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1436
  ypos 282
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -1250
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -1250
  ypos -10
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -1250
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -1250
  ypos 98
 }
 BlackOutside {
  name BlackOutside3
  xpos -1250
  ypos 179
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -1250
  ypos 228
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1250
  ypos 278
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -1250
  ypos 325
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -1250
  ypos 367
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 402
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -776
  ypos 402
 }
set Nc125bb0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -700
  ypos -122
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -700
  ypos -80
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -700
  ypos -26
 }
set Nc143a80 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos -22
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -590
  ypos 16
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 70
 }
 BlackOutside {
  name BlackOutside1
  xpos -590
  ypos 118
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos 194
 }
push $Nc143a80
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -700
  ypos 16
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -700
  ypos 74
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 136
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -700
  ypos 190
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -700
  ypos 227
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -700
  ypos 279
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -700
  ypos 305
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -700
  ypos 337
  disable {{parent.draw_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 378
 }
set Nc23a720 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -590
  ypos 398
  disable {{!parent.enable_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -590
  ypos 493
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 609
 }
set Nc263760 [stack 0]
push $Nc125bb0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -810
  ypos 440
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix3
  label "XYZ to working"
  xpos -810
  ypos 478
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.43 1 1}
  unpremult rgba.alpha
  name ColorizePointers
  xpos -810
  ypos 575
  disable {{!parent.colorize_pointers_gamut x1 1}}
 }
push $Nc23a720
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 429
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to working"
  xpos -700
  ypos 477
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0.5 1 1}
  unpremult rgba.alpha
  name Fill2
  xpos -700
  ypos 528
  disable {{!parent.colorize_spectral_locus}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -700
  ypos 581
  disable {{!parent.enable_pointers_gamut}}
 }
set Nc2cb400 [stack 0]
 Group {
  inputs 2
  name PlotPoints1
  xpos -590
  ypos 650
  disable {{!(parent.draw_spectral_locus||parent.enable_pointers_gamut)}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Group {
  inputs 0
  name GamutGrid
  xpos -2054
  ypos 336
  addUserKnob {20 GamutGrid}
  addUserKnob {3 style}
  style {{max(0,parent.style-1)}}
  addUserKnob {3 distribution -STARTLINE}
  distribution {{parent.distribution}}
  addUserKnob {7 density R 10 150}
  density {{parent.density}}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {12 wxy}
  wxy {{parent.GamutToXYZ_OVERLAY.wxy} {parent.GamutToXYZ_OVERLAY.wxy}}
 }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   centerSaturation 1
   fillFormat false
   area {-170 -158 682 670}
   name ColorWheel4
   xpos -260
   ypos 3
   postage_stamp false
  }
  Crop {
   box {0 0 512 512}
   crop false
   name Crop2
   xpos -260
   ypos 29
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat3
   note_font "Bitstream Vera Sans"
   xpos -260
   ypos 110
  }
set Nc32f300 [stack 0]
push $Nc32f300
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   roworder TopBottom
   name ContactSheet2
   xpos -260
   ypos 169
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -226
   ypos 246
  }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   fillFormat false
   area {40 40 472 472}
   name ColorWheel1
   xpos -40
   ypos -664
   postage_stamp false
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -628
  }
  Crop {
   box {0 0 {width} {height}}
   reformat true
   name Crop1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -602
  }
  Unpremult {
   name Unpremult1
   xpos -40
   ypos -526
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos -415
  }
  Colorspace {
   colorspace_in CIE-XYZ
   colorspace_out CIE-Yxy
   name Colorspace1
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -341
  }
set Nc389190 [stack 0]
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos -331
  }
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression5
   label "CIE Yxy to CIELuv"
   xpos -590
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
   expr2 "hypot(g-white.x, b-white.y)"
   expr3 a
   name Expression3
   xpos -590
   ypos -261
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
  }
set Nc3b4a50 [stack 0]
  Posterize {
   channels rgb
   Colors {{rint(parent.density/3*2)}}
   name Posterize1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos -194
  }
set Nc3c3c50 [stack 0]
push $Nc3b4a50
  Dot {
   name Dot15
   note_font "Bitstream Vera Sans"
   xpos -446
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   name Copy1
   xpos -480
   ypos -154
  }
push $Nc3c3c50
push $Nc3b4a50
  Dot {
   name Dot16
   note_font "Bitstream Vera Sans"
   xpos -666
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   name Copy2
   xpos -700
   ypos -153
  }
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   center true
   roworder TopBottom
   name ContactSheet3
   xpos -590
   ypos -102
  }
  Expression {
   expr0 r
   expr1 cos(radians(g*360))*b+white.x
   expr2 sin(radians(g*360))*b+white.y
   expr3 a
   name Expression19
   xpos -590
   ypos -57
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{parent.Expression3.white} {parent.Expression3.white}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression2
   label "CIELuv to CIE Yxy"
   xpos -590
   ypos -16
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace2
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -590
   ypos 31
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix1
   label "XYZ to RGB"
   xpos -590
   ypos 81
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin2
   xpos -590
   ypos 119
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 156
  }
  Premult {
   name Premult1
   xpos -590
   ypos 194
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge2
   xpos -590
   ypos 242
  }
  Shuffle {
   alpha white
   name Shuffle1
   label "\[value in] -> \[value out]"
   xpos -590
   ypos 314
  }
  Dot {
   name Dot3
   label " GRID"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos 378
  }
set Nc48a4e0 [stack 0]
push $Nc32f300
push $Nc389190
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression4
   label "CIE Yxy to CIELuv"
   xpos -40
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 rint(g*Colors)/Colors
   expr2 rint(b*Colors)/Colors
   expr3 a
   name Expression1
   label rint
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -233
   addUserKnob {20 User}
   addUserKnob {7 Colors R 1 256}
   Colors {{parent.density}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression6
   label "CIELuv to CIE Yxy"
   xpos -40
   ypos -184
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace3
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -133
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix3
   label "XYZ to RGB"
   xpos -40
   ypos -57
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp4
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -13
  }
  Premult {
   name Premult2
   xpos -40
   ypos 34
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge1
   xpos -40
   ypos 110
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin1
   xpos -40
   ypos 175
  }
  Dot {
   name Dot4
   label " DOTS"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 378
  }
set Nc516130 [stack 0]
  Switch {
   inputs 2
   which {{parent.style}}
   name Switch1
   xpos -257
   ypos 483
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix2
   label "RGB to XYZ"
   xpos -257
   ypos 560
  }
  Output {
   name Output
   xpos -257
   ypos 740
  }
  ColorWheel {
   inputs 0
   format "256 256 0 0 256 256 1 square_256"
   area {40 40 472 472}
   name ColorWheel2
   xpos -37
   ypos -705
   postage_stamp false
  }
push $Nc516130
push $Nc48a4e0
  Viewer {
   inputs 2
   frame_range 1-100
   viewerProcess "aces (rec1886)"
   name Viewer1
   note_font Helvetica
   xpos -666
   ypos 543
  }
 end_group
set Nc310540 [stack 0]
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  centerSaturation 1
  name ColorWheel4
  xpos -1910
  ypos 254
  postage_stamp false
 }
 Unpremult {
  name Unpremult1
  xpos -1910
  ypos 302
 }
 Group {
  name GamutToXYZ_OVERLAY
  label "\[value gamut] to XYZ\n"
  xpos -1910
  ypos 344
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 29
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 89
  }
 end_group
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch_Outline
  xpos -1910
  ypos 398
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 450
 }
set Nc5bec00 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1800
  ypos 440
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1800
  ypos 512
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 570
 }
set Nc5ea060 [stack 0]
push $Nc5bec00
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to working"
  xpos -1910
  ypos 471
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Fill1
  xpos -1910
  ypos 530
  disable {{!parent.colorize_gamut_boundary}}
 }
set Nc5fc730 [stack 0]
 Group {
  inputs 2
  name PlotPoints
  xpos -1800
  ypos 614
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 1266
 }
 Scene {
  inputs 3
  name Scene1
  xpos -580
  ypos 1242
 }
push $Nbfb2330
push $Nbfb7410
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{"parent.diagram? parent.right_margin * 0.72 : parent.right_margin"}}
  plot_cie_xy_left_margin {{parent.left_margin}}
  plot_cie_xy_process_input {{parent.plot_input}}
  format "1024 1024 0 0 1024 1024 1 square_1K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Input
  xpos 620
  ypos 608
 }
set Nc64d0f0 [stack 0]
 Fill {
  color 0
  name Fill4
  xpos -464
  ypos 1357
  hide_input true
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender
  xpos -590
  ypos 1382
 }
 Dot {
  name Dot17
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 1482
 }
push $Nc5ea060
push $Nc5fc730
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 3a854edac5c1c8e3a3d2801ec73798509e6e91ec7294287590bd8357a67964d1 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 5 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 5 \"padding\" 1 1 \"left_margin\" 1 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input true
  plot_cie_xy_add_samples 0.5
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Gamut
  xpos -1910
  ypos 608
 }
 Multiply {
  channels rgba
  value {{parent.opacity_gamut_overlay}}
  name GamutOverlayOpacity
  xpos -1910
  ypos 686
  disable true
 }
 Group {
  name HueRotate1
  note_font Helvetica
  xpos -1910
  ypos 712
  disable true
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
 FrameHold {
  first_frame 1
  name FrameHold2
  xpos -1910
  ypos 764
  cached true
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 834
 }
push $Nc263760
push $Nc2cb400
 BlinkScript {
  inputs 2
  recompileCount 5
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 65751dc3c93d46b59ba922fda7175ada4e69018b6dd8c29c890f1487b4a4c5d0 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 9 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"draw_axes\" Bool 1 AA== \"grid_hatch_length\" Float 1 AAAAAA== \"axis_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"axis_hatch_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 9 \"padding\" 1 1 \"left_margin\" 1 1 \"draw_axes\" 1 1 \"grid_hatch_length\" 1 1 \"axis_color\" 4 1 \"axis_hatch_color\" 4 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool draw_axes;\n  float grid_hatch_length;\n  float4 axis_color;\n  float4 axis_hatch_color;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n\n  void draw_grid() \{\n    // grid width in pixels. expresses a 0 to 1 range in CIE xy\n    float grid_width = 1.0f * outsize + offset;\n    // hatch interval gives us cross-hatching at specified interval in pixels. defaults to 0.1\n    int hatch_int = int(round(grid_width - offset) * 0.1f);\n    float hatchw = outsize * grid_hatch_length; // The width of the cross-hatch: 1% of grid width\n\n    int hatch_ct = 0;\n    for ( int i = offset; i < grid_width; i++ ) \{\n      // draw vertical axis\n      bilin( float2(offset, i), axis_color);\n      // draw horizontal axis\n      bilin( float2(i, offset), axis_color);\n      // draw cross hatches at every \n      if (hatch_ct == hatch_int) \{\n        hatch_ct = 0;\n        for ( int j = -outsize*0.01; j < hatchw; j++) \{\n          bilin(float2(round(offset + j), i), axis_hatch_color);\n          bilin(float2(i+ (offset-offset), round(offset + j)), axis_hatch_color);\n        \}\n      \}\n      hatch_ct++;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n    // Draw axes if enabled\n    if (draw_axes) \{\n      draw_grid();\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_draw_axes {{parent.draw_axis}}
  plot_cie_xy_grid_hatch_length {{"parent.full_width_grid ? 1 : 0.01"}}
  plot_cie_xy_axis_color {0.1 0.1 0.1 1}
  plot_cie_xy_axis_hatch_color {0.034 0.034 0.034 1}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input {{"parent.draw_spectral_locus || parent.enable_pointers_gamut"}}
  plot_cie_xy_add_samples 0.7
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SpectralLocus_and_Axis
  xpos -700
  ypos 643
 }
 FrameHold {
  first_frame 1
  name FrameHold1
  xpos -700
  ypos 699
  cached true
 }
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 762
 }
push $Nbf43d20
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos 400
  ypos 110
  postage_stamp false
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input0]"}}
  name Switch1
  xpos 400
  ypos 158
 }
 Fill {
  output rgb
  color {0.9885 -0.0035 0 1}
  name SampleColor
  xpos 290
  ypos 158
 }
 Fill {
  output alpha
  name Fill3
  xpos 290
  ypos 224
 }
 Reformat {
  type "to box"
  box_width 1
  box_height {{box_width}}
  box_fixed true
  name ReformatBox
  xpos 290
  ypos 278
 }
set Nc778660 [stack 0]
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "working to XYZ"
  xpos 180
  ypos 272
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 180
  ypos 320
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression6
  label "CIE Yxy to CIELuv"
  xpos 180
  ypos 368
  disable {{!parent.diagram}}
 }
push $Nc778660
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_process_input true
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SampledColor
  xpos 290
  ypos 368
 }
 Dot {
  name Dot22
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos 426
 }
set Nc7d21f0 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate1
  label "\[value size]"
  xpos 290
  ypos 488
 }
set Nc7d7e20 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate2
  label "\[value size]"
  xpos 180
  ypos 488
 }
push $Nc7d21f0
 Dot {
  name Dot21
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 426
 }
 Dilate {
  channels rgba
  size 1
  name Dilate5
  label "\[value size]"
  xpos -40
  ypos 464
 }
 FilterErode {
  channels rgba
  size -0.5
  filter gaussian
  name FilterErode1
  label "\[value size]"
  note_font Helvetica
  xpos -40
  ypos 514
 }
set Nc7fe270 [stack 0]
 Dilate {
  channels rgba
  size {0 {parent.Dilate3.size.w}}
  name Dilate4
  label "\[value size]"
  xpos -40
  ypos 584
 }
push $Nc7fe270
 Dilate {
  channels rgba
  size {{Output.width*plus_size/100} 0}
  name Dilate3
  label "\[value size]"
  xpos 70
  ypos 512
  addUserKnob {20 User}
  addUserKnob {7 plus_size R 0 4}
  plus_size 0.8
 }
 Merge2 {
  inputs 2
  operation screen
  bbox B
  name Merge9
  note_font Helvetica
  xpos 70
  ypos 591
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge10
  note_font Helvetica
  xpos 180
  ypos 591
 }
 Group {
  name HueRotate
  note_font Helvetica
  xpos 180
  ypos 639
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
push $Nc7d7e20
 Merge2 {
  inputs 2
  bbox B
  name Merge8
  xpos 290
  ypos 638
 }
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 690
 }
push $Nc64d0f0
 Merge2 {
  inputs 2
  bbox B
  name Merge7
  xpos 620
  ypos 686
  disable {{!parent.enable_sample_color}}
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 620
  ypos 758
  disable {{"!parent.draw_spectral_locus && !parent.draw_axis"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 620
  ypos 830
  disable {{!parent.draw_gamut_overlay}}
 }
 Blur {
  channels rgba
  size 1.5
  name Blur1
  label "poor man's antialiasing"
  xpos 620
  ypos 1136
 }
 Switch {
  inputs 2
  which {{parent.plot_type}}
  name Switch_PlotType
  xpos 620
  ypos 1478
 }
 Output {
  name Output
  xpos 620
  ypos 1641
 }
push $Nc310540
 Viewer {
  frame_range 1-100
  viewerProcess "aces (rec1886)"
  name Viewer1
  note_font Helvetica
  xpos -2460
  ypos 783
 }
end_group
Group {
 name VisualizeColorDistance5
 xpos 8320
 ypos 6662
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 show_distance true
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Nc938000 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Nc93cfc0 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Nc941ea0 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Nc946d70 [stack 0]
push $Nc941ea0
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Nc946d70
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Nc974c10 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Nc974c10
push $Nc93cfc0
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Nc938000
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Merge2 {
 inputs 2
 bbox B
 name Merge23
 label "spectral locus"
 note_font Helvetica
 xpos 8320
 ypos 6730
}
Merge2 {
 inputs 2
 bbox B
 name Merge24
 label acescg
 note_font Helvetica
 xpos 8320
 ypos 6778
}
Merge2 {
 inputs 2
 bbox B
 name Merge22
 label "alexa wide gamut"
 note_font Helvetica
 xpos 8320
 ypos 6826
}
Dot {
 name Dot132
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8354
 ypos 6954
}
push $Na28cdd0
NoOp {
 name ___anchor_wtxc
 tile_color 0x989898ff
 label "<font size=7>\[value title]"
 note_font Helvetica
 xpos 13600
 ypos 4895
 icon Output.png
 addUserKnob {20 anchor_tab l anchor}
 addUserKnob {1 title}
 title m_smekal_A002_C029_06025K
}
NoOp {
 name ___pointer_wtxc
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 8210
 ypos 7247
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_wtxc
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
Dot {
 name Dot134
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8244
 ypos 7338
}
set Nca2d170 [stack 0]
Group {
 name VisualizeColorDistance7
 xpos 8100
 ypos 7334
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 show_distance true
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Nca41240 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Nca46200 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Nca4b0e0 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Nca4ffb0 [stack 0]
push $Nca4b0e0
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Nca4ffb0
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Nca7db20 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Nca7db20
push $Nca46200
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Nca41240
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 name MaxRGB4
 note_font Helvetica
 xpos 8100
 ypos 7383
 addUserKnob {20 MaxRGB_tab l MaxRGB}
 addUserKnob {22 calculate t "calculate the max pixel value in red, green, and blue color components." T "def get_max(ct_node, frame):\n    ch = ct_node.name().lower()\[0]\n    nuke.execute(ct_node, frame, frame)\n    maxval = max(ct_node\['maxlumapixvalue'].getValue())\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    kmax.setValueAt(maxval, frame)\n    for i in range(2):\n        kpos.setValueAt(ct_node\['maxlumapixdata'].getValue()\[i], frame, i)\n    \n\nn = nuke.thisNode()\ncurframe = n\['curframe'].getValue()\nif curframe:\n    first_frame = nuke.frame()\n    last_frame = nuke.frame()\nelse:\n    first_frame = n.frameRange().first()\n    last_frame = n.frameRange().last()\n\nct_nodes = \[nuke.toNode('\{0\}.\{1\}MAX'.format(n.fullName(), c)) for c in \['R', 'G', 'B']]\n\nfor ch in \[c.name().lower()\[0] for c in ct_nodes]:\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    for k in \[kmax, kpos]:\n        k.clearAnimated()\n        if not curframe:\n            k.setAnimated()\n\nif curframe:\n    for ct_node in ct_nodes:\n        get_max(ct_node, first_frame)\n\n#else: # threading issues... not implemented for now\n#    for frame in range(first_frame, last_frame+1):\n#        for ct_node in ct_nodes:\n#            threading.Thread(group=None, target=get_max, args=(ct_node, frame)).start()" +STARTLINE}
 addUserKnob {22 clear -STARTLINE T "n = nuke.thisNode()\nfor c in \['r', 'g', 'b']:\n    kmax =  n\['\{0\}max'.format(c)]\n    kpos = n\['\{0\}pos'.format(c)]\n    for k in \[kmax, kpos]:\n        k.setValue(0)\n        k.clearAnimated()"}
 addUserKnob {6 curframe l "current frame" t "Calculate only the current frame. If false, will prompt calculate input framerange." -STARTLINE}
 curframe true
 addUserKnob {7 rmax t "maximum red value" R 0 50}
 rmax 0.515791893
 addUserKnob {12 rpos l "" t "rmax position" -STARTLINE}
 rpos {91 1041}
 addUserKnob {7 gmax t "maximum green value" R 0 50}
 gmax 1.086582422
 addUserKnob {12 gpos l "" t "gmax position" -STARTLINE}
 gpos {1048 708}
 addUserKnob {7 bmax t "maximum blue value" R 0 50}
 bmax 1.249609351
 addUserKnob {12 bpos l "" t "bmax position" -STARTLINE}
 bpos {20 932}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {rgba.red -rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 209 209 209 91 513 513 513 513 513 385 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513} {curve x1 1175 1175 1175 1041 994 994 994 994 994 686 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994}}
  maxlumapixvalue {{curve x1 1.03131032 1.361329675 1.03131032 0.515791893 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.016959906 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  minlumapixdata {{curve x1 1 1 1 1 389 389 389 389 389 998 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 210 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040}}
  minlumapixvalue {{curve x1 0 0 0 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  name RMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 39
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 894 50 50 1048 1347 1347 1347 1347 1347 259 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 x48 2} {curve x1 1274 9 9 708 896 896 896 896 896 459 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 1.143916965 1.778251767 1.347160339 1.086582422 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 1.138906717 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 x48 1.201209426} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  minlumapixdata {{curve x1 0 0 0 0 389 389 389 389 389 1234 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 x48 1} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 220 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve xx48 0} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  name GMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 87
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 531 7 7 20 x10 1235 x48 1} {curve x1 985 41 41 932 x10 221 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0.9455359578 1.744389296 1.321506977 1.249609351 x10 1.041050911 x48 1.24509275}}
  minlumapixdata {{curve x1 3 3 3 179 x10 0 x48 2} {curve x1 0 0 0 1 x10 0 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0}}
  name BMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 135
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
push $Na143a80
NoOp {
 name ___anchor_jiri
 tile_color 0x989898ff
 label "<font size=7>\[value title]"
 note_font Helvetica
 xpos 14040
 ypos 4884
 icon Output.png
 addUserKnob {20 anchor_tab l anchor}
 addUserKnob {1 title}
 title m_smekal_A009C002_190210_R0EI_02
}
NoOp {
 name ___pointer_jiri
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 7550
 ypos 7247
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_jiri
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
Dot {
 name Dot133
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7584
 ypos 7338
}
set Ncc57ff0 [stack 0]
Group {
 name VisualizeColorDistance6
 xpos 7440
 ypos 7334
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 show_distance true
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Nccab280 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Nccb0240 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Nccb5120 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Nccb9ff0 [stack 0]
push $Nccb5120
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Nccb9ff0
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Ncce7e90 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Ncce7e90
push $Nccb0240
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Nccab280
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 name MaxRGB3
 note_font Helvetica
 xpos 7440
 ypos 7383
 addUserKnob {20 MaxRGB_tab l MaxRGB}
 addUserKnob {22 calculate t "calculate the max pixel value in red, green, and blue color components." T "def get_max(ct_node, frame):\n    ch = ct_node.name().lower()\[0]\n    nuke.execute(ct_node, frame, frame)\n    maxval = max(ct_node\['maxlumapixvalue'].getValue())\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    kmax.setValueAt(maxval, frame)\n    for i in range(2):\n        kpos.setValueAt(ct_node\['maxlumapixdata'].getValue()\[i], frame, i)\n    \n\nn = nuke.thisNode()\ncurframe = n\['curframe'].getValue()\nif curframe:\n    first_frame = nuke.frame()\n    last_frame = nuke.frame()\nelse:\n    first_frame = n.frameRange().first()\n    last_frame = n.frameRange().last()\n\nct_nodes = \[nuke.toNode('\{0\}.\{1\}MAX'.format(n.fullName(), c)) for c in \['R', 'G', 'B']]\n\nfor ch in \[c.name().lower()\[0] for c in ct_nodes]:\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    for k in \[kmax, kpos]:\n        k.clearAnimated()\n        if not curframe:\n            k.setAnimated()\n\nif curframe:\n    for ct_node in ct_nodes:\n        get_max(ct_node, first_frame)\n\n#else: # threading issues... not implemented for now\n#    for frame in range(first_frame, last_frame+1):\n#        for ct_node in ct_nodes:\n#            threading.Thread(group=None, target=get_max, args=(ct_node, frame)).start()" +STARTLINE}
 addUserKnob {22 clear -STARTLINE T "n = nuke.thisNode()\nfor c in \['r', 'g', 'b']:\n    kmax =  n\['\{0\}max'.format(c)]\n    kpos = n\['\{0\}pos'.format(c)]\n    for k in \[kmax, kpos]:\n        k.setValue(0)\n        k.clearAnimated()"}
 addUserKnob {6 curframe l "current frame" t "Calculate only the current frame. If false, will prompt calculate input framerange." -STARTLINE}
 curframe true
 addUserKnob {7 rmax t "maximum red value" R 0 50}
 rmax 1.03131032
 addUserKnob {12 rpos l "" t "rmax position" -STARTLINE}
 rpos {209 1175}
 addUserKnob {7 gmax t "maximum green value" R 0 50}
 gmax 1.143916965
 addUserKnob {12 gpos l "" t "gmax position" -STARTLINE}
 gpos {894 1274}
 addUserKnob {7 bmax t "maximum blue value" R 0 50}
 bmax 0.9455359578
 addUserKnob {12 bpos l "" t "bmax position" -STARTLINE}
 bpos {531 985}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {rgba.red -rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 209 209 209 209 513 513 513 513 513 385 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513} {curve x1 1175 1175 1175 1175 994 994 994 994 994 686 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994}}
  maxlumapixvalue {{curve x1 1.03131032 1.361329675 1.03131032 1.03131032 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.016959906 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  minlumapixdata {{curve x1 1 1 1 1 389 389 389 389 389 998 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 210 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040}}
  minlumapixvalue {{curve x1 0 0 0 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  name RMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 39
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 894 50 50 894 1347 1347 1347 1347 1347 259 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 x48 2} {curve x1 1274 9 9 1274 896 896 896 896 896 459 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 1.143916965 1.778251767 1.347160339 1.143916965 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 1.138906717 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 x48 1.201209426} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  minlumapixdata {{curve x1 0 0 0 0 389 389 389 389 389 1234 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 x48 1} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 220 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve xx48 0} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  name GMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 87
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 531 7 7 531 x10 1235 x48 1} {curve x1 985 41 41 985 x10 221 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0.9455359578 1.744389296 1.321506977 0.9455359578 x10 1.041050911 x48 1.24509275}}
  minlumapixdata {{curve x1 3 3 3 3 x10 0 x48 2} {curve x1 0 0 0 0 x10 0 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0} {curve x1 0 0 0 0 x10 0 x48 0}}
  name BMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 135
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
ColorWheel {
 inputs 0
 name ColorWheel6
 note_font Helvetica
 xpos 7550
 ypos 6639
}
push $Nac8eea0
Reformat {
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Reformat3
 note_font Helvetica
 xpos 8100
 ypos 5698
}
Group {
 name PlotPoints4
 tile_color 0xb63b3bff
 xpos 8100
 ypos 5750
 addUserKnob {20 PlotPoints_tab l PlotPoints}
 addUserKnob {6 plot_input l "plot input" +STARTLINE}
 plot_input true
 addUserKnob {6 plot_spectral_locus l "plot spectral locus" -STARTLINE}
 plot_spectral_locus true
 addUserKnob {6 plot_pointers_gamut l "plot pointers gamut" -STARTLINE}
 addUserKnob {41 gamut T GamutToXYZ3.gamut}
 addUserKnob {4 transform M {none XYZ Yxy}}
 transform Yxy
 addUserKnob {4 diagram M {"1931 xy chromaticity diagram" "1976 u'v' chromaticity diagram" none}}
 addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
 addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 addUserKnob {26 ""}
 addUserKnob {7 right_margin l "right margin" R 1 2}
 right_margin 1.04
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin -0.153
}
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name ORTHO
  xpos -1350
  ypos 474
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -2369
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -2369
  ypos -439
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -2369
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -2369
  ypos -333
 }
 BlackOutside {
  name BlackOutside2
  xpos -2369
  ypos -251
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -2369
  ypos -203
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2335
  ypos -148
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos -2149
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -2149
  ypos -440
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -2149
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -2149
  ypos -328
 }
 BlackOutside {
  name BlackOutside3
  xpos -2149
  ypos -251
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -2149
  ypos -202
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -2149
  ypos -152
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -2149
  ypos -105
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -2149
  ypos -63
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2115
  ypos -28
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1903
  ypos -28
 }
set Ncfa16a0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -1827
  ypos -552
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -1827
  ypos -510
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -1827
  ypos -456
 }
set Ncfbf570 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -452
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -1717
  ypos -414
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -1717
  ypos -360
 }
 BlackOutside {
  name BlackOutside1
  xpos -1717
  ypos -312
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -236
 }
push $Ncfbf570
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -1827
  ypos -414
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -1827
  ypos -356
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -294
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -1827
  ypos -240
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -1827
  ypos -203
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -1827
  ypos -151
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -1827
  ypos -125
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -1827
  ypos -99
  disable {{parent.plot_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos -52
 }
set Nd0b6a70 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos -52
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -1717
  ypos -32
  disable {{!parent.plot_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -1717
  ypos 6
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos 179
 }
push $Ncfa16a0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1937
  ypos -1
 }
push $Nd0b6a70
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -1
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -1827
  ypos 60
  disable {{!parent.plot_pointers_gamut}}
 }
 Group {
  inputs 2
  name PlotPoints1
  xpos -1827
  ypos 230
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 590
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 668
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail {{parent.parent.PositionToPoints1.detail}}
   pointSize {{parent.parent.PositionToPoints1.pointSize}}
   name PositionToPoints1
   xpos 400
   ypos 782
  }
  Output {
   name Output
   xpos 400
   ypos 878
  }
 end_group
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos 342
 }
 Input {
  inputs 0
  name Input
  xpos -1250
  ypos -153
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 42
 }
set Nd160ec0 [stack 0]
 Group {
  name GamutToXYZ3
  label "\[value gamut] to XYZ\n"
  xpos -1140
  ypos 32
  cached true
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 90
 }
set Nd1a4eb0 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1030
  ypos 80
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1030
  ypos 127
  disable {{"!(parent.diagram == 1)"}}
 }
push $Nd1a4eb0
push $Nd160ec0
 Switch {
  inputs 3
  which {{parent.transform}}
  name Switch1
  xpos -1140
  ypos 182
 }
push $Nd160ec0
 Group {
  inputs 2
  name PositionToPoints1
  xpos -1250
  ypos 230
  disable {{!parent.plot_input}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 587
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 585
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 644
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail 0.135
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 754
  }
  Output {
   name Output
   xpos 400
   ypos 846
  }
 end_group
 Scene {
  inputs 2
  selectable false
  name Scene1
  xpos -1240
  ypos 318
 }
 Constant {
  inputs 0
  format "2048 2048 0 0 2048 2048 1 square_2K"
  name Constant1
  xpos -1140
  ypos 494
  postage_stamp false
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender1
  xpos -1250
  ypos 542
 }
 Output {
  name Output
  xpos -1250
  ypos 638
 }
end_group
push $Na1e8430
NoOp {
 name ___pointer_rmuh2
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7>Art Installation"
 note_font "Helvetica \[pyrs]"
 xpos 9090
 ypos 6671
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target Dot50
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
push $Na428630
NoOp {
 name ___pointer_rmuh1
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7>Netflix Still-Life"
 note_font "Helvetica \[pyrs]"
 xpos 8870
 ypos 6671
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target Dot53
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
push $Na440710
NoOp {
 name ___pointer_rcyo2
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 9310
 ypos 6671
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_rcyo
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_arri-alexa-widegamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read59
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7330
 ypos 2453
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade14
 note_font Helvetica
 xpos 7330
 ypos 2506
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade15
 note_font Helvetica
 xpos 7330
 ypos 2554
}
Group {
 name HueRotate3
 note_font Helvetica
 xpos 7330
 ypos 2655
 disable true
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 14
 }
 Unpremult {
  name Unpremult1
  note_font Helvetica
  xpos -40
  ypos 39
 }
 Colorspace {
  colorspace_out HSV
  name Colorspace1
  note_font Helvetica
  xpos -40
  ypos 72
 }
 Add {
  channels {rgba.red -rgba.green -rgba.blue none}
  value 0.5
  name Add1
  note_font Helvetica
  xpos -40
  ypos 125
 }
 Colorspace {
  colorspace_in HSV
  name Colorspace2
  note_font Helvetica
  xpos -40
  ypos 183
 }
 Premult {
  name Premult1
  note_font Helvetica
  xpos -40
  ypos 235
 }
 Output {
  name Output1
  xpos -40
  ypos 302
 }
end_group
Dot {
 name Dot115
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7364
 ypos 2898
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_filmlight-e-gamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read60
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7440
 ypos 2453
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade7
 note_font Helvetica
 xpos 7440
 ypos 2506
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade8
 note_font Helvetica
 xpos 7440
 ypos 2554
}
Group {
 name HueRotate4
 note_font Helvetica
 xpos 7440
 ypos 2655
 disable true
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 14
 }
 Unpremult {
  name Unpremult1
  note_font Helvetica
  xpos -40
  ypos 39
 }
 Colorspace {
  colorspace_out HSV
  name Colorspace1
  note_font Helvetica
  xpos -40
  ypos 72
 }
 Add {
  channels {rgba.red -rgba.green -rgba.blue none}
  value 0.5
  name Add1
  note_font Helvetica
  xpos -40
  ypos 125
 }
 Colorspace {
  colorspace_in HSV
  name Colorspace2
  note_font Helvetica
  xpos -40
  ypos 183
 }
 Premult {
  name Premult1
  note_font Helvetica
  xpos -40
  ypos 235
 }
 Output {
  name Output1
  xpos -40
  ypos 302
 }
end_group
Dot {
 name Dot123
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7474
 ypos 2850
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_aces-ap1-gamut.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read61
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7550
 ypos 2453
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade9
 note_font Helvetica
 xpos 7550
 ypos 2506
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade
 note_font Helvetica
 xpos 7550
 ypos 2554
}
Group {
 name HueRotate5
 note_font Helvetica
 xpos 7550
 ypos 2655
 disable true
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 14
 }
 Unpremult {
  name Unpremult1
  note_font Helvetica
  xpos -40
  ypos 39
 }
 Colorspace {
  colorspace_out HSV
  name Colorspace1
  note_font Helvetica
  xpos -40
  ypos 72
 }
 Add {
  channels {rgba.red -rgba.green -rgba.blue none}
  value 0.5
  name Add1
  note_font Helvetica
  xpos -40
  ypos 125
 }
 Colorspace {
  colorspace_in HSV
  name Colorspace2
  note_font Helvetica
  xpos -40
  ypos 183
 }
 Premult {
  name Premult1
  note_font Helvetica
  xpos -40
  ypos 235
 }
 Output {
  name Output1
  xpos -40
  ypos 302
 }
end_group
Dot {
 name Dot124
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7584
 ypos 2802
}
Read {
 inputs 0
 file_type exr
 file ../images/cie_1931_xy_chromaticity_diagram_plots/cie_1931_xy_plot_spectrum-locus.exr
 format "1024 1024 0 0 1024 1024 1 square_1K"
 origset true
 auto_alpha true
 name Read62
 tile_color 0x989898ff
 note_font Helvetica
 xpos 7660
 ypos 2453
 postage_stamp false
}
Grade {
 multiply 0
 black_clamp false
 unpremult rgba.alpha
 name Grade10
 note_font Helvetica
 xpos 7660
 ypos 2506
}
Grade {
 channels alpha
 gamma 3.05
 white_clamp true
 name Grade13
 note_font Helvetica
 xpos 7660
 ypos 2554
}
Dot {
 name Dot125
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 2754
}
ColorWheel {
 inputs 0
 format "4096 4096 0 0 4096 4096 1 square_4K"
 edgeValue 0
 name ColorWheel2
 note_font Helvetica
 xpos 7880
 ypos 2463
}
Unpremult {
 name Unpremult1
 note_font Helvetica
 xpos 7880
 ypos 2559
}
Saturation {
 saturation 4
 mode Average
 name Saturation1
 label "\[value saturation]"
 note_font Helvetica
 xpos 7880
 ypos 2602
}
Group {
 name PlotChromaticity1
 label colorwheel
 xpos 7880
 ypos 2672
 addUserKnob {20 PlotGamut_tab l PlotGamut}
 addUserKnob {6 plot_input l "&nbsp;<b>Plot Input Pixels" t "Enable plotting of the input pixels" +STARTLINE}
 plot_input true
 addUserKnob {41 input_gamut t "Set the gamut that the input colors are encoded in" T GamutToXYZ3.gamut}
 addUserKnob {4 diagram t "Choose the type of chromaticity diagram" M {"CIE 1931 xy Chromaticity Diagram" "CIE 1976 u' v' Uniform Chromaticity Scale Diagram" ""}}
 addUserKnob {4 plot_type l "plot type" t "Choose the type of plot rendering.\n\nBlinkScript uses a custom blinkscript plotting node which is very fast.\n\nPositionToPoints renders each pixels as a point in 3D space and renders it through a ScanlineRender node. Much slower and more buggy, but can be useful for visualizing the 3 dimensional aspect of the color data." M {BlinkScript "PositionToPoints + ScanlineRender"}}
 addUserKnob {6 enable_sample_color l "enable sample color" t "Enable plotting of the sampled color below" +STARTLINE}
 addUserKnob {41 sample_color l "sample color" t "sample and plot selected color" T SampleColor.color}
 addUserKnob {22 follow_viewer l "follow viewer" T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('v = nuke.activeViewer().node()\\nif v and v.name() == nuke.thisNode().name():\\n    con = v.input(nuke.activeViewer().activeInput())\\n    plt = nuke.toNode(\"\{0\}\")\\n    plt.setInput(0, con)'.format(n.name()))" +STARTLINE}
 addUserKnob {22 unfollow_viewer l "unfollow viewer" -STARTLINE T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('')"}
 addUserKnob {26 ""}
 addUserKnob {26 plot_dimensions_label l " " T "<b>Plot Dimensions"}
 addUserKnob {7 right_margin l "right margin" R 1 1.5}
 right_margin 1.3
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin 0.08
 addUserKnob {41 output_format l format T Plot_Input.format}
 addUserKnob {6 resample_input l "resample input" t "scale down input - can help speed up plotting for high resolution inputs." +STARTLINE}
 addUserKnob {3 input_width l " " t "width to resample input to" -STARTLINE}
 input_width 2048
 addUserKnob {6 map_overlays_to_input_gamut l "map overlays to input gamut" t "This maps the overlays like the spectral locus, pointer's gamut, and the gamut overlay to the working gamut instead of keeping them as XYZ.\n\nFor example if the input gamut is ACEScg, these overlays will be mapped to that. Note that this can cause most of the overlays to be negative or highly saturated which might harm the visual appearance." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 draw_axis l "&nbsp;&nbsp; <b> Coordinate Grid" t "Draw coordinate grid" +STARTLINE}
 draw_axis true
 addUserKnob {6 full_width_grid l "full width grid" t "Enable full width coordinate grid" +STARTLINE}
 addUserKnob {41 plot_cie_xy_axis_color l "axis color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_color}
 addUserKnob {41 plot_cie_xy_axis_hatch_color l "grid color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_hatch_color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_spectral_locus l " &nbsp;&nbsp; <b> Spectral Locus" t "draw the spectrum locus: the boundary of color the human eye can see." +STARTLINE}
 addUserKnob {6 colorize_spectral_locus l "colorize spectral locus" +STARTLINE}
 colorize_spectral_locus true
 addUserKnob {41 spectral_locus_color l color T Fill2.color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_gamut_overlay l " &nbsp;&nbsp; <b> Gamut Overlay" t "draw an overlay of a color gamut (choose gamut below)" +STARTLINE}
 addUserKnob {41 gamut_overlay l gamut t "choose gamut to overlay" T GamutToXYZ_OVERLAY.gamut}
 addUserKnob {4 style t "Choose the style to display the gamut plot" M {boundary dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density t "Density of the grid or points if style is not boundary" R 10 100}
 density 55
 addUserKnob {7 opacity_gamut_overlay l opacity R 0.1 1}
 opacity_gamut_overlay 0.5
 addUserKnob {6 colorize_gamut_boundary l "colorize gamut boundary" t "use a constant color for the gamut overlay instead of the spectral boundary colors." +STARTLINE}
 addUserKnob {41 overlay_gamut_color l color t "gamut boundary fill color, if enabled." T Fill1.color}
 addUserKnob {26 ""}
 addUserKnob {6 enable_pointers_gamut l "&nbsp; <b>Pointers Gamut" t "Enable Pointer's gamut overlay" +STARTLINE}
 addUserKnob {6 enable_pointer_samples l "enable samples" t "show the individual pointer gamut samples" +STARTLINE}
 addUserKnob {6 colorize_pointers_gamut l "colorize pointers gamut" t "set the pointer's gamut colors to a constant" +STARTLINE}
 addUserKnob {41 color T ColorizePointers.color}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "Draw Gamut"
  note_font_size 42
  xpos -2165
  ypos -325
  bdwidth 585
  bdheight 1462
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x222222ff
  label "Draw Spectral Locus"
  note_font_size 42
  xpos -955
  ypos -321
  bdwidth 582
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "Plot Input Pixels"
  note_font_size 42
  xpos 218
  ypos -633
  bdwidth 797
  bdheight 2562
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x202020ff
  label "Pointer's Gamut"
  note_font_size 48
  xpos -1535
  ypos -321
  bdwidth 554
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3a3a3aff
  label "Sample Input Color"
  note_font_size 42
  xpos -112
  ypos 75
  bdwidth 664
  bdheight 714
  z_order 4
 }
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name Camera1
  xpos -708
  ypos 1329
 }
 Input {
  inputs 0
  name Input
  xpos 620
  ypos -490
 }
 AddChannels {
  name AddChannels1
  xpos 620
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{parent.input_width}}
  box_height {{rint(box_width/(input.width/input.height))}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  filter impulse
  name ResampleInput
  xpos 620
  ypos -370
  disable {{!parent.resample_input}}
 }
 Dot {
  name Dot7
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 162
 }
set Nd596080 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 162
 }
 Group {
  name GamutToXYZ3
  label "\[value gamut] to XYZ\n"
  xpos 730
  ypos 248
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 730
  ypos 296
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression4
  label "CIE Yxy to CIELuv"
  xpos 730
  ypos 344
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot13
  label " Pos"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 618
 }
set Nd604a10 [stack 0]
push $Nd596080
 Dot {
  name Dot16
  label " Col"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 522
 }
set Nd609af0 [stack 0]
 Group {
  inputs 2
  name PlotPoints2
  xpos 730
  ypos 686
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 0.1
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 1266
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -1470
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -1470
  ypos -9
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -1470
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -1470
  ypos 98
 }
 BlackOutside {
  name BlackOutside2
  xpos -1470
  ypos 179
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -1470
  ypos 227
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1436
  ypos 282
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -1250
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -1250
  ypos -10
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -1250
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -1250
  ypos 98
 }
 BlackOutside {
  name BlackOutside3
  xpos -1250
  ypos 179
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -1250
  ypos 228
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1250
  ypos 278
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -1250
  ypos 325
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -1250
  ypos 367
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 402
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -776
  ypos 402
 }
set Nd76b6d0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -700
  ypos -122
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -700
  ypos -80
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -700
  ypos -26
 }
set Nd7895a0 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos -22
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -590
  ypos 16
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 70
 }
 BlackOutside {
  name BlackOutside1
  xpos -590
  ypos 118
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos 194
 }
push $Nd7895a0
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -700
  ypos 16
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -700
  ypos 74
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 136
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -700
  ypos 190
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -700
  ypos 227
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -700
  ypos 279
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -700
  ypos 305
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -700
  ypos 337
  disable {{parent.draw_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 378
 }
set Nd880240 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -590
  ypos 398
  disable {{!parent.enable_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -590
  ypos 493
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 609
 }
set Nd8a9280 [stack 0]
push $Nd76b6d0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -810
  ypos 440
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix3
  label "XYZ to working"
  xpos -810
  ypos 478
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.43 1 1}
  unpremult rgba.alpha
  name ColorizePointers
  xpos -810
  ypos 575
  disable {{!parent.colorize_pointers_gamut x1 1}}
 }
push $Nd880240
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 429
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to working"
  xpos -700
  ypos 477
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0.5 1 1}
  unpremult rgba.alpha
  name Fill2
  xpos -700
  ypos 528
  disable {{!parent.colorize_spectral_locus}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -700
  ypos 581
  disable {{!parent.enable_pointers_gamut}}
 }
set Nd910f20 [stack 0]
 Group {
  inputs 2
  name PlotPoints1
  xpos -590
  ypos 650
  disable {{!(parent.draw_spectral_locus||parent.enable_pointers_gamut)}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Group {
  inputs 0
  name GamutGrid
  xpos -2054
  ypos 336
  addUserKnob {20 GamutGrid}
  addUserKnob {3 style}
  style {{max(0,parent.style-1)}}
  addUserKnob {3 distribution -STARTLINE}
  distribution {{parent.distribution}}
  addUserKnob {7 density R 10 150}
  density {{parent.density}}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {12 wxy}
  wxy {{parent.GamutToXYZ_OVERLAY.wxy} {parent.GamutToXYZ_OVERLAY.wxy}}
 }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   centerSaturation 1
   fillFormat false
   area {-170 -158 682 670}
   name ColorWheel4
   xpos -260
   ypos 3
   postage_stamp false
  }
  Crop {
   box {0 0 512 512}
   crop false
   name Crop2
   xpos -260
   ypos 29
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat3
   note_font "Bitstream Vera Sans"
   xpos -260
   ypos 110
  }
set Nd974e20 [stack 0]
push $Nd974e20
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   roworder TopBottom
   name ContactSheet2
   xpos -260
   ypos 169
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -226
   ypos 246
  }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   fillFormat false
   area {40 40 472 472}
   name ColorWheel1
   xpos -40
   ypos -664
   postage_stamp false
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -628
  }
  Crop {
   box {0 0 {width} {height}}
   reformat true
   name Crop1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -602
  }
  Unpremult {
   name Unpremult1
   xpos -40
   ypos -526
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos -415
  }
  Colorspace {
   colorspace_in CIE-XYZ
   colorspace_out CIE-Yxy
   name Colorspace1
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -341
  }
set Nd9cecb0 [stack 0]
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos -331
  }
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression5
   label "CIE Yxy to CIELuv"
   xpos -590
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
   expr2 "hypot(g-white.x, b-white.y)"
   expr3 a
   name Expression3
   xpos -590
   ypos -261
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
  }
set Nd9fa570 [stack 0]
  Posterize {
   channels rgb
   Colors {{rint(parent.density/3*2)}}
   name Posterize1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos -194
  }
set Nda09770 [stack 0]
push $Nd9fa570
  Dot {
   name Dot15
   note_font "Bitstream Vera Sans"
   xpos -446
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   name Copy1
   xpos -480
   ypos -154
  }
push $Nda09770
push $Nd9fa570
  Dot {
   name Dot16
   note_font "Bitstream Vera Sans"
   xpos -666
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   name Copy2
   xpos -700
   ypos -153
  }
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   center true
   roworder TopBottom
   name ContactSheet3
   xpos -590
   ypos -102
  }
  Expression {
   expr0 r
   expr1 cos(radians(g*360))*b+white.x
   expr2 sin(radians(g*360))*b+white.y
   expr3 a
   name Expression19
   xpos -590
   ypos -57
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{parent.Expression3.white} {parent.Expression3.white}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression2
   label "CIELuv to CIE Yxy"
   xpos -590
   ypos -16
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace2
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -590
   ypos 31
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix1
   label "XYZ to RGB"
   xpos -590
   ypos 81
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin2
   xpos -590
   ypos 119
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 156
  }
  Premult {
   name Premult1
   xpos -590
   ypos 194
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge2
   xpos -590
   ypos 242
  }
  Shuffle {
   alpha white
   name Shuffle1
   label "\[value in] -> \[value out]"
   xpos -590
   ypos 314
  }
  Dot {
   name Dot3
   label " GRID"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos 378
  }
set Ndad0000 [stack 0]
push $Nd974e20
push $Nd9cecb0
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression4
   label "CIE Yxy to CIELuv"
   xpos -40
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 rint(g*Colors)/Colors
   expr2 rint(b*Colors)/Colors
   expr3 a
   name Expression1
   label rint
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -233
   addUserKnob {20 User}
   addUserKnob {7 Colors R 1 256}
   Colors {{parent.density}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression6
   label "CIELuv to CIE Yxy"
   xpos -40
   ypos -184
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace3
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -133
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix3
   label "XYZ to RGB"
   xpos -40
   ypos -57
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp4
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -13
  }
  Premult {
   name Premult2
   xpos -40
   ypos 34
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge1
   xpos -40
   ypos 110
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin1
   xpos -40
   ypos 175
  }
  Dot {
   name Dot4
   label " DOTS"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 378
  }
set Ndb5bc50 [stack 0]
  Switch {
   inputs 2
   which {{parent.style}}
   name Switch1
   xpos -257
   ypos 483
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix2
   label "RGB to XYZ"
   xpos -257
   ypos 560
  }
  Output {
   name Output
   xpos -257
   ypos 740
  }
  ColorWheel {
   inputs 0
   format "256 256 0 0 256 256 1 square_256"
   area {40 40 472 472}
   name ColorWheel2
   xpos -37
   ypos -705
   postage_stamp false
  }
push $Ndb5bc50
push $Ndad0000
  Viewer {
   inputs 2
   frame_range 1-100
   viewerProcess "aces (rec1886)"
   name Viewer1
   note_font Helvetica
   xpos -666
   ypos 543
  }
 end_group
set Nd956060 [stack 0]
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  centerSaturation 1
  name ColorWheel4
  xpos -1910
  ypos 254
  postage_stamp false
 }
 Unpremult {
  name Unpremult1
  xpos -1910
  ypos 302
 }
 Group {
  name GamutToXYZ_OVERLAY
  label "\[value gamut] to XYZ\n"
  xpos -1910
  ypos 344
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 29
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 89
  }
 end_group
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch_Outline
  xpos -1910
  ypos 398
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 450
 }
set Ndc04a90 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1800
  ypos 440
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1800
  ypos 512
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 570
 }
set Ndc2fef0 [stack 0]
push $Ndc04a90
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to working"
  xpos -1910
  ypos 471
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Fill1
  xpos -1910
  ypos 530
  disable {{!parent.colorize_gamut_boundary}}
 }
set Ndc425c0 [stack 0]
 Group {
  inputs 2
  name PlotPoints
  xpos -1800
  ypos 614
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 1266
 }
 Scene {
  inputs 3
  name Scene1
  xpos -580
  ypos 1242
 }
push $Nd604a10
push $Nd609af0
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{"parent.diagram? parent.right_margin * 0.72 : parent.right_margin"}}
  plot_cie_xy_left_margin {{parent.left_margin}}
  plot_cie_xy_process_input {{parent.plot_input}}
  format "1024 1024 0 0 1024 1024 1 square_1K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Input
  xpos 620
  ypos 608
 }
set Ndc92f80 [stack 0]
 Fill {
  color 0
  name Fill4
  xpos -464
  ypos 1357
  hide_input true
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender
  xpos -590
  ypos 1382
 }
 Dot {
  name Dot17
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 1482
 }
push $Ndc2fef0
push $Ndc425c0
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 3a854edac5c1c8e3a3d2801ec73798509e6e91ec7294287590bd8357a67964d1 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 5 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 5 \"padding\" 1 1 \"left_margin\" 1 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input true
  plot_cie_xy_add_samples 0.5
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Gamut
  xpos -1910
  ypos 608
 }
 Multiply {
  channels rgba
  value {{parent.opacity_gamut_overlay}}
  name GamutOverlayOpacity
  xpos -1910
  ypos 686
  disable true
 }
 Group {
  name HueRotate1
  note_font Helvetica
  xpos -1910
  ypos 722
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
 FrameHold {
  first_frame 1
  name FrameHold2
  xpos -1910
  ypos 764
  cached true
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 834
 }
push $Nd8a9280
push $Nd910f20
 BlinkScript {
  inputs 2
  recompileCount 5
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 65751dc3c93d46b59ba922fda7175ada4e69018b6dd8c29c890f1487b4a4c5d0 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 9 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"draw_axes\" Bool 1 AA== \"grid_hatch_length\" Float 1 AAAAAA== \"axis_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"axis_hatch_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 9 \"padding\" 1 1 \"left_margin\" 1 1 \"draw_axes\" 1 1 \"grid_hatch_length\" 1 1 \"axis_color\" 4 1 \"axis_hatch_color\" 4 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool draw_axes;\n  float grid_hatch_length;\n  float4 axis_color;\n  float4 axis_hatch_color;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n\n  void draw_grid() \{\n    // grid width in pixels. expresses a 0 to 1 range in CIE xy\n    float grid_width = 1.0f * outsize + offset;\n    // hatch interval gives us cross-hatching at specified interval in pixels. defaults to 0.1\n    int hatch_int = int(round(grid_width - offset) * 0.1f);\n    float hatchw = outsize * grid_hatch_length; // The width of the cross-hatch: 1% of grid width\n\n    int hatch_ct = 0;\n    for ( int i = offset; i < grid_width; i++ ) \{\n      // draw vertical axis\n      bilin( float2(offset, i), axis_color);\n      // draw horizontal axis\n      bilin( float2(i, offset), axis_color);\n      // draw cross hatches at every \n      if (hatch_ct == hatch_int) \{\n        hatch_ct = 0;\n        for ( int j = -outsize*0.01; j < hatchw; j++) \{\n          bilin(float2(round(offset + j), i), axis_hatch_color);\n          bilin(float2(i+ (offset-offset), round(offset + j)), axis_hatch_color);\n        \}\n      \}\n      hatch_ct++;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n    // Draw axes if enabled\n    if (draw_axes) \{\n      draw_grid();\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_draw_axes {{parent.draw_axis}}
  plot_cie_xy_grid_hatch_length {{"parent.full_width_grid ? 1 : 0.01"}}
  plot_cie_xy_axis_color {0.1 0.1 0.1 1}
  plot_cie_xy_axis_hatch_color {0.034 0.034 0.034 1}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input {{"parent.draw_spectral_locus || parent.enable_pointers_gamut"}}
  plot_cie_xy_add_samples 0.7
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SpectralLocus_and_Axis
  xpos -700
  ypos 643
 }
 FrameHold {
  first_frame 1
  name FrameHold1
  xpos -700
  ypos 699
  cached true
 }
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 762
 }
push $Nd596080
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos 400
  ypos 110
  postage_stamp false
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input0]"}}
  name Switch1
  xpos 400
  ypos 158
 }
 Fill {
  output rgb
  color {0.9885 -0.0035 0 1}
  name SampleColor
  xpos 290
  ypos 158
 }
 Fill {
  output alpha
  name Fill3
  xpos 290
  ypos 224
 }
 Reformat {
  type "to box"
  box_width 1
  box_height {{box_width}}
  box_fixed true
  name ReformatBox
  xpos 290
  ypos 278
 }
set Nddbe4d0 [stack 0]
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
      {{parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix} {parent.GamutToXYZ3.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "working to XYZ"
  xpos 180
  ypos 272
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 180
  ypos 320
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression6
  label "CIE Yxy to CIELuv"
  xpos 180
  ypos 368
  disable {{!parent.diagram}}
 }
push $Nddbe4d0
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_process_input true
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SampledColor
  xpos 290
  ypos 368
 }
 Dot {
  name Dot22
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos 426
 }
set Nde18060 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate1
  label "\[value size]"
  xpos 290
  ypos 488
 }
set Nde1dc90 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate2
  label "\[value size]"
  xpos 180
  ypos 488
 }
push $Nde18060
 Dot {
  name Dot21
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 426
 }
 Dilate {
  channels rgba
  size 1
  name Dilate5
  label "\[value size]"
  xpos -40
  ypos 464
 }
 FilterErode {
  channels rgba
  size -0.5
  filter gaussian
  name FilterErode1
  label "\[value size]"
  note_font Helvetica
  xpos -40
  ypos 514
 }
set Nde440e0 [stack 0]
 Dilate {
  channels rgba
  size {0 {parent.Dilate3.size.w}}
  name Dilate4
  label "\[value size]"
  xpos -40
  ypos 584
 }
push $Nde440e0
 Dilate {
  channels rgba
  size {{Output.width*plus_size/100} 0}
  name Dilate3
  label "\[value size]"
  xpos 70
  ypos 512
  addUserKnob {20 User}
  addUserKnob {7 plus_size R 0 4}
  plus_size 0.8
 }
 Merge2 {
  inputs 2
  operation screen
  bbox B
  name Merge9
  note_font Helvetica
  xpos 70
  ypos 591
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge10
  note_font Helvetica
  xpos 180
  ypos 591
 }
 Group {
  name HueRotate
  note_font Helvetica
  xpos 180
  ypos 639
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
push $Nde1dc90
 Merge2 {
  inputs 2
  bbox B
  name Merge8
  xpos 290
  ypos 638
 }
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 690
 }
push $Ndc92f80
 Merge2 {
  inputs 2
  bbox B
  name Merge7
  xpos 620
  ypos 686
  disable {{!parent.enable_sample_color}}
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 620
  ypos 758
  disable {{"!parent.draw_spectral_locus && !parent.draw_axis"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 620
  ypos 830
  disable {{!parent.draw_gamut_overlay}}
 }
 Blur {
  channels rgba
  size 1.5
  name Blur1
  label "poor man's antialiasing"
  xpos 620
  ypos 1136
 }
 Switch {
  inputs 2
  which {{parent.plot_type}}
  name Switch_PlotType
  xpos 620
  ypos 1478
 }
 Output {
  name Output
  xpos 620
  ypos 1641
 }
push $Nd956060
 Viewer {
  frame_range 1-100
  viewerProcess "aces (rec1886)"
  name Viewer1
  note_font Helvetica
  xpos -2460
  ypos 783
 }
end_group
Merge2 {
 inputs 2
 bbox B
 name Merge11
 label "spectral locus"
 note_font Helvetica
 xpos 7880
 ypos 2746
}
Merge2 {
 inputs 2
 bbox B
 name Merge12
 label acescg
 note_font Helvetica
 xpos 7880
 ypos 2794
}
Merge2 {
 inputs 2
 bbox B
 name Merge13
 label e-gamut
 note_font Helvetica
 xpos 7880
 ypos 2842
 disable true
}
Merge2 {
 inputs 2
 bbox B
 name Merge14
 label "alexa wide gamut"
 note_font Helvetica
 xpos 7880
 ypos 2890
 disable true
}
Dot {
 name Dot102
 label " Original RGB"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 3018
}
Dot {
 name Dot93
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 3186
}
set Ndfb5360 [stack 0]
Dot {
 name Dot127
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8134
 ypos 3186
}
set Ne28edb0 [stack 0]
Dot {
 name Dot92
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8354
 ypos 3186
}
Group {
 name VisualizeColorDistance2
 xpos 8320
 ypos 3254
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 type outside
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Ne2c46b0 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Ne2c9670 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Ne2ce550 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Ne2d3420 [stack 0]
push $Ne2ce550
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Ne2d3420
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Ne300d30 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Ne300d30
push $Ne2c9670
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Ne2c46b0
 Fill {
  output rgb
  color 0.07
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 inputs 0
 name GamutPrimaries
 xpos 7440
 ypos 6639
 postage_stamp true
 addUserKnob {20 GamutPrimaries_tab l GamutPrimaries}
 addUserKnob {41 gamut T ColorMatrix5.gamut}
 addUserKnob {41 red T Primaries.red}
 addUserKnob {41 green T Primaries.green}
 addUserKnob {41 blue T Primaries.blue}
 addUserKnob {41 white T Primaries.white}
}
 Constant {
  inputs 0
  color {0 0 0 0}
  format "4 1 0 0 4 1 1 rgbw"
  name Constant3
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos -42
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 4
  box_height 2
  box_fixed true
  name Reformat1
  xpos 509
  ypos -16
 }
 Rectangle {
  area {0 0 1 2}
  color {1 0 0 0}
  name Rectangle1
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 10
 }
 Rectangle {
  area {1 0 2 2}
  color {0 1 0 0}
  name Rectangle2
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 36
 }
 Rectangle {
  area {2 0 3 2}
  color {0 0 1 0}
  name Rectangle3
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 59
 }
 Rectangle {
  area {3 0 4 2}
  color {1 1 1 0}
  name Rectangle4
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 85
 }
 Group {
  name ColorMatrix5
  label "\[value gamut] to XYZ\n"
  xpos 509
  ypos 128
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
set Ne4863e0 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 509
  ypos 185
 }
 NoOp {
  name Primaries
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 238
  addUserKnob {20 User}
  addUserKnob {12 red}
  red {{"\[sample this green 0 0]"} {"\[sample this blue 0 0]"}}
  addUserKnob {12 green}
  green {{"\[sample this green 1 0]"} {"\[sample this blue 1 0]"}}
  addUserKnob {12 blue}
  blue {{"\[sample this green 2 0]"} {"\[sample this blue 2 0]"}}
  addUserKnob {12 white}
  white {{"\[sample this green 3 0]"} {"\[sample this blue 3 0]"}}
 }
push $Ne4863e0
 Output {
  name Output
  xpos 400
  ypos 134
 }
end_group
Group {
 name ChromaticityConverter_live4
 tile_color 0xbd91c9ff
 label "\[if \{\[value invert]\} \{return \"\[value dst_colorspace_name] to \[value src_colorspace_name]\"\} else \{return \"\[value src_colorspace_name] to \[value dst_colorspace_name]\"\}]"
 xpos 7440
 ypos 6752
 addUserKnob {20 ChromaticityConverter_tab l ChromaticityConverter}
 addUserKnob {26 colorspace_chromaticities_label l " " T "<b>Src Colorspace Chromaticities</b>"}
 addUserKnob {35 src_presets l preset M {colorspace/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} src_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} src_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.314 0.351\} src_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 -0.10200\} wxy \{0.3127 0.329\} src_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} src_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.329\} src_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} src_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} src_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.329\} src_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{rxy \{0.71 0.31\} gxy \{0.21 0.88\} bxy \{0.09 -0.08\} wxy \{0.3127 0.329\} src_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{rxy \{0.9173 0.2502\} gxy \{0.2833 1.7072\} bxy \{0.0856 -0.0708\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{rxy \{0.7422 0.2859\} gxy \{0.4140 1.3035\} bxy \{0.0342 -0.0833\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{rxy \{1.0625 0.3948\} gxy \{0.3689 0.7775\} bxy \{0.0956 -0.0332\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{rxy \{0.9175 0.2983\} gxy \{0.2983 1.2835\} bxy \{0.0756 -0.0860\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{rxy \{0.8608 0.3689\} gxy \{0.3282 0.6156\} bxy \{0.0783 -0.0233\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{rxy \{0.7177 0.3171\} gxy \{0.2280 0.8616\} bxy \{0.1006 -0.0820\} wxy \{0.3127 0.329\} src_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.329\} src_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} src_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} src_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{rxy \{0.6900 0.3100\} gxy \{0.1800 0.7700\} bxy \{0.1000 0.0200\} wxy \{0.33243 0.34744\} src_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{rxy \{0.6898 0.3206\} gxy \{0.0736 0.9003\} bxy \{0.1166 0.0374\} wxy \{0.33333333 0.33333333\} src_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{rxy \{0.6250 0.3400\} gxy \{0.2800 0.5950\} bxy \{0.1550 0.0700\} wxy \{0.3127 0.329\} src_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{rxy \{0.735191637630662 0.264808362369338\} gxy \{0.215336134453781 0.774159663865546\} bxy \{0.130122950819672 0.034836065573770\} wxy \{0.3457 0.3585\} src_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{rxy \{1 0\} gxy \{0 1\} bxy \{0 0\} wxy \{0.33333333  0.33333333\} src_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 rxy l r T _knobchanged_.rxy}
 addUserKnob {41 gxy l g T _knobchanged_.gxy}
 addUserKnob {41 bxy l b T _knobchanged_.bxy}
 addUserKnob {41 wxy l w T _knobchanged_.wxy}
 addUserKnob {1 src_colorspace_name l src +DISABLED}
 src_colorspace_name ACES
 addUserKnob {26 ""}
 addUserKnob {26 dst_colorspace_chromaticities_label l " " T "<b>Dst Colorspace Chromaticities</b>"}
 addUserKnob {35 dst_presets l preset M {colorspace/ACES "knobs this \{drxy \{0.73470 0.26530\} dgxy \{0.00000 1.00000\} dbxy \{0.00010 -0.07700\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{drxy \{0.713 0.293\} dgxy \{0.165 0.830\} dbxy \{0.128 0.044\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ drxy \{0.8 0.3177\} dgxy \{0.18 0.9\} dbxy \{0.065 -0.0805\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{drxy \{0.64000 0.33000\} dgxy \{0.30000 0.60000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.314 0.351\} dst_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{drxy \{0.68400 0.31300\} dgxy \{0.22100 0.84800\} dbxy \{0.08610 -0.10200\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{drxy \{0.753044222785 0.327830576682\} dgxy \{0.299570228481 0.700699321956\} dbxy \{0.079642066735 -0.0549379510888\} dwxy \{0.321683187724 0.337673316035\} dst_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{drxy \{0.753044491143 0.327831029513\} dgxy \{0.299570490451 0.700699415614\} dbxy \{0.145011584278 0.0510971250879\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{drxy \{0.699747001291 0.329046930313\} dgxy \{0.304264039024 0.623641145129\} dbxy \{0.134913961296 0.0347174412813\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{drxy \{0.878682510476 0.32496400741\} dgxy \{0.300888714367 0.679054755791\} dbxy \{0.0953986946056 -0.0293793268343\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{drxy \{0.701181035906 0.329014155583\} dgxy \{0.300600304652 0.683788834269\} dbxy \{0.108154455624 -0.00868817578666\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{drxy \{0.701180591892 0.329013699116\} dgxy \{0.300600395529 0.683788824257\} dbxy \{0.145331946229 0.0516168036226\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{drxy \{0.780308 0.304253\} dgxy \{0.121595 1.493994\} dbxy \{0.095612 -0.084589\} dwxy \{0.3127 0.329\} dst_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{drxy \{0.69848046 0.19302645\} dgxy \{0.32955538 1.02459662\} dbxy \{0.10844263 -0.03467857\} dwxy \{0.3127 0.329\} dst_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{drxy \{0.74 0.27\} dgxy \{0.17 1.14\} dbxy \{0.08 -0.1\} dwxy \{0.3127 0.329\} dst_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{drxy \{0.73 0.28\} dgxy \{0.14 0.855\} dbxy \{0.1 -0.05\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{drxy \{0.766 0.275\} dgxy \{0.225 0.8\} dbxy \{0.089 -0.087\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{drxy \{0.730 0.280\} dgxy \{0.165 0.840\} dbxy \{0.100 -0.030\} dwxy \{0.3127 0.329\} dst_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{drxy \{0.71 0.31\} dgxy \{0.21 0.88\} dbxy \{0.09 -0.08\} dwxy \{0.3127 0.329\} dst_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{drxy \{0.9173 0.2502\} dgxy \{0.2833 1.7072\} dbxy \{0.0856 -0.0708\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{drxy \{0.7422 0.2859\} dgxy \{0.4140 1.3035\} dbxy \{0.0342 -0.0833\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{drxy \{1.0625 0.3948\} dgxy \{0.3689 0.7775\} dbxy \{0.0956 -0.0332\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{drxy \{0.9175 0.2983\} dgxy \{0.2983 1.2835\} dbxy \{0.0756 -0.0860\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{drxy \{0.8608 0.3689\} dgxy \{0.3282 0.6156\} dbxy \{0.0783 -0.0233\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{drxy \{0.7177 0.3171\} dgxy \{0.2280 0.8616\} dbxy \{0.1006 -0.0820\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{drxy \{0.6400 0.3300\} dgxy \{0.2100 0.7100\} dbxy \{0.1500 0.0600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{drxy \{0.7347 0.2653\} dgxy \{0.1152 0.8264\} dbxy \{0.1566 0.0177\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01  8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{drxy \{0.734699 0.265301\} dgxy \{0.159597 0.840403\} dbxy \{0.036598 0.000105\} dwxy \{0.345704 0.358540\} dst_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{drxy \{0.6900 0.3100\} dgxy \{0.1800 0.7700\} dbxy \{0.1000 0.0200\} dwxy \{0.33243 0.34744\} dst_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{drxy \{0.6898 0.3206\} dgxy \{0.0736 0.9003\} dbxy \{0.1166 0.0374\} dwxy \{0.33333333 0.33333333\} dst_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{drxy \{0.6250 0.3400\} dgxy \{0.2800 0.5950\} dbxy \{0.1550 0.0700\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{drxy \{0.735191637630662 0.264808362369338\} dgxy \{0.215336134453781 0.774159663865546\} dbxy \{0.130122950819672 0.034836065573770\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{drxy \{1 0\} dgxy \{0 1\} dbxy \{0 0\} dwxy \{0.33333333  0.33333333\} dst_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 drxy l r T _knobchanged_.drxy}
 addUserKnob {41 dgxy l g T _knobchanged_.dgxy}
 addUserKnob {41 dbxy l b T _knobchanged_.dbxy}
 addUserKnob {41 dwxy l w T _knobchanged_.dwxy}
 addUserKnob {1 dst_colorspace_name l dst +DISABLED}
 dst_colorspace_name ACEScg
 addUserKnob {26 ""}
 addUserKnob {26 chromatic_adaptation_label l " " T "<b>Chromatic Adaptation</b>"}
 addUserKnob {41 cat_method l method T _knobchanged_.cat_method}
 addUserKnob {26 ""}
 addUserKnob {41 invert T _knobchanged_.invert}
 addUserKnob {22 create_matrix_node l "Create Matrix" t "Create ColorMatrix node with the current values." T "node = nuke.thisNode()\nnode\['calculate_matrix'].execute()\nnuke.root().begin()\n_ = \[n.setSelected(False) for n in nuke.allNodes(recurseGroups=True)]\nm = nuke.createNode('ColorMatrix')\nm\['matrix'].setValue(node\['matrix'].getValue())\nm.setXYpos(node.xpos()-120, node.ypos())\nm\['label'].setValue(node\['label'].getValue())" +STARTLINE}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {22 clear l Clear T "n = nuke.thisNode()\nn\['matrix'].setValue(\[1,0,0,0,1,0,0,0,1])\nn\['label'].setValue('')" +STARTLINE}
 addUserKnob {22 show_matrix l Show t "Show matrix values in a popup window for copying." T "node = nuke.thisNode()\nshow_4x4 = node\['show_matrix_4x4'].getValue()\nshow_commas = node\['show_matrix_commas'].getValue()\n\nif show_commas:\n    sep = ', '\nelse:\n    sep = ' '\n\nmtx = \[format(i, '.8f') for i in node\['matrix'].getValue()]\n\nif show_4x4:\n    z = \['0']\n    mtx = mtx\[0:3] + z + mtx\[3:6] + z + mtx\[6:9] + z*4 + \['1']\n\nnuke.message(sep.join(mtx))" +STARTLINE}
 addUserKnob {6 show_matrix_4x4 l "show 4x4" t "present values in a 4x4 matrix (useful for ocio)" -STARTLINE}
 addUserKnob {6 show_matrix_commas l "show comma sep" t "show matrix comma separated." -STARTLINE}
 addUserKnob {22 save_spimtx l "Save spimtx" T "# inspired by ColorMatrixPlus by hpd\ndef write_spimtx(mtx_node, spimtx_file):\n    mtx_vals = mtx_node\['matrix'].getValue()\n    with open(spimtx_file, \"w\") as f:\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[0], mtx_vals\[1], mtx_vals\[2]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[3], mtx_vals\[4], mtx_vals\[5]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[6], mtx_vals\[7], mtx_vals\[8]) )\n\nnode = nuke.thisNode()\nfilepath = nuke.getFilename('Save Matrix', '*.spimtx')\n\nif filepath:\n    if not filepath.endswith('.spimtx'):\n        filepath = filepath + '.spimtx'\n    write_spimtx(node, filepath)" +STARTLINE}
 addUserKnob {22 load_spimtx l "Load spimtx" -STARTLINE T "# Inspired by ColorMatrixPlus by hpd\ndef load_spimtx(spimtx, mtx_node):\n    with open( spimtx, 'r') as file:\n        lines = file.readlines()\n    matrix_values = list()\n    for line in lines:\n        matrix_values.extend( map(float, line.strip().split(' ')\[0:3]) )\n    mtx_node\['matrix'].setValue(matrix_values)\n\nspimtx = nuke.getFilename('Load SPIMTX', '*.spimtx')\nif spimtx:\n    load_spimtx( spimtx, nuke.thisNode() )\n"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 206
 }
 Dot {
  name _knobchanged_
  knobChanged "import nuke\nfloat2 = nuke.math.Vector2\nfloat3 = nuke.math.Vector3\nfloat3x3 = nuke.math.Matrix3\n\nCONE_RESP_MAT_BRADFORD = float3x3()\nCONE_RESP_MAT_CAT02 = float3x3()\nCONE_RESP_MAT_VONKRIES = float3x3()\nCONE_RESP_MAT_SHARP = float3x3()\nCONE_RESP_MAT_CMCCAT2000 = float3x3()\n\n# From ACESlib.Utilities_Color : 166\nCONE_RESP_MAT_BRADFORD.set(0.89510, -0.75020,  0.03890, 0.26640,  1.71350, -0.06850, -0.16140,  0.03670,  1.02960)\nCONE_RESP_MAT_CAT02.set(0.73280, -0.70360,  0.00300, 0.42960,  1.69750,  0.01360, -0.16240, 0.00610, 0.98340)\n\n# https://web.stanford.edu/~sujason/ColorBalancing/adaptation.html\n# from S. Bianco. \"Two New von Kries Based Chromatic Adapatation Transforms Found by Numerical Optimization.\"\nCONE_RESP_MAT_VONKRIES.set(0.40024, -0.2263, 0, 0.7076, 1.16532, 0, -0.08081, 0.0457, 0.91822)\nCONE_RESP_MAT_SHARP.set(1.2694, -0.8364, 0.0297, -0.0988, 1.8006, -0.0315, -0.1706, 0.0357, 1.0018)\nCONE_RESP_MAT_CMCCAT2000.set(0.7982, -0.5918, 0.0008, 0.3389, 1.5512, 0.239, -0.1371, 0.0406, 0.9753)\n\n\ndef transpose(mtx):\n    # transpose (swap rows to columns) of a 3x3 matrix\n    order = \[0, 3, 6, 1, 4, 7, 2, 5, 8]\n    omtx = float3x3()\n    for i in xrange(9):\n        omtx\[i] = mtx\[order\[i]]\n    return omtx\n\ndef mult_f33_f33(A, B):\n    # Calculate multiplication of 3x3 matrix A and 3x3 matrix B\n    C = float3x3()\n    C.makeIdentity()\n\n    # Row 1\n    C\[0] = (A\[0]*B\[0] + A\[1]*B\[3] + A\[2]*B\[6])\n    C\[1] = (A\[0]*B\[1] + A\[1]*B\[4] + A\[2]*B\[7])\n    C\[2] = (A\[0]*B\[2] + A\[1]*B\[5] + A\[2]*B\[8])\n    # Row 2\n    C\[3] = (A\[3]*B\[0] + A\[4]*B\[3] + A\[5]*B\[6])\n    C\[4] = (A\[3]*B\[1] + A\[4]*B\[4] + A\[5]*B\[7])\n    C\[5] = (A\[3]*B\[2] + A\[4]*B\[5] + A\[5]*B\[8])\n    # Row 3\n    C\[6] = (A\[6]*B\[0] + A\[7]*B\[3] + A\[8]*B\[6])\n    C\[7] = (A\[6]*B\[1] + A\[7]*B\[4] + A\[8]*B\[7])\n    C\[8] = (A\[6]*B\[2] + A\[7]*B\[5] + A\[8]*B\[8])\n\n    return C;\n\n\ndef mult_f3_f33(src, mtx):\n    return float3(mtx\[0] * src\[0] + mtx\[1] * src\[1] + \n    mtx\[2] * src\[2], mtx\[3] * src\[0] + mtx\[4] * src\[1] + \n    mtx\[5] * src\[2], mtx\[6] * src\[0] + mtx\[7] * src\[1] + \n    mtx\[8] * src\[2])\n\n\ndef XYZ_2_xyY(XYZ):\n    xyY = float3()\n    divisor = (XYZ\[0] + XYZ\[1] + XYZ\[2])\n    if (divisor == 0.):\n        divisor = 1e-10\n    xyY.set(XYZ\[0] / divisor, XYZ\[1] / divisor, XYZ\[1])\n    return xyY\n\n\ndef xyY_2_XYZ(xyY):\n    XYZ = float3()\n    XYZ.set(\n        xyY\[0] * xyY\[2] / max( xyY\[1], 1e-10), \\\n        xyY\[2], \\\n        (1.0 - xyY\[0] - xyY\[1]) * xyY\[2] / max( xyY\[1], 1e-10)\n        )\n    return XYZ\n\n\ndef calculate_cat_matrix(src_xy, des_xy, coneRespMat=CONE_RESP_MAT_BRADFORD):\n    # Calculates and returns a 3x3 Von Kries chromatic adaptation transform \n    # from src_xy to des_xy using the cone response primaries defined \n    # by coneRespMat. By default, coneRespMat is set to CONE_RESP_MAT_BRADFORD. \n    # The default coneRespMat can be overridden at runtime. \n\n    src_xyY = float3(src_xy\[0], src_xy\[1], 1.0)\n    des_xyY = float3(des_xy\[0], des_xy\[1], 1.0)\n\n    src_XYZ = xyY_2_XYZ( src_xyY )\n    des_XYZ = xyY_2_XYZ( des_xyY )\n\n    src_coneResp = mult_f3_f33(src_XYZ, coneRespMat)\n    des_coneResp = mult_f3_f33(des_XYZ, coneRespMat)\n\n    vkMat = float3x3()\n    vkMat.set(\n        des_coneResp\[0] / src_coneResp\[0], 0.0, 0.0,\n        0.0, des_coneResp\[1] / src_coneResp\[1], 0.0,\n        0.0, 0.0, des_coneResp\[2] / src_coneResp\[2]\n        )\n\n    cat_matrix = float3x3()\n    coneRespMatInv = coneRespMat.inverse()\n    cat_matrix = coneRespMat * ( vkMat * coneRespMatInv)\n    \n    return cat_matrix\n\n\ndef RGBtoXYZ(xy, Y=1.0, inverse=False):\n    # given r g b chromaticities and whitepoint, convert RGB colors to XYZ\n    # based on CtlColorSpace.cpp from the CTL source code : 77\n    # param: xy - dict of chromaticity xy coordinates: rxy: float2(x, y) etc\n    # param: Y - luminance of \"white\" - defaults to 1.0\n    # param: inverse - calculate XYZ to RGB instead\n    r = xy\['rxy']\n    g = xy\['gxy']\n    b = xy\['bxy']\n    w = xy\['wxy']\n\n    X = w.x * Y / w.y\n    Z = (1 - w.x - w.y) * Y / w.y\n\n    # Scale factors for matrix rows\n    d = r.x * (b.y - g.y) + b.x * (g.y - r.y) + g.x * (r.y - b.y)\n\n    Sr =    (X * (b.y - g.y) -      \\\n            g.x * (Y * (b.y - 1) +  \\\n            b.y  * (X + Z)) +       \\\n            b.x  * (Y * (g.y - 1) + \\\n            g.y * (X + Z))) / d\n    \n    Sg =    (X * (r.y - b.y) +      \\\n            r.x * (Y * (b.y - 1) +  \\\n            b.y * (X + Z)) -        \\\n            b.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    Sb =    (X * (g.y - r.y) -      \\\n            r.x * (Y * (g.y - 1) +  \\\n            g.y * (X + Z)) +        \\\n            g.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    # Assemble the matrix\n    M = float3x3()\n    M.set(  Sr * r.x, Sr * r.y, Sr * (1 - r.x - r.y),\n            Sg * g.x, Sg * g.y, Sg * (1 - g.x - g.y),\n            Sb * b.x, Sb * b.y, Sb * (1 - b.x - b.y))\n    if inverse:\n        M = M.inverse()\n        return M\n    else:\n        return M\n\n\ndef get_primaries(node, dst=False):\n    # get colorspace chromaticities xy coordinates from node\n    dst_pri = \['drxy', 'dgxy', 'dbxy', 'dwxy']\n    pri = \['rxy', 'gxy', 'bxy', 'wxy']\n    d = \{\}\n    for i, p in enumerate(pri):\n        if dst:\n            d\[p] = float2(node\[dst_pri\[i]].getValue()\[0], node\[dst_pri\[i]].getValue()\[1])\n        else:\n            d\[p] = float2(node\[p].getValue()\[0], node\[p].getValue()\[1])\n    return d\n\n\n\ndef start():\n    node = nuke.thisGroup()\n    \n    identity_mtx = float3x3()\n    identity_mtx.makeIdentity()\n\n    invert = node\['invert'].getValue()\n    label = node\['label']\n    cat_method = node\['cat_method'].value()\n    src_primaries = get_primaries(node)\n    dst_primaries = get_primaries(node, dst=True)\n    src_colorspace_name = node\['src_colorspace_name'].getValue()\n    dst_colorspace_name = node\['dst_colorspace_name'].getValue()\n    \n    # Check for XYZ on src / destination\n    enable_src = (src_colorspace_name != 'XYZ')\n    enable_dst = (dst_colorspace_name != 'XYZ')\n    whitepoint_changed = (src_primaries\['wxy']\[0] != dst_primaries\['wxy']\[0] or src_primaries\['wxy']\[1] != dst_primaries\['wxy']\[1])\n\n    # Get chromatic adaptation method\n    if cat_method == 'Bradford':\n        coneRespMat = CONE_RESP_MAT_BRADFORD\n    elif cat_method == 'cat02':\n        coneRespMat = CONE_RESP_MAT_CAT02\n    elif cat_method == 'vonKries Hunt-Pointer-Estevez D65-Normalized':\n        coneRespMat = CONE_RESP_MAT_VONKRIES\n    elif cat_method == 'cmccat2000':\n        coneRespMat = CONE_RESP_MAT_CMCCAT2000\n    elif cat_method == 'sharp':\n        coneRespMat = CONE_RESP_MAT_SHARP\n    elif cat_method == 'None':\n        coneRespMat = identity_mtx\n        whitepoint_changed = False\n\n    if enable_src:\n        # Calculate Source RGB to XYZ matrix\n        src_rgb_to_xyz_mtx = RGBtoXYZ(src_primaries)\n\n    if enable_dst:\n        # Calculate Destination XYZ to RGB matrix\n        dst_xyz_to_rgb_mtx = RGBtoXYZ(dst_primaries, inverse=True)\n\n    if enable_src and not enable_dst:\n        # Convert from Source RGB to XYZ only\n        mtx = src_rgb_to_xyz_mtx\n\n    if enable_dst and not enable_src:\n        # Convert from XYZ to Destination RGB only\n        mtx = dst_xyz_to_rgb_mtx\n\n    if enable_src and enable_dst:\n        if whitepoint_changed:\n            # Calculate chromatic adaptation matrix\n            cat_mtx = calculate_cat_matrix(src_primaries\['wxy'], dst_primaries\['wxy'], coneRespMat=coneRespMat)\n            # We will use our own matrix multiplication algorithm since there seems to be precision issues with the nuke.math module :/\n            # mtx = (cat_mtx * src_rgb_to_xyz_mtx) * dst_xyz_to_rgb_mtx\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, mult_f33_f33(cat_mtx, src_rgb_to_xyz_mtx))\n        else:\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, src_rgb_to_xyz_mtx)\n\n    if invert:\n        mtx = mtx.inverse()\n\n    node\['matrix'].setValue(mtx)\n\n    return True\n\n\n\nn = nuke.thisNode()\ng = nuke.thisGroup()\nk = nuke.thisKnob()\n\nstart()\n"
  tile_color 0x5b0000
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 258
  addUserKnob {20 Knobs}
  addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  rxy {0.7347 0.2653}
  addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  gxy {0 1}
  addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  bxy {0.0001 -0.077}
  addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  wxy {0.32168 0.33767}
  addUserKnob {12 drxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  drxy {0.713 0.293}
  addUserKnob {12 dgxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  dgxy {0.165 0.83}
  addUserKnob {12 dbxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  dbxy {0.128 0.044}
  addUserKnob {12 dwxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  dwxy {0.32168 0.33767}
  addUserKnob {4 cat_method l method t "Choose the chromatic adaptation method for adapting whitepoint." M {Bradford cat02 "vonKries Hunt-Pointer-Estevez D65-Normalized" cmccat2000 sharp None}}
  addUserKnob {6 invert t "Invert direction of matrix." +STARTLINE}
 }
 ColorMatrix {
  matrix {
      {1.451439381 -0.2365107685 -0.2149285674}
      {-0.07655383646 1.176229835 -0.09967593104}
      {0.008316127583 -0.0060324613 0.997716248}
    }
  name ColorMatrix
  xpos -40
  ypos 302
 }
 Output {
  name Output
  xpos -40
  ypos 350
 }
end_group
Group {
 name VisualizeColorDistance11
 xpos 7440
 ypos 6830
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 show_distance true
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Ne540d90 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Ne545d50 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Ne54ac30 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Ne54fb00 [stack 0]
push $Ne54ac30
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Ne54fb00
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Ne57d150 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Ne57d150
push $Ne545d50
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Ne540d90
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 name MaxRGB5
 label "<pre><b>R</b> : \[value rmax]\n<b>G</b> : \[value gmax]\n<b>B</b> : \[value bmax]"
 note_font Helvetica
 xpos 7440
 ypos 6869
 addUserKnob {20 MaxRGB_tab l MaxRGB}
 addUserKnob {22 calculate t "calculate the max pixel value in red, green, and blue color components." T "def get_max(ct_node, frame):\n    ch = ct_node.name().lower()\[0]\n    nuke.execute(ct_node, frame, frame)\n    maxval = max(ct_node\['maxlumapixvalue'].getValue())\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    kmax.setValueAt(maxval, frame)\n    for i in range(2):\n        kpos.setValueAt(ct_node\['maxlumapixdata'].getValue()\[i], frame, i)\n    \n\nn = nuke.thisNode()\ncurframe = n\['curframe'].getValue()\nif curframe:\n    first_frame = nuke.frame()\n    last_frame = nuke.frame()\nelse:\n    first_frame = n.frameRange().first()\n    last_frame = n.frameRange().last()\n\nct_nodes = \[nuke.toNode('\{0\}.\{1\}MAX'.format(n.fullName(), c)) for c in \['R', 'G', 'B']]\n\nfor ch in \[c.name().lower()\[0] for c in ct_nodes]:\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    for k in \[kmax, kpos]:\n        k.clearAnimated()\n        if not curframe:\n            k.setAnimated()\n\nif curframe:\n    for ct_node in ct_nodes:\n        get_max(ct_node, first_frame)\n\n#else: # threading issues... not implemented for now\n#    for frame in range(first_frame, last_frame+1):\n#        for ct_node in ct_nodes:\n#            threading.Thread(group=None, target=get_max, args=(ct_node, frame)).start()" +STARTLINE}
 addUserKnob {22 clear -STARTLINE T "n = nuke.thisNode()\nfor c in \['r', 'g', 'b']:\n    kmax =  n\['\{0\}max'.format(c)]\n    kpos = n\['\{0\}pos'.format(c)]\n    for k in \[kmax, kpos]:\n        k.setValue(0)\n        k.clearAnimated()"}
 addUserKnob {6 curframe l "current frame" t "Calculate only the current frame. If false, will prompt calculate input framerange." -STARTLINE}
 curframe true
 addUserKnob {7 rmax t "maximum red value" R 0 50}
 rmax 1.215420485
 addUserKnob {12 rpos l "" t "rmax position" -STARTLINE}
 rpos {2 0}
 addUserKnob {7 gmax t "maximum green value" R 0 50}
 gmax 1.09990406
 addUserKnob {12 gpos l "" t "gmax position" -STARTLINE}
 gpos {2 0}
 addUserKnob {7 bmax t "maximum blue value" R 0 50}
 bmax 1.005128622
 addUserKnob {12 bpos l "" t "bmax position" -STARTLINE}
 bpos {1 0}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {rgba.red -rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 209 209 209 2 513 513 513 513 513 385 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513} {curve x1 1175 1175 1175 0 994 994 994 994 994 686 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994}}
  maxlumapixvalue {{curve x1 1.03131032 1.361329675 1.03131032 1.215420485 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.016959906 37.13138962 37.13138962 37.13138962 37.13138962 1.215420485 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  minlumapixdata {{curve x1 1 1 1 0 389 389 389 389 389 998 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 210 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040}}
  minlumapixvalue {{curve x1 0 0 0 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  name RMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 39
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 894 50 50 2 1347 1347 1347 1347 1347 259 1347 1347 1347 1347 2 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 x48 2} {curve x1 1274 9 9 0 896 896 896 896 896 459 896 896 896 896 0 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 1.143916965 1.778251767 1.347160339 1.09990406 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 1.138906717 39.63381577 39.63381577 39.63381577 39.63381577 1.09990406 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 x48 1.201209426} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  minlumapixdata {{curve x1 0 0 0 1 389 389 389 389 389 1234 389 389 389 389 1 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 x48 1} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 220 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 0 0 0 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 x48 0} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  name GMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 87
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 531 7 7 1 x10 1235 x15 1 x48 1} {curve x1 985 41 41 0 x10 221 x15 0 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0.9455359578 1.744389296 1.321506977 1.005128622 x10 1.041050911 x15 1.005128622 x48 1.24509275}}
  minlumapixdata {{curve x1 3 3 3 2 x10 0 x15 2 x48 2} {curve x1 0 0 0 0 x10 0 x15 0 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0}}
  name BMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 135
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
push $N78cfeb0
push $N81fe4b0
push $Na28cdd0
push $Na428630
Switch {
 inputs 4
 which {{frame-1}}
 name Switch4
 note_font Helvetica
 xpos 14260
 ypos 5271
 hide_input true
}
FrameRange {
 first_frame 1
 last_frame 4
 time ""
 name FrameRange2
 label "\[value first_frame]-\[value last_frame]"
 note_font Helvetica
 xpos 14260
 ypos 5304
}
Dot {
 name Dot128
 label " Red Wide Gamut RGB"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14294
 ypos 5370
}
NoOp {
 name ___anchor_biup
 tile_color 0x989898ff
 label "<font size=7>\[value title]"
 note_font Helvetica
 xpos 14260
 ypos 5432
 icon Output.png
 addUserKnob {20 anchor_tab l anchor}
 addUserKnob {1 title}
 title "Red Wide Gamut RGB"
}
NoOp {
 name ___pointer_biup
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 9310
 ypos 6335
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_biup
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
Group {
 inputs 0
 name GamutToXYZ
 label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
 xpos 11180
 ypos 2888
 addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
 addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
 addUserKnob {6 invert +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
 addUserKnob {20 chromaticities_grp l "" +STARTLINE n 1}
 chromaticities_grp 0
 addUserKnob {41 rxy T ColorMatrix.rxy}
 addUserKnob {41 gxy T ColorMatrix.gxy}
 addUserKnob {41 bxy T ColorMatrix.bxy}
 addUserKnob {41 wxy T ColorMatrix.wxy}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {20 endGroup n -1}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 ColorMatrix {
  matrix {
      {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
      {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
      {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
    }
  invert {{parent.invert}}
  name ColorMatrix
  label "RGB to XYZ"
  xpos -40
  ypos 32
  addUserKnob {20 Gamut}
  addUserKnob {3 which}
  which {{parent.gamut}}
  addUserKnob {12 rxy}
  rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
  addUserKnob {12 gxy}
  gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
  addUserKnob {12 bxy}
  bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
  addUserKnob {12 wxy}
  wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
 }
 Output {
  name Output
  xpos -40
  ypos 86
 }
end_group
Group {
 inputs 0
 name GamutGrid2
 xpos 11290
 ypos 2894
 addUserKnob {20 GamutGrid}
 addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
 gamut ACES
 addUserKnob {4 style M {dots grid}}
 style grid
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density R 10 150}
 density 50
 addUserKnob {4 output t "choose pixel output type\n" M {rgb xyz ""}}
 addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
 addUserKnob {20 chromaticities_grp l "" +STARTLINE n 1}
 chromaticities_grp 0
 addUserKnob {41 rxy T ColorMatrix.rxy}
 addUserKnob {41 gxy T ColorMatrix.gxy}
 addUserKnob {41 bxy T ColorMatrix.bxy}
 addUserKnob {41 wxy T ColorMatrix.wxy}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {20 endGroup n -1}
}
 ColorWheel {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  centerSaturation 1
  fillFormat false
  area {-170 -158 682 670}
  name ColorWheel4
  xpos -260
  ypos 14
  postage_stamp false
 }
 Crop {
  box {0 0 512 512}
  crop false
  name Crop2
  xpos -260
  ypos 38
 }
 Reformat {
  type scale
  scale {{max(parent.density/50,0.25)}}
  resize distort
  filter impulse
  pbb true
  name Reformat3
  xpos -260
  ypos 62
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -226
  ypos 114
 }
set Nf1cfdd0 [stack 0]
push $Nf1cfdd0
 ContactSheet {
  inputs 2
  width {{width*columns}}
  height {{height/pixel_aspect*rows}}
  rows 1
  columns 2
  roworder TopBottom
  name ContactSheet2
  xpos -260
  ypos 158
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -226
  ypos 282
 }
 ColorWheel {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  fillFormat false
  area {40 40 472 472}
  name ColorWheel1
  xpos -40
  ypos -658
  postage_stamp false
 }
 Reformat {
  type scale
  scale {{max(parent.density/50,0.25)}}
  resize distort
  filter impulse
  pbb true
  name Reformat1
  xpos -40
  ypos -634
 }
 Crop {
  box {0 0 {width} {height}}
  reformat true
  name Crop1
  xpos -40
  ypos -610
 }
 Unpremult {
  name Unpremult1
  xpos -40
  ypos -514
 }
 ColorMatrix {
  matrix {
      {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
      {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
      {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
    }
  invert {{parent.invert}}
  name ColorMatrix
  label "RGB to XYZ"
  xpos -40
  ypos -448
  addUserKnob {20 Gamut}
  addUserKnob {3 which}
  which {{parent.gamut}}
  addUserKnob {12 rxy}
  rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
  addUserKnob {12 gxy}
  gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
  addUserKnob {12 bxy}
  bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
  addUserKnob {12 wxy}
  wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
 }
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -40
  ypos -352
 }
set Nf243960 [stack 0]
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos -342
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression10
  label "CIE Yxy to CIELuv"
  xpos -589
  ypos -319
  disable {{!parent.distribution}}
 }
 Expression {
  expr0 r
  expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
  expr2 "hypot(g-white.x, b-white.y)"
  expr3 a
  name Expression11
  xpos -590
  ypos -250
  cached true
  addUserKnob {20 User}
  addUserKnob {12 white}
  white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
 }
set Nf27e950 [stack 0]
 Posterize {
  channels rgb
  Colors {{rint(parent.density/3*2)}}
  name Posterize1
  xpos -590
  ypos -202
 }
set Nf28dd80 [stack 0]
push $Nf27e950
 Dot {
  name Dot15
  xpos -446
  ypos -222
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy1
  xpos -480
  ypos -136
 }
push $Nf28dd80
push $Nf27e950
 Dot {
  name Dot16
  xpos -666
  ypos -222
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.green
  name Copy2
  xpos -700
  ypos -136
 }
 ContactSheet {
  inputs 2
  width {{width*columns}}
  height {{height/pixel_aspect*rows}}
  rows 1
  columns 2
  center true
  roworder TopBottom
  name ContactSheet3
  xpos -590
  ypos -82
 }
 Expression {
  expr0 r
  expr1 cos(radians(g*360))*b+white.x
  expr2 sin(radians(g*360))*b+white.y
  expr3 a
  name Expression12
  xpos -590
  ypos -46
  cached true
  addUserKnob {20 User}
  addUserKnob {12 white}
  white {{parent.Expression11.white} {parent.Expression11.white}}
 }
 Expression {
  expr0 r
  expr1 "9*g / ( 6*g - 16*b + 12)"
  expr2 "4*b/ ( 6*g - 16*b + 12)"
  name Expression13
  label "CIELuv to CIE Yxy"
  xpos -592
  ypos -12
  disable {{!parent.distribution}}
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -590
  ypos 32
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to RGB"
  xpos -590
  ypos 80
 }
 Clamp {
  channels rgba
  maximum_enable false
  name ClampMin2
  xpos -590
  ypos 118
 }
 Clamp {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  minimum 1
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp1
  xpos -590
  ypos 152
 }
 Premult {
  name Premult1
  xpos -590
  ypos 206
 }
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge2
  xpos -590
  ypos 278
 }
 Shuffle {
  alpha white
  name Shuffle1
  label "\[value in] -> \[value out]"
  xpos -590
  ypos 320
 }
 Dot {
  name Dot3
  label " GRID"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
push $Nf1cfdd0
push $Nf243960
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression14
  label "CIE Yxy to CIELuv"
  xpos -40
  ypos -302
  disable {{!parent.distribution}}
 }
 Expression {
  expr0 r
  expr1 rint(g*Colors)/Colors
  expr2 rint(b*Colors)/Colors
  expr3 a
  name Expression1
  label rint
  xpos -40
  ypos -248
  addUserKnob {20 User}
  addUserKnob {7 Colors R 1 256}
  Colors {{parent.density}}
 }
 Expression {
  expr0 r
  expr1 "9*g / ( 6*g - 16*b + 12)"
  expr2 "4*b/ ( 6*g - 16*b + 12)"
  name Expression3
  label "CIELuv to CIE Yxy"
  xpos -40
  ypos -190
  disable {{!parent.distribution}}
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -40
  ypos -142
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to RGB"
  xpos -40
  ypos -72
 }
 Clamp {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  minimum 1
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp4
  xpos -40
  ypos -16
 }
 Premult {
  name Premult2
  xpos -40
  ypos 38
 }
 Merge2 {
  inputs 2
  operation under
  bbox B
  name Merge1
  xpos -40
  ypos 110
 }
 Clamp {
  channels rgba
  maximum_enable false
  name ClampMin1
  xpos -40
  ypos 182
 }
 Dot {
  name Dot4
  label " DOTS"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 378
 }
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch1
  xpos -260
  ypos 494
 }
 ColorMatrix {
  matrix {
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
      {{parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix} {parent.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "RGB to XYZ"
  xpos -260
  ypos 560
  disable {{!parent.output}}
 }
 Output {
  name Output
  xpos -260
  ypos 734
 }
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  area {40 40 472 472}
  name ColorWheel2
  xpos -40
  ypos -706
  postage_stamp false
 }
end_group
Group {
 inputs 0
 name GamutPrimaries2
 xpos 11070
 ypos 2894
 addUserKnob {20 GamutPrimaries_tab l GamutPrimaries}
 addUserKnob {41 gamut T ColorMatrix.gamut}
 addUserKnob {41 red T Primaries.red}
 addUserKnob {41 green T Primaries.green}
 addUserKnob {41 blue T Primaries.blue}
 addUserKnob {41 white T Primaries.white}
}
 Constant {
  inputs 0
  color {0 0 0 0}
  format "4 1 0 0 4 1 1 rgbw"
  name Constant3
  xpos 509
  ypos -42
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 4
  box_height 2
  box_fixed true
  name Reformat1
  xpos 509
  ypos -16
 }
 Rectangle {
  area {0 0 1 2}
  color {1 0 0 0}
  name Rectangle1
  xpos 509
  ypos 10
 }
 Rectangle {
  area {1 0 2 2}
  color {0 1 0 0}
  name Rectangle2
  xpos 509
  ypos 36
 }
 Rectangle {
  area {2 0 3 2}
  color {0 0 1 0}
  name Rectangle3
  xpos 509
  ypos 59
 }
 Rectangle {
  area {3 0 4 2}
  color {1 1 1 0}
  name Rectangle4
  xpos 509
  ypos 86
 }
 Group {
  name ColorMatrix
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos 509
  ypos 128
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
set Nf463830 [stack 0]
 Output {
  name Output
  xpos 290
  ypos 134
 }
push $Nf463830
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 510
  ypos 185
 }
 NoOp {
  name Primaries
  xpos 510
  ypos 238
  addUserKnob {20 Primaries}
  addUserKnob {12 red}
  red {{"\[sample this green 0 0]"} {"\[sample this blue 0 0]"}}
  addUserKnob {12 green}
  green {{"\[sample this green 1 0]"} {"\[sample this blue 1 0]"}}
  addUserKnob {12 blue}
  blue {{"\[sample this green 2 0]"} {"\[sample this blue 2 0]"}}
  addUserKnob {12 white}
  white {{"\[sample this green 3 0]"} {"\[sample this blue 3 0]"}}
 }
end_group
Group {
 inputs 0
 name ChromaticityConverter_live
 tile_color 0xbd91c9ff
 label "\[if \{\[value invert]\} \{return \"\[value dst_colorspace_name] to \[value src_colorspace_name]\"\} else \{return \"\[value src_colorspace_name] to \[value dst_colorspace_name]\"\}]"
 xpos 11400
 ypos 2936
 addUserKnob {20 ChromaticityConverter_tab l ChromaticityConverter}
 addUserKnob {26 colorspace_chromaticities_label l " " T "<b>Src Colorspace Chromaticities</b>"}
 addUserKnob {35 src_presets l preset M {colorspace/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} src_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} src_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.314 0.351\} src_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 -0.10200\} wxy \{0.3127 0.329\} src_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} src_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.329\} src_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} src_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} src_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.329\} src_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{rxy \{0.71 0.31\} gxy \{0.21 0.88\} bxy \{0.09 -0.08\} wxy \{0.3127 0.329\} src_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{rxy \{0.9173 0.2502\} gxy \{0.2833 1.7072\} bxy \{0.0856 -0.0708\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{rxy \{0.7422 0.2859\} gxy \{0.4140 1.3035\} bxy \{0.0342 -0.0833\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{rxy \{1.0625 0.3948\} gxy \{0.3689 0.7775\} bxy \{0.0956 -0.0332\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{rxy \{0.9175 0.2983\} gxy \{0.2983 1.2835\} bxy \{0.0756 -0.0860\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{rxy \{0.8608 0.3689\} gxy \{0.3282 0.6156\} bxy \{0.0783 -0.0233\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{rxy \{0.7177 0.3171\} gxy \{0.2280 0.8616\} bxy \{0.1006 -0.0820\} wxy \{0.3127 0.329\} src_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.329\} src_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} src_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} src_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{rxy \{0.6900 0.3100\} gxy \{0.1800 0.7700\} bxy \{0.1000 0.0200\} wxy \{0.33243 0.34744\} src_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{rxy \{0.6898 0.3206\} gxy \{0.0736 0.9003\} bxy \{0.1166 0.0374\} wxy \{0.33333333 0.33333333\} src_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{rxy \{0.6250 0.3400\} gxy \{0.2800 0.5950\} bxy \{0.1550 0.0700\} wxy \{0.3127 0.329\} src_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{rxy \{0.735191637630662 0.264808362369338\} gxy \{0.215336134453781 0.774159663865546\} bxy \{0.130122950819672 0.034836065573770\} wxy \{0.3457 0.3585\} src_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{rxy \{1 0\} gxy \{0 1\} bxy \{0 0\} wxy \{0.33333333  0.33333333\} src_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 rxy l r T _knobchanged_.rxy}
 addUserKnob {41 gxy l g T _knobchanged_.gxy}
 addUserKnob {41 bxy l b T _knobchanged_.bxy}
 addUserKnob {41 wxy l w T _knobchanged_.wxy}
 addUserKnob {1 src_colorspace_name l src +DISABLED}
 src_colorspace_name XYZ
 addUserKnob {26 ""}
 addUserKnob {26 dst_colorspace_chromaticities_label l " " T "<b>Dst Colorspace Chromaticities</b>"}
 addUserKnob {35 dst_presets l preset M {colorspace/ACES "knobs this \{drxy \{0.73470 0.26530\} dgxy \{0.00000 1.00000\} dbxy \{0.00010 -0.07700\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{drxy \{0.713 0.293\} dgxy \{0.165 0.830\} dbxy \{0.128 0.044\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ drxy \{0.8 0.3177\} dgxy \{0.18 0.9\} dbxy \{0.065 -0.0805\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{drxy \{0.64000 0.33000\} dgxy \{0.30000 0.60000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.314 0.351\} dst_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{drxy \{0.68400 0.31300\} dgxy \{0.22100 0.84800\} dbxy \{0.08610 -0.10200\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{drxy \{0.753044222785 0.327830576682\} dgxy \{0.299570228481 0.700699321956\} dbxy \{0.079642066735 -0.0549379510888\} dwxy \{0.321683187724 0.337673316035\} dst_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{drxy \{0.753044491143 0.327831029513\} dgxy \{0.299570490451 0.700699415614\} dbxy \{0.145011584278 0.0510971250879\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{drxy \{0.699747001291 0.329046930313\} dgxy \{0.304264039024 0.623641145129\} dbxy \{0.134913961296 0.0347174412813\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{drxy \{0.878682510476 0.32496400741\} dgxy \{0.300888714367 0.679054755791\} dbxy \{0.0953986946056 -0.0293793268343\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{drxy \{0.701181035906 0.329014155583\} dgxy \{0.300600304652 0.683788834269\} dbxy \{0.108154455624 -0.00868817578666\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{drxy \{0.701180591892 0.329013699116\} dgxy \{0.300600395529 0.683788824257\} dbxy \{0.145331946229 0.0516168036226\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{drxy \{0.780308 0.304253\} dgxy \{0.121595 1.493994\} dbxy \{0.095612 -0.084589\} dwxy \{0.3127 0.329\} dst_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{drxy \{0.69848046 0.19302645\} dgxy \{0.32955538 1.02459662\} dbxy \{0.10844263 -0.03467857\} dwxy \{0.3127 0.329\} dst_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{drxy \{0.74 0.27\} dgxy \{0.17 1.14\} dbxy \{0.08 -0.1\} dwxy \{0.3127 0.329\} dst_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{drxy \{0.73 0.28\} dgxy \{0.14 0.855\} dbxy \{0.1 -0.05\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{drxy \{0.766 0.275\} dgxy \{0.225 0.8\} dbxy \{0.089 -0.087\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{drxy \{0.730 0.280\} dgxy \{0.165 0.840\} dbxy \{0.100 -0.030\} dwxy \{0.3127 0.329\} dst_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{drxy \{0.71 0.31\} dgxy \{0.21 0.88\} dbxy \{0.09 -0.08\} dwxy \{0.3127 0.329\} dst_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{drxy \{0.9173 0.2502\} dgxy \{0.2833 1.7072\} dbxy \{0.0856 -0.0708\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{drxy \{0.7422 0.2859\} dgxy \{0.4140 1.3035\} dbxy \{0.0342 -0.0833\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{drxy \{1.0625 0.3948\} dgxy \{0.3689 0.7775\} dbxy \{0.0956 -0.0332\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{drxy \{0.9175 0.2983\} dgxy \{0.2983 1.2835\} dbxy \{0.0756 -0.0860\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{drxy \{0.8608 0.3689\} dgxy \{0.3282 0.6156\} dbxy \{0.0783 -0.0233\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{drxy \{0.7177 0.3171\} dgxy \{0.2280 0.8616\} dbxy \{0.1006 -0.0820\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{drxy \{0.6400 0.3300\} dgxy \{0.2100 0.7100\} dbxy \{0.1500 0.0600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{drxy \{0.7347 0.2653\} dgxy \{0.1152 0.8264\} dbxy \{0.1566 0.0177\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01  8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{drxy \{0.734699 0.265301\} dgxy \{0.159597 0.840403\} dbxy \{0.036598 0.000105\} dwxy \{0.345704 0.358540\} dst_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{drxy \{0.6900 0.3100\} dgxy \{0.1800 0.7700\} dbxy \{0.1000 0.0200\} dwxy \{0.33243 0.34744\} dst_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{drxy \{0.6898 0.3206\} dgxy \{0.0736 0.9003\} dbxy \{0.1166 0.0374\} dwxy \{0.33333333 0.33333333\} dst_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{drxy \{0.6250 0.3400\} dgxy \{0.2800 0.5950\} dbxy \{0.1550 0.0700\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{drxy \{0.735191637630662 0.264808362369338\} dgxy \{0.215336134453781 0.774159663865546\} dbxy \{0.130122950819672 0.034836065573770\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{drxy \{1 0\} dgxy \{0 1\} dbxy \{0 0\} dwxy \{0.33333333  0.33333333\} dst_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 drxy l r T _knobchanged_.drxy}
 addUserKnob {41 dgxy l g T _knobchanged_.dgxy}
 addUserKnob {41 dbxy l b T _knobchanged_.dbxy}
 addUserKnob {41 dwxy l w T _knobchanged_.dwxy}
 addUserKnob {1 dst_colorspace_name l dst +DISABLED}
 dst_colorspace_name XYZ
 addUserKnob {26 ""}
 addUserKnob {26 chromatic_adaptation_label l " " T "<b>Chromatic Adaptation</b>"}
 addUserKnob {41 cat_method l method T _knobchanged_.cat_method}
 addUserKnob {26 ""}
 addUserKnob {41 invert T _knobchanged_.invert}
 addUserKnob {22 create_matrix_node l "Create Matrix" t "Create ColorMatrix node with the current values." T "node = nuke.thisNode()\nnode\['calculate_matrix'].execute()\nnuke.root().begin()\n_ = \[n.setSelected(False) for n in nuke.allNodes(recurseGroups=True)]\nm = nuke.createNode('ColorMatrix')\nm\['matrix'].setValue(node\['matrix'].getValue())\nm.setXYpos(node.xpos()-120, node.ypos())\nm\['label'].setValue(node\['label'].getValue())" +STARTLINE}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {22 clear l Clear T "n = nuke.thisNode()\nn\['matrix'].setValue(\[1,0,0,0,1,0,0,0,1])\nn\['label'].setValue('')" +STARTLINE}
 addUserKnob {22 show_matrix l Show t "Show matrix values in a popup window for copying." T "node = nuke.thisNode()\nshow_4x4 = node\['show_matrix_4x4'].getValue()\nshow_commas = node\['show_matrix_commas'].getValue()\n\nif show_commas:\n    sep = ', '\nelse:\n    sep = ' '\n\nmtx = \[format(i, '.8f') for i in node\['matrix'].getValue()]\n\nif show_4x4:\n    z = \['0']\n    mtx = mtx\[0:3] + z + mtx\[3:6] + z + mtx\[6:9] + z*4 + \['1']\n\nnuke.message(sep.join(mtx))" +STARTLINE}
 addUserKnob {6 show_matrix_4x4 l "show 4x4" t "present values in a 4x4 matrix (useful for ocio)" -STARTLINE}
 addUserKnob {6 show_matrix_commas l "show comma sep" t "show matrix comma separated." -STARTLINE}
 addUserKnob {22 save_spimtx l "Save spimtx" T "# inspired by ColorMatrixPlus by hpd\ndef write_spimtx(mtx_node, spimtx_file):\n    mtx_vals = mtx_node\['matrix'].getValue()\n    with open(spimtx_file, \"w\") as f:\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[0], mtx_vals\[1], mtx_vals\[2]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[3], mtx_vals\[4], mtx_vals\[5]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[6], mtx_vals\[7], mtx_vals\[8]) )\n\nnode = nuke.thisNode()\nfilepath = nuke.getFilename('Save Matrix', '*.spimtx')\n\nif filepath:\n    if not filepath.endswith('.spimtx'):\n        filepath = filepath + '.spimtx'\n    write_spimtx(node, filepath)" +STARTLINE}
 addUserKnob {22 load_spimtx l "Load spimtx" -STARTLINE T "# Inspired by ColorMatrixPlus by hpd\ndef load_spimtx(spimtx, mtx_node):\n    with open( spimtx, 'r') as file:\n        lines = file.readlines()\n    matrix_values = list()\n    for line in lines:\n        matrix_values.extend( map(float, line.strip().split(' ')\[0:3]) )\n    mtx_node\['matrix'].setValue(matrix_values)\n\nspimtx = nuke.getFilename('Load SPIMTX', '*.spimtx')\nif spimtx:\n    load_spimtx( spimtx, nuke.thisNode() )\n"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 206
 }
 Dot {
  name _knobchanged_
  knobChanged "import nuke\nfloat2 = nuke.math.Vector2\nfloat3 = nuke.math.Vector3\nfloat3x3 = nuke.math.Matrix3\n\nCONE_RESP_MAT_BRADFORD = float3x3()\nCONE_RESP_MAT_CAT02 = float3x3()\nCONE_RESP_MAT_VONKRIES = float3x3()\nCONE_RESP_MAT_SHARP = float3x3()\nCONE_RESP_MAT_CMCCAT2000 = float3x3()\n\n# From ACESlib.Utilities_Color : 166\nCONE_RESP_MAT_BRADFORD.set(0.89510, -0.75020,  0.03890, 0.26640,  1.71350, -0.06850, -0.16140,  0.03670,  1.02960)\nCONE_RESP_MAT_CAT02.set(0.73280, -0.70360,  0.00300, 0.42960,  1.69750,  0.01360, -0.16240, 0.00610, 0.98340)\n\n# https://web.stanford.edu/~sujason/ColorBalancing/adaptation.html\n# from S. Bianco. \"Two New von Kries Based Chromatic Adapatation Transforms Found by Numerical Optimization.\"\nCONE_RESP_MAT_VONKRIES.set(0.40024, -0.2263, 0, 0.7076, 1.16532, 0, -0.08081, 0.0457, 0.91822)\nCONE_RESP_MAT_SHARP.set(1.2694, -0.8364, 0.0297, -0.0988, 1.8006, -0.0315, -0.1706, 0.0357, 1.0018)\nCONE_RESP_MAT_CMCCAT2000.set(0.7982, -0.5918, 0.0008, 0.3389, 1.5512, 0.239, -0.1371, 0.0406, 0.9753)\n\n\ndef transpose(mtx):\n    # transpose (swap rows to columns) of a 3x3 matrix\n    order = \[0, 3, 6, 1, 4, 7, 2, 5, 8]\n    omtx = float3x3()\n    for i in xrange(9):\n        omtx\[i] = mtx\[order\[i]]\n    return omtx\n\ndef mult_f33_f33(A, B):\n    # Calculate multiplication of 3x3 matrix A and 3x3 matrix B\n    C = float3x3()\n    C.makeIdentity()\n\n    # Row 1\n    C\[0] = (A\[0]*B\[0] + A\[1]*B\[3] + A\[2]*B\[6])\n    C\[1] = (A\[0]*B\[1] + A\[1]*B\[4] + A\[2]*B\[7])\n    C\[2] = (A\[0]*B\[2] + A\[1]*B\[5] + A\[2]*B\[8])\n    # Row 2\n    C\[3] = (A\[3]*B\[0] + A\[4]*B\[3] + A\[5]*B\[6])\n    C\[4] = (A\[3]*B\[1] + A\[4]*B\[4] + A\[5]*B\[7])\n    C\[5] = (A\[3]*B\[2] + A\[4]*B\[5] + A\[5]*B\[8])\n    # Row 3\n    C\[6] = (A\[6]*B\[0] + A\[7]*B\[3] + A\[8]*B\[6])\n    C\[7] = (A\[6]*B\[1] + A\[7]*B\[4] + A\[8]*B\[7])\n    C\[8] = (A\[6]*B\[2] + A\[7]*B\[5] + A\[8]*B\[8])\n\n    return C;\n\n\ndef mult_f3_f33(src, mtx):\n    return float3(mtx\[0] * src\[0] + mtx\[1] * src\[1] + \n    mtx\[2] * src\[2], mtx\[3] * src\[0] + mtx\[4] * src\[1] + \n    mtx\[5] * src\[2], mtx\[6] * src\[0] + mtx\[7] * src\[1] + \n    mtx\[8] * src\[2])\n\n\ndef XYZ_2_xyY(XYZ):\n    xyY = float3()\n    divisor = (XYZ\[0] + XYZ\[1] + XYZ\[2])\n    if (divisor == 0.):\n        divisor = 1e-10\n    xyY.set(XYZ\[0] / divisor, XYZ\[1] / divisor, XYZ\[1])\n    return xyY\n\n\ndef xyY_2_XYZ(xyY):\n    XYZ = float3()\n    XYZ.set(\n        xyY\[0] * xyY\[2] / max( xyY\[1], 1e-10), \\\n        xyY\[2], \\\n        (1.0 - xyY\[0] - xyY\[1]) * xyY\[2] / max( xyY\[1], 1e-10)\n        )\n    return XYZ\n\n\ndef calculate_cat_matrix(src_xy, des_xy, coneRespMat=CONE_RESP_MAT_BRADFORD):\n    # Calculates and returns a 3x3 Von Kries chromatic adaptation transform \n    # from src_xy to des_xy using the cone response primaries defined \n    # by coneRespMat. By default, coneRespMat is set to CONE_RESP_MAT_BRADFORD. \n    # The default coneRespMat can be overridden at runtime. \n\n    src_xyY = float3(src_xy\[0], src_xy\[1], 1.0)\n    des_xyY = float3(des_xy\[0], des_xy\[1], 1.0)\n\n    src_XYZ = xyY_2_XYZ( src_xyY )\n    des_XYZ = xyY_2_XYZ( des_xyY )\n\n    src_coneResp = mult_f3_f33(src_XYZ, coneRespMat)\n    des_coneResp = mult_f3_f33(des_XYZ, coneRespMat)\n\n    vkMat = float3x3()\n    vkMat.set(\n        des_coneResp\[0] / src_coneResp\[0], 0.0, 0.0,\n        0.0, des_coneResp\[1] / src_coneResp\[1], 0.0,\n        0.0, 0.0, des_coneResp\[2] / src_coneResp\[2]\n        )\n\n    cat_matrix = float3x3()\n    coneRespMatInv = coneRespMat.inverse()\n    cat_matrix = coneRespMat * ( vkMat * coneRespMatInv)\n    \n    return cat_matrix\n\n\ndef RGBtoXYZ(xy, Y=1.0, inverse=False):\n    # given r g b chromaticities and whitepoint, convert RGB colors to XYZ\n    # based on CtlColorSpace.cpp from the CTL source code : 77\n    # param: xy - dict of chromaticity xy coordinates: rxy: float2(x, y) etc\n    # param: Y - luminance of \"white\" - defaults to 1.0\n    # param: inverse - calculate XYZ to RGB instead\n    r = xy\['rxy']\n    g = xy\['gxy']\n    b = xy\['bxy']\n    w = xy\['wxy']\n\n    X = w.x * Y / w.y\n    Z = (1 - w.x - w.y) * Y / w.y\n\n    # Scale factors for matrix rows\n    d = r.x * (b.y - g.y) + b.x * (g.y - r.y) + g.x * (r.y - b.y)\n\n    Sr =    (X * (b.y - g.y) -      \\\n            g.x * (Y * (b.y - 1) +  \\\n            b.y  * (X + Z)) +       \\\n            b.x  * (Y * (g.y - 1) + \\\n            g.y * (X + Z))) / d\n    \n    Sg =    (X * (r.y - b.y) +      \\\n            r.x * (Y * (b.y - 1) +  \\\n            b.y * (X + Z)) -        \\\n            b.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    Sb =    (X * (g.y - r.y) -      \\\n            r.x * (Y * (g.y - 1) +  \\\n            g.y * (X + Z)) +        \\\n            g.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    # Assemble the matrix\n    M = float3x3()\n    M.set(  Sr * r.x, Sr * r.y, Sr * (1 - r.x - r.y),\n            Sg * g.x, Sg * g.y, Sg * (1 - g.x - g.y),\n            Sb * b.x, Sb * b.y, Sb * (1 - b.x - b.y))\n    if inverse:\n        M = M.inverse()\n        return M\n    else:\n        return M\n\n\ndef get_primaries(node, dst=False):\n    # get colorspace chromaticities xy coordinates from node\n    dst_pri = \['drxy', 'dgxy', 'dbxy', 'dwxy']\n    pri = \['rxy', 'gxy', 'bxy', 'wxy']\n    d = \{\}\n    for i, p in enumerate(pri):\n        if dst:\n            d\[p] = float2(node\[dst_pri\[i]].getValue()\[0], node\[dst_pri\[i]].getValue()\[1])\n        else:\n            d\[p] = float2(node\[p].getValue()\[0], node\[p].getValue()\[1])\n    return d\n\n\n\ndef start():\n    node = nuke.thisGroup()\n    \n    identity_mtx = float3x3()\n    identity_mtx.makeIdentity()\n\n    invert = node\['invert'].getValue()\n    label = node\['label']\n    cat_method = node\['cat_method'].value()\n    src_primaries = get_primaries(node)\n    dst_primaries = get_primaries(node, dst=True)\n    src_colorspace_name = node\['src_colorspace_name'].getValue()\n    dst_colorspace_name = node\['dst_colorspace_name'].getValue()\n    \n    # Check for XYZ on src / destination\n    enable_src = (src_colorspace_name != 'XYZ')\n    enable_dst = (dst_colorspace_name != 'XYZ')\n    whitepoint_changed = (src_primaries\['wxy']\[0] != dst_primaries\['wxy']\[0] or src_primaries\['wxy']\[1] != dst_primaries\['wxy']\[1])\n\n    # Get chromatic adaptation method\n    if cat_method == 'Bradford':\n        coneRespMat = CONE_RESP_MAT_BRADFORD\n    elif cat_method == 'cat02':\n        coneRespMat = CONE_RESP_MAT_CAT02\n    elif cat_method == 'vonKries Hunt-Pointer-Estevez D65-Normalized':\n        coneRespMat = CONE_RESP_MAT_VONKRIES\n    elif cat_method == 'cmccat2000':\n        coneRespMat = CONE_RESP_MAT_CMCCAT2000\n    elif cat_method == 'sharp':\n        coneRespMat = CONE_RESP_MAT_SHARP\n    elif cat_method == 'None':\n        coneRespMat = identity_mtx\n        whitepoint_changed = False\n\n    if enable_src:\n        # Calculate Source RGB to XYZ matrix\n        src_rgb_to_xyz_mtx = RGBtoXYZ(src_primaries)\n\n    if enable_dst:\n        # Calculate Destination XYZ to RGB matrix\n        dst_xyz_to_rgb_mtx = RGBtoXYZ(dst_primaries, inverse=True)\n\n    if enable_src and not enable_dst:\n        # Convert from Source RGB to XYZ only\n        mtx = src_rgb_to_xyz_mtx\n\n    if enable_dst and not enable_src:\n        # Convert from XYZ to Destination RGB only\n        mtx = dst_xyz_to_rgb_mtx\n\n    if enable_src and enable_dst:\n        if whitepoint_changed:\n            # Calculate chromatic adaptation matrix\n            cat_mtx = calculate_cat_matrix(src_primaries\['wxy'], dst_primaries\['wxy'], coneRespMat=coneRespMat)\n            # We will use our own matrix multiplication algorithm since there seems to be precision issues with the nuke.math module :/\n            # mtx = (cat_mtx * src_rgb_to_xyz_mtx) * dst_xyz_to_rgb_mtx\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, mult_f33_f33(cat_mtx, src_rgb_to_xyz_mtx))\n        else:\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, src_rgb_to_xyz_mtx)\n\n    if invert:\n        mtx = mtx.inverse()\n\n    node\['matrix'].setValue(mtx)\n\n    return True\n\n\n\nn = nuke.thisNode()\ng = nuke.thisGroup()\nk = nuke.thisKnob()\n\nstart()\n"
  tile_color 0x5b0000
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 258
  addUserKnob {20 Knobs}
  addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  rxy {1 0}
  addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  gxy {0 1}
  addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  wxy {0.33333333 0.33333333}
  addUserKnob {12 drxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  drxy {1 0}
  addUserKnob {12 dgxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  dgxy {0 1}
  addUserKnob {12 dbxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  addUserKnob {12 dwxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  dwxy {0.33333333 0.33333333}
  addUserKnob {4 cat_method l method t "Choose the chromatic adaptation method for adapting whitepoint." M {Bradford cat02 "vonKries Hunt-Pointer-Estevez D65-Normalized" cmccat2000 sharp None}}
  addUserKnob {6 invert t "Invert direction of matrix." +STARTLINE}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 1 0}
      {0 0 1}
    }
  name ColorMatrix
  xpos -40
  ypos 302
 }
 Output {
  name Output
  xpos -40
  ypos 350
 }
end_group
Group {
 inputs 0
 name ChromaticityConverter
 tile_color 0xbd91c9ff
 label "\[if \{\[value invert]\} \{return \"\[value dst_colorspace_name] to \[value src_colorspace_name]\"\} else \{return \"\[value src_colorspace_name] to \[value dst_colorspace_name]\"\}]"
 xpos 11400
 ypos 2888
 addUserKnob {20 ChromaticityConverter_tab l ChromaticityConverter}
 addUserKnob {26 colorspace_chromaticities_label l " " T "<b>Src Colorspace Chromaticities</b>"}
 addUserKnob {35 src_presets l preset M {colorspace/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACES\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACEScg\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} src_colorspace_name \{Filmlight E-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec709\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec2020\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} src_colorspace_name \{P3D60\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{P3D65\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.314 0.351\} src_colorspace_name \{P3DCI\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Arri AlexaWideGamut" "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 -0.10200\} wxy \{0.3127 0.329\} src_colorspace_name \{Arri AlexaWideGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} src_colorspace_name \{REDDRAGONcolor\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDDRAGONcolor2\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor2\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDcolor3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor4\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.329\} src_colorspace_name \{REDWideGamutRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/GoPro Protune Native" "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} src_colorspace_name \{GoPro Protune Native\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} src_colorspace_name \{CanonCinemaGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut3Cine\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.329\} src_colorspace_name \{PanasonicVGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/DJI D-Gamut" "knobs this \{rxy \{0.71 0.31\} gxy \{0.21 0.88\} bxy \{0.09 -0.08\} wxy \{0.3127 0.329\} src_colorspace_name \{DJI D-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Fujifilm F-Gamut" "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Fujifilm F-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMDFilmV1 "knobs this \{rxy \{0.9173 0.2502\} gxy \{0.2833 1.7072\} bxy \{0.0856 -0.0708\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMDFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD4kFilmV1 "knobs this \{rxy \{0.7422 0.2859\} gxy \{0.4140 1.3035\} bxy \{0.0342 -0.0833\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD4kFilmV3 "knobs this \{rxy \{1.0625 0.3948\} gxy \{0.3689 0.7775\} bxy \{0.0956 -0.0332\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD46kFilmV1 "knobs this \{rxy \{0.9175 0.2983\} gxy \{0.2983 1.2835\} bxy \{0.0756 -0.0860\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD46kFilmV3 "knobs this \{rxy \{0.8608 0.3689\} gxy \{0.3282 0.6156\} bxy \{0.0783 -0.0233\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMDWideGamutV4 "knobs this \{rxy \{0.7177 0.3171\} gxy \{0.2280 0.8616\} bxy \{0.1006 -0.0820\} wxy \{0.3127 0.329\} src_colorspace_name \{BMDWideGamutV4\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/AdobeRGB\t" "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.329\} src_colorspace_name \{AdobeRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} src_colorspace_name \{AdobeWideGamutRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ROMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{RIMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ERIMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} src_colorspace_name \{ProPhotoRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/RusselRGB "knobs this \{rxy \{0.6900 0.3100\} gxy \{0.1800 0.7700\} bxy \{0.1000 0.0200\} wxy \{0.33243 0.34744\} src_colorspace_name \{RusselRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SharpRGB "knobs this \{rxy \{0.6898 0.3206\} gxy \{0.0736 0.9003\} bxy \{0.1166 0.0374\} wxy \{0.33333333 0.33333333\} src_colorspace_name \{SharpRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/AppleRGB "knobs this \{rxy \{0.6250 0.3400\} gxy \{0.2800 0.5950\} bxy \{0.1550 0.0700\} wxy \{0.3127 0.329\} src_colorspace_name \{AppleRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BestRGB "knobs this \{rxy \{0.735191637630662 0.264808362369338\} gxy \{0.215336134453781 0.774159663865546\} bxy \{0.130122950819672 0.034836065573770\} wxy \{0.3457 0.3585\} src_colorspace_name \{BestRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/XYZ "knobs this \{rxy \{1 0\} gxy \{0 1\} bxy \{0 0\} wxy \{0.33333333  0.33333333\} src_colorspace_name \{XYZ\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" ""}}
 addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
 rxy {1 0}
 addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
 gxy {0 1}
 addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
 addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
 wxy {0.33333333 0.33333333}
 addUserKnob {1 src_colorspace_name l src +DISABLED}
 src_colorspace_name XYZ
 addUserKnob {26 ""}
 addUserKnob {26 dst_colorspace_chromaticities_label l " " T "<b>Dst Colorspace Chromaticities</b>"}
 addUserKnob {35 dst_presets l preset M {colorspace/ACES "knobs this \{drxy \{0.73470 0.26530\} dgxy \{0.00000 1.00000\} dbxy \{0.00010 -0.07700\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACES\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ACEScg "knobs this \{drxy \{0.713 0.293\} dgxy \{0.165 0.830\} dbxy \{0.128 0.044\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACEScg\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Filmlight E-Gamut" "knobs this \{ drxy \{0.8 0.3177\} dgxy \{0.18 0.9\} dbxy \{0.065 -0.0805\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Filmlight E-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/Rec709 "knobs this \{drxy \{0.64000 0.33000\} dgxy \{0.30000 0.60000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec709\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/Rec2020 "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec2020\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3D60 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{P3D60\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3D65 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{P3D65\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/P3DCI "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.314 0.351\} dst_colorspace_name \{P3DCI\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Arri AlexaWideGamut" "knobs this \{drxy \{0.68400 0.31300\} dgxy \{0.22100 0.84800\} dbxy \{0.08610 -0.10200\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Arri AlexaWideGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDDRAGONcolor "knobs this \{drxy \{0.753044222785 0.327830576682\} dgxy \{0.299570228481 0.700699321956\} dbxy \{0.079642066735 -0.0549379510888\} dwxy \{0.321683187724 0.337673316035\} dst_colorspace_name \{REDDRAGONcolor\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDDRAGONcolor2 "knobs this \{drxy \{0.753044491143 0.327831029513\} dgxy \{0.299570490451 0.700699415614\} dbxy \{0.145011584278 0.0510971250879\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDDRAGONcolor2\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor "knobs this \{drxy \{0.699747001291 0.329046930313\} dgxy \{0.304264039024 0.623641145129\} dbxy \{0.134913961296 0.0347174412813\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor2 "knobs this \{drxy \{0.878682510476 0.32496400741\} dgxy \{0.300888714367 0.679054755791\} dbxy \{0.0953986946056 -0.0293793268343\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor2\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor3 "knobs this \{drxy \{0.701181035906 0.329014155583\} dgxy \{0.300600304652 0.683788834269\} dbxy \{0.108154455624 -0.00868817578666\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDcolor3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDcolor4 "knobs this \{drxy \{0.701180591892 0.329013699116\} dgxy \{0.300600395529 0.683788824257\} dbxy \{0.145331946229 0.0516168036226\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor4\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/REDWideGamutRGB "knobs this \{drxy \{0.780308 0.304253\} dgxy \{0.121595 1.493994\} dbxy \{0.095612 -0.084589\} dwxy \{0.3127 0.329\} dst_colorspace_name \{REDWideGamutRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/GoPro Protune Native" "knobs this \{drxy \{0.69848046 0.19302645\} dgxy \{0.32955538 1.02459662\} dbxy \{0.10844263 -0.03467857\} dwxy \{0.3127 0.329\} dst_colorspace_name \{GoPro Protune Native\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/CanonCinemaGamut "knobs this \{drxy \{0.74 0.27\} dgxy \{0.17 1.14\} dbxy \{0.08 -0.1\} dwxy \{0.3127 0.329\} dst_colorspace_name \{CanonCinemaGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SonySGamut "knobs this \{drxy \{0.73 0.28\} dgxy \{0.14 0.855\} dbxy \{0.1 -0.05\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SonySGamut3Cine "knobs this \{drxy \{0.766 0.275\} dgxy \{0.225 0.8\} dbxy \{0.089 -0.087\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut3Cine\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/PanasonicVGamut "knobs this \{drxy \{0.730 0.280\} dgxy \{0.165 0.840\} dbxy \{0.100 -0.030\} dwxy \{0.3127 0.329\} dst_colorspace_name \{PanasonicVGamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/DJI D-Gamut" "knobs this \{drxy \{0.71 0.31\} dgxy \{0.21 0.88\} dbxy \{0.09 -0.08\} dwxy \{0.3127 0.329\} dst_colorspace_name \{DJI D-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/Fujifilm F-Gamut" "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Fujifilm F-Gamut\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMDFilmV1 "knobs this \{drxy \{0.9173 0.2502\} dgxy \{0.2833 1.7072\} dbxy \{0.0856 -0.0708\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMDFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD4kFilmV1 "knobs this \{drxy \{0.7422 0.2859\} dgxy \{0.4140 1.3035\} dbxy \{0.0342 -0.0833\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD4kFilmV3 "knobs this \{drxy \{1.0625 0.3948\} dgxy \{0.3689 0.7775\} dbxy \{0.0956 -0.0332\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD46kFilmV1 "knobs this \{drxy \{0.9175 0.2983\} dgxy \{0.2983 1.2835\} dbxy \{0.0756 -0.0860\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV1\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMD46kFilmV3 "knobs this \{drxy \{0.8608 0.3689\} dgxy \{0.3282 0.6156\} dbxy \{0.0783 -0.0233\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV3\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BMDWideGamutV4 "knobs this \{drxy \{0.7177 0.3171\} dgxy \{0.2280 0.8616\} dbxy \{0.1006 -0.0820\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMDWideGamutV4\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" "colorspace/AdobeRGB\t" "knobs this \{drxy \{0.6400 0.3300\} dgxy \{0.2100 0.7100\} dbxy \{0.1500 0.0600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AdobeRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/AdobeWideGamutRGB "knobs this \{drxy \{0.7347 0.2653\} dgxy \{0.1152 0.8264\} dbxy \{0.1566 0.0177\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{AdobeWideGamutRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ROMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01  8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ROMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/RIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{RIMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ERIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ERIMM\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/ProPhotoRGB "knobs this \{drxy \{0.734699 0.265301\} dgxy \{0.159597 0.840403\} dbxy \{0.036598 0.000105\} dwxy \{0.345704 0.358540\} dst_colorspace_name \{ProPhotoRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/RusselRGB "knobs this \{drxy \{0.6900 0.3100\} dgxy \{0.1800 0.7700\} dbxy \{0.1000 0.0200\} dwxy \{0.33243 0.34744\} dst_colorspace_name \{RusselRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/SharpRGB "knobs this \{drxy \{0.6898 0.3206\} dgxy \{0.0736 0.9003\} dbxy \{0.1166 0.0374\} dwxy \{0.33333333 0.33333333\} dst_colorspace_name \{SharpRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/AppleRGB "knobs this \{drxy \{0.6250 0.3400\} dgxy \{0.2800 0.5950\} dbxy \{0.1550 0.0700\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AppleRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/BestRGB "knobs this \{drxy \{0.735191637630662 0.264808362369338\} dgxy \{0.215336134453781 0.774159663865546\} dbxy \{0.130122950819672 0.034836065573770\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{BestRGB\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()" colorspace/XYZ "knobs this \{drxy \{1 0\} dgxy \{0 1\} dbxy \{0 0\} dwxy \{0.33333333  0.33333333\} dst_colorspace_name \{XYZ\}\}; python -exec nuke.thisNode().knob('calculate_matrix').execute()"}}
 addUserKnob {12 drxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
 drxy {1 0}
 addUserKnob {12 dgxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
 dgxy {0 1}
 addUserKnob {12 dbxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
 addUserKnob {12 dwxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
 dwxy {0.33333333 0.33333333}
 addUserKnob {1 dst_colorspace_name l dst +DISABLED}
 dst_colorspace_name XYZ
 addUserKnob {26 ""}
 addUserKnob {26 chromatic_adaptation_label l " " T "<b>Chromatic Adaptation</b>"}
 addUserKnob {4 cat_method l method t "Choose the chromatic adaptation method for adapting whitepoint." M {Bradford cat02 "vonKries Hunt-Pointer-Estevez D65-Normalized" cmccat2000 sharp None}}
 addUserKnob {26 ""}
 addUserKnob {6 invert t "Invert direction of matrix." +STARTLINE}
 addUserKnob {22 calculate_matrix l "Calculate Matrix" t "Calculate 3x3 matrix based on the specified colorspace chromaticities." T "import nuke\nfloat2 = nuke.math.Vector2\nfloat3 = nuke.math.Vector3\nfloat3x3 = nuke.math.Matrix3\n\nCONE_RESP_MAT_BRADFORD = float3x3()\nCONE_RESP_MAT_CAT02 = float3x3()\nCONE_RESP_MAT_VONKRIES = float3x3()\nCONE_RESP_MAT_SHARP = float3x3()\nCONE_RESP_MAT_CMCCAT2000 = float3x3()\n\n# From ACESlib.Utilities_Color : 166\nCONE_RESP_MAT_BRADFORD.set(0.89510, -0.75020,  0.03890, 0.26640,  1.71350, -0.06850, -0.16140,  0.03670,  1.02960)\nCONE_RESP_MAT_CAT02.set(0.73280, -0.70360,  0.00300, 0.42960,  1.69750,  0.01360, -0.16240, 0.00610, 0.98340)\n\n# https://web.stanford.edu/~sujason/ColorBalancing/adaptation.html\n# from S. Bianco. \"Two New von Kries Based Chromatic Adapatation Transforms Found by Numerical Optimization.\"\nCONE_RESP_MAT_VONKRIES.set(0.40024, -0.2263, 0, 0.7076, 1.16532, 0, -0.08081, 0.0457, 0.91822)\nCONE_RESP_MAT_SHARP.set(1.2694, -0.8364, 0.0297, -0.0988, 1.8006, -0.0315, -0.1706, 0.0357, 1.0018)\nCONE_RESP_MAT_CMCCAT2000.set(0.7982, -0.5918, 0.0008, 0.3389, 1.5512, 0.239, -0.1371, 0.0406, 0.9753)\n\n\ndef transpose(mtx):\n    # transpose (swap rows to columns) of a 3x3 matrix\n    order = \[0, 3, 6, 1, 4, 7, 2, 5, 8]\n    omtx = float3x3()\n    for i in xrange(9):\n        omtx\[i] = mtx\[order\[i]]\n    return omtx\n\ndef mult_f33_f33(A, B):\n    # Calculate multiplication of 3x3 matrix A and 3x3 matrix B\n    C = float3x3()\n    C.makeIdentity()\n\n    # Row 1\n    C\[0] = (A\[0]*B\[0] + A\[1]*B\[3] + A\[2]*B\[6])\n    C\[1] = (A\[0]*B\[1] + A\[1]*B\[4] + A\[2]*B\[7])\n    C\[2] = (A\[0]*B\[2] + A\[1]*B\[5] + A\[2]*B\[8])\n    # Row 2\n    C\[3] = (A\[3]*B\[0] + A\[4]*B\[3] + A\[5]*B\[6])\n    C\[4] = (A\[3]*B\[1] + A\[4]*B\[4] + A\[5]*B\[7])\n    C\[5] = (A\[3]*B\[2] + A\[4]*B\[5] + A\[5]*B\[8])\n    # Row 3\n    C\[6] = (A\[6]*B\[0] + A\[7]*B\[3] + A\[8]*B\[6])\n    C\[7] = (A\[6]*B\[1] + A\[7]*B\[4] + A\[8]*B\[7])\n    C\[8] = (A\[6]*B\[2] + A\[7]*B\[5] + A\[8]*B\[8])\n\n    return C;\n\n\ndef mult_f3_f33(src, mtx):\n    return float3(mtx\[0] * src\[0] + mtx\[1] * src\[1] + \n    mtx\[2] * src\[2], mtx\[3] * src\[0] + mtx\[4] * src\[1] + \n    mtx\[5] * src\[2], mtx\[6] * src\[0] + mtx\[7] * src\[1] + \n    mtx\[8] * src\[2])\n\n\ndef XYZ_2_xyY(XYZ):\n    xyY = float3()\n    divisor = (XYZ\[0] + XYZ\[1] + XYZ\[2])\n    if (divisor == 0.):\n        divisor = 1e-10\n    xyY.set(XYZ\[0] / divisor, XYZ\[1] / divisor, XYZ\[1])\n    return xyY\n\n\ndef xyY_2_XYZ(xyY):\n    XYZ = float3()\n    XYZ.set(\n        xyY\[0] * xyY\[2] / max( xyY\[1], 1e-10), \\\n        xyY\[2], \\\n        (1.0 - xyY\[0] - xyY\[1]) * xyY\[2] / max( xyY\[1], 1e-10)\n        )\n    return XYZ\n\n\ndef calculate_cat_matrix(src_xy, des_xy, coneRespMat=CONE_RESP_MAT_BRADFORD):\n    # Calculates and returns a 3x3 Von Kries chromatic adaptation transform \n    # from src_xy to des_xy using the cone response primaries defined \n    # by coneRespMat. By default, coneRespMat is set to CONE_RESP_MAT_BRADFORD. \n    # The default coneRespMat can be overridden at runtime. \n\n    src_xyY = float3(src_xy\[0], src_xy\[1], 1.0)\n    des_xyY = float3(des_xy\[0], des_xy\[1], 1.0)\n\n    src_XYZ = xyY_2_XYZ( src_xyY )\n    des_XYZ = xyY_2_XYZ( des_xyY )\n\n    src_coneResp = mult_f3_f33(src_XYZ, coneRespMat)\n    des_coneResp = mult_f3_f33(des_XYZ, coneRespMat)\n\n    vkMat = float3x3()\n    vkMat.set(\n        des_coneResp\[0] / src_coneResp\[0], 0.0, 0.0,\n        0.0, des_coneResp\[1] / src_coneResp\[1], 0.0,\n        0.0, 0.0, des_coneResp\[2] / src_coneResp\[2]\n        )\n\n    cat_matrix = float3x3()\n    coneRespMatInv = coneRespMat.inverse()\n    cat_matrix = coneRespMat * ( vkMat * coneRespMatInv)\n    \n    return cat_matrix\n\n\ndef RGBtoXYZ(xy, Y=1.0, inverse=False):\n    # given r g b chromaticities and whitepoint, convert RGB colors to XYZ\n    # based on CtlColorSpace.cpp from the CTL source code : 77\n    # param: xy - dict of chromaticity xy coordinates: rxy: float2(x, y) etc\n    # param: Y - luminance of \"white\" - defaults to 1.0\n    # param: inverse - calculate XYZ to RGB instead\n    r = xy\['rxy']\n    g = xy\['gxy']\n    b = xy\['bxy']\n    w = xy\['wxy']\n\n    X = w.x * Y / w.y\n    Z = (1 - w.x - w.y) * Y / w.y\n\n    # Scale factors for matrix rows\n    d = r.x * (b.y - g.y) + b.x * (g.y - r.y) + g.x * (r.y - b.y)\n\n    Sr =    (X * (b.y - g.y) -      \\\n            g.x * (Y * (b.y - 1) +  \\\n            b.y  * (X + Z)) +       \\\n            b.x  * (Y * (g.y - 1) + \\\n            g.y * (X + Z))) / d\n    \n    Sg =    (X * (r.y - b.y) +      \\\n            r.x * (Y * (b.y - 1) +  \\\n            b.y * (X + Z)) -        \\\n            b.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    Sb =    (X * (g.y - r.y) -      \\\n            r.x * (Y * (g.y - 1) +  \\\n            g.y * (X + Z)) +        \\\n            g.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    # Assemble the matrix\n    M = float3x3()\n    M.set(  Sr * r.x, Sr * r.y, Sr * (1 - r.x - r.y),\n            Sg * g.x, Sg * g.y, Sg * (1 - g.x - g.y),\n            Sb * b.x, Sb * b.y, Sb * (1 - b.x - b.y))\n    if inverse:\n        M = M.inverse()\n        return M\n    else:\n        return M\n\n\ndef get_primaries(node, dst=False):\n    # get colorspace chromaticities xy coordinates from node\n    dst_pri = \['drxy', 'dgxy', 'dbxy', 'dwxy']\n    pri = \['rxy', 'gxy', 'bxy', 'wxy']\n    d = \{\}\n    for i, p in enumerate(pri):\n        if dst:\n            d\[p] = float2(node\[dst_pri\[i]].getValue()\[0], node\[dst_pri\[i]].getValue()\[1])\n        else:\n            d\[p] = float2(node\[p].getValue()\[0], node\[p].getValue()\[1])\n    return d\n\n\n\ndef start():\n    node = nuke.thisNode()\n    \n    identity_mtx = float3x3()\n    identity_mtx.makeIdentity()\n\n    invert = node\['invert'].getValue()\n    cat_method = node\['cat_method'].value()\n    src_primaries = get_primaries(node)\n    dst_primaries = get_primaries(node, dst=True)\n    src_colorspace_name = node\['src_colorspace_name'].getValue()\n    dst_colorspace_name = node\['dst_colorspace_name'].getValue()\n    \n    # Check for XYZ on src / destination\n    enable_src = (src_colorspace_name != 'XYZ')\n    enable_dst = (dst_colorspace_name != 'XYZ')\n    whitepoint_changed = (src_primaries\['wxy']\[0] != dst_primaries\['wxy']\[0] or src_primaries\['wxy']\[1] != dst_primaries\['wxy']\[1])\n\n    # Get chromatic adaptation method\n    if cat_method == 'Bradford':\n        coneRespMat = CONE_RESP_MAT_BRADFORD\n    elif cat_method == 'cat02':\n        coneRespMat = CONE_RESP_MAT_CAT02\n    elif cat_method == 'vonKries Hunt-Pointer-Estevez D65-Normalized':\n        coneRespMat = CONE_RESP_MAT_VONKRIES\n    elif cat_method == 'cmccat2000':\n        coneRespMat = CONE_RESP_MAT_CMCCAT2000\n    elif cat_method == 'sharp':\n        coneRespMat = CONE_RESP_MAT_SHARP\n    elif cat_method == 'None':\n        coneRespMat = identity_mtx\n        whitepoint_changed = False\n\n    if enable_src:\n        # Calculate Source RGB to XYZ matrix\n        src_rgb_to_xyz_mtx = RGBtoXYZ(src_primaries)\n\n    if enable_dst:\n        # Calculate Destination XYZ to RGB matrix\n        dst_xyz_to_rgb_mtx = RGBtoXYZ(dst_primaries, inverse=True)\n\n    if enable_src and not enable_dst:\n        # Convert from Source RGB to XYZ only\n        mtx = src_rgb_to_xyz_mtx\n\n    if enable_dst and not enable_src:\n        # Convert from XYZ to Destination RGB only\n        mtx = dst_xyz_to_rgb_mtx\n\n    if enable_src and enable_dst:\n        if whitepoint_changed:\n            # Calculate chromatic adaptation matrix\n            cat_mtx = calculate_cat_matrix(src_primaries\['wxy'], dst_primaries\['wxy'], coneRespMat=coneRespMat)\n            # We will use our own matrix multiplication algorithm since there seems to be precision issues with the nuke.math module :/\n            # mtx = (cat_mtx * src_rgb_to_xyz_mtx) * dst_xyz_to_rgb_mtx\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, mult_f33_f33(cat_mtx, src_rgb_to_xyz_mtx))\n        else:\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, src_rgb_to_xyz_mtx)\n\n    if invert:\n        mtx = mtx.inverse()\n\n    node\['matrix'].setValue(mtx)\n\n    return True\n\n\nif __name__=='__main__':\n    start()" +STARTLINE}
 addUserKnob {22 create_matrix_node l "Create Matrix" t "Create ColorMatrix node with the current values." -STARTLINE T "node = nuke.thisNode()\nnode\['calculate_matrix'].execute()\nnuke.root().begin()\n_ = \[n.setSelected(False) for n in nuke.allNodes(recurseGroups=True)]\nm = nuke.createNode('ColorMatrix')\nm\['matrix'].setValue(node\['matrix'].getValue())\nm.setXYpos(node.xpos()-120, node.ypos())\nm\['label'].setValue(node\['label'].getValue())"}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {22 clear l Clear T "n = nuke.thisNode()\nn\['matrix'].setValue(\[1,0,0,0,1,0,0,0,1])\nn\['label'].setValue('')" +STARTLINE}
 addUserKnob {22 show_matrix l Show t "Show matrix values in a popup window for copying." T "node = nuke.thisNode()\nshow_4x4 = node\['show_matrix_4x4'].getValue()\nshow_commas = node\['show_matrix_commas'].getValue()\n\nif show_commas:\n    sep = ', '\nelse:\n    sep = ' '\n\nmtx = \[format(i, '.8f') for i in node\['matrix'].getValue()]\n\nif show_4x4:\n    z = \['0']\n    mtx = mtx\[0:3] + z + mtx\[3:6] + z + mtx\[6:9] + z*4 + \['1']\n\nnuke.message(sep.join(mtx))" +STARTLINE}
 addUserKnob {6 show_matrix_4x4 l "show 4x4" t "present values in a 4x4 matrix (useful for ocio)" -STARTLINE}
 addUserKnob {6 show_matrix_commas l "show comma sep" t "show matrix comma separated." -STARTLINE}
 addUserKnob {22 save_spimtx l "Save spimtx" T "# inspired by ColorMatrixPlus by hpd\ndef write_spimtx(mtx_node, spimtx_file):\n    mtx_vals = mtx_node\['matrix'].getValue()\n    with open(spimtx_file, \"w\") as f:\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[0], mtx_vals\[1], mtx_vals\[2]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[3], mtx_vals\[4], mtx_vals\[5]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[6], mtx_vals\[7], mtx_vals\[8]) )\n\nnode = nuke.thisNode()\nfilepath = nuke.getFilename('Save Matrix', '*.spimtx')\n\nif filepath:\n    if not filepath.endswith('.spimtx'):\n        filepath = filepath + '.spimtx'\n    write_spimtx(node, filepath)" +STARTLINE}
 addUserKnob {22 load_spimtx l "Load spimtx" -STARTLINE T "# Inspired by ColorMatrixPlus by hpd\ndef load_spimtx(spimtx, mtx_node):\n    with open( spimtx, 'r') as file:\n        lines = file.readlines()\n    matrix_values = list()\n    for line in lines:\n        matrix_values.extend( map(float, line.strip().split(' ')\[0:3]) )\n    mtx_node\['matrix'].setValue(matrix_values)\n\nspimtx = nuke.getFilename('Load SPIMTX', '*.spimtx')\nif spimtx:\n    load_spimtx( spimtx, nuke.thisNode() )\n"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 206
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 1 0}
      {0 0 1}
    }
  name ColorMatrix
  xpos -40
  ypos 254
 }
 Output {
  name Output
  xpos -40
  ypos 302
 }
end_group
Group {
 inputs 0
 name MaxRGB1
 note_font Helvetica
 xpos 11400
 ypos 3063
 addUserKnob {20 MaxRGB_tab l MaxRGB}
 addUserKnob {22 calculate t "calculate the max pixel value in red, green, and blue color components." T "def get_max(ct_node, frame):\n    ch = ct_node.name().lower()\[0]\n    nuke.execute(ct_node, frame, frame)\n    maxval = max(ct_node\['maxlumapixvalue'].getValue())\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    kmax.setValueAt(maxval, frame)\n    for i in range(2):\n        kpos.setValueAt(ct_node\['maxlumapixdata'].getValue()\[i], frame, i)\n    \n\nn = nuke.thisNode()\ncurframe = n\['curframe'].getValue()\nif curframe:\n    first_frame = nuke.frame()\n    last_frame = nuke.frame()\nelse:\n    first_frame = n.frameRange().first()\n    last_frame = n.frameRange().last()\n\nct_nodes = \[nuke.toNode('\{0\}.\{1\}MAX'.format(n.fullName(), c)) for c in \['R', 'G', 'B']]\n\nfor ch in \[c.name().lower()\[0] for c in ct_nodes]:\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    for k in \[kmax, kpos]:\n        k.clearAnimated()\n        if not curframe:\n            k.setAnimated()\n\nif curframe:\n    for ct_node in ct_nodes:\n        get_max(ct_node, first_frame)\n\n#else: # threading issues... not implemented for now\n#    for frame in range(first_frame, last_frame+1):\n#        for ct_node in ct_nodes:\n#            threading.Thread(group=None, target=get_max, args=(ct_node, frame)).start()" +STARTLINE}
 addUserKnob {22 clear -STARTLINE T "n = nuke.thisNode()\nfor c in \['r', 'g', 'b']:\n    kmax =  n\['\{0\}max'.format(c)]\n    kpos = n\['\{0\}pos'.format(c)]\n    for k in \[kmax, kpos]:\n        k.setValue(0)\n        k.clearAnimated()"}
 addUserKnob {6 curframe l "current frame" t "Calculate only the current frame. If false, will prompt calculate input framerange." -STARTLINE}
 curframe true
 addUserKnob {7 rmax t "maximum red value" R 0 50}
 rmax 1.03131032
 addUserKnob {12 rpos l "" t "rmax position" -STARTLINE}
 rpos {209 1175}
 addUserKnob {7 gmax t "maximum green value" R 0 50}
 gmax 1.143916965
 addUserKnob {12 gpos l "" t "gmax position" -STARTLINE}
 gpos {894 1274}
 addUserKnob {7 bmax t "maximum blue value" R 0 50}
 bmax 0.9455359578
 addUserKnob {12 bpos l "" t "bmax position" -STARTLINE}
 bpos {531 985}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {rgba.red -rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 209 209 209 513 513 513 513 513 513 385 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 318 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513} {curve x1 1175 1175 1175 994 994 994 994 994 994 686 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 451 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994}}
  maxlumapixvalue {{curve x1 1.03131032 1.361329675 1.03131032 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.016959906 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 78928.83594 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  minlumapixdata {{curve x1 1 1 1 389 389 389 389 389 389 998 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 666 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389} {curve x1 0 0 0 1040 1040 1040 1040 1040 1040 210 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 284 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040}}
  minlumapixvalue {{curve x1 0 0 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -54374.20312 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  name RMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 39
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 894 50 50 1347 1347 1347 1347 1347 1347 259 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 x48 382} {curve x1 1274 9 9 896 896 896 896 896 896 459 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 x48 857}}
  maxlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 1.143916965 1.778251767 1.347160339 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 1.138906717 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 x48 201632.3594} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  minlumapixdata {{curve x1 0 0 0 389 389 389 389 389 389 1234 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 x48 72} {curve x1 0 0 0 1040 1040 1040 1040 1040 1040 220 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 x48 77}}
  minlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 0 0 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 x48 -1243348.875} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  name GMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 87
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 531 7 7 x10 1235 x48 382} {curve x1 985 41 41 x10 221 x48 857}}
  maxlumapixvalue {{curve x1 0 0 0 x10 0 x48 0} {curve x1 0 0 0 x10 0 x48 0} {curve x1 0.9455359578 1.744389296 1.321506977 x10 1.041050911 x48 2990632.5}}
  minlumapixdata {{curve x1 3 3 3 x10 0 x48 72} {curve x1 0 0 0 x10 0 x48 77}}
  minlumapixvalue {{curve x1 0 0 0 x10 0 x48 0} {curve x1 0 0 0 x10 0 x48 0} {curve x1 0 0 0 x10 0 x48 -1874936.125}}
  name BMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 135
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
Group {
 inputs 0
 name GamutCompress1
 label "m. scharfenberger"
 xpos 11070
 ypos 2936
 addUserKnob {20 GamutCompress}
 addUserKnob {41 src_gamut l "src gamut" T SOURCE_GAMUT_GamutToXYZ.gamut}
 addUserKnob {35 target_gamut_presets l target t "Cboose target gamut to compress into" M {gamut/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} target_gamut_name \{ACES\} target_gamut \{ACES\}\}" gamut/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} target_gamut_name \{ACEScg\} target_gamut \{ACEScg\}\}" "gamut/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} target_gamut_name \{Filmlight E target_gamut_name \{Filt E-Gamut\}\}" gamut/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.31270 0.32900\} target_gamut_name \{Rec709\} target_gamut \{Rec709\}\}" gamut/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.31270 0.32900\} target_gamut_name \{Rec2020\} target_gamut \{Rec2020\}\}" gamut/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} target_gamut_name \{P3D60\} target_gamut \{P3D60\}\}" gamut/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.31270 0.32900\} target_gamut_name \{P3D65\} target_gamut \{P3D65\}\}" gamut/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.31400 0.35100\} target_gamut_name \{P3DCI\} target_gamut \{P3DCI\}\}" gamut/ArriAlexaWideGamut "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 0.10200\} wxy \{0.31270 0.32900\} target_gamut_name \{ArriAlexaWideGamut\} target_gamut \{ArriAlexaWideGamut\}\}" "gamut/AdobeRGB " "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.3290\} target_gamut_name \{AdobeRGB\} target_gamut \{AdobeRGB\}\}" gamut/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} target_gamut_name \{AdobeWideGamutRGB\} target_gamut \{AdobeWideGamutRGB\}\}" gamut/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} target_gamut_name \{ROMM\} target_gamut \{ROMM\}\}" gamut/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} target_gamut_name \{RIMM\} target_gamut \{RIMM\}\}" gamut/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} target_gamut_name \{ERIMM\} target_gamut \{ERIMM\}\}" gamut/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} target_gamut_name \{ProPhotoRGB\} target_gamut \{ProPhotoRGB\}\}" gamut/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} target_gamut_name \{REDDRAGONcolor\} target_gamut \{REDDRAGONcolor\}\}" gamut/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} target_gamut_name \{REDDRAGONcolor2\} target_gamut \{REDDRAGONcolor2\}\}" gamut/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} target_gamut_name \{REDcolor\} target_gamut \{REDcolor\}\}" gamut/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} target_gamut_name \{REDcolor2\} target_gamut \{REDcolor2\}\}" gamut/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} target_gamut_name \{REDcolor3\} target_gamut \{REDcolor3\}\}" gamut/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} target_gamut_name \{REDcolor4\} target_gamut \{REDcolor4\}\}" gamut/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.3290\} target_gamut_name \{REDWideGamutRGB\} target_gamut \{REDWideGamutRGB\}\}" gamut/GoProProtune "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} target_gamut_name \{GoProProtune\} target_gamut \{GoProProtune\}\}" gamut/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} target_gamut_name \{CanonCinemaGamut\} target_gamut \{CanonCinemaGamut\}\}" gamut/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} target_gamut_name \{SonySGamut\} target_gamut \{SonySGamut\}\}" gamut/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} target_gamut_name \{SonySGamut3Cine\} target_gamut \{SonySGamut3Cine\}\}" gamut/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.3290\} target_gamut_name \{PanasonicVGamut\} target_gamut \{PanasonicVGamut\}\}" gamut/XYZ "knobs this \{rxy \{0 0\} gxy \{0 0\} bxy \{0 0\} wxy \{0 0\} target_gamut_name \{XYZ\} target_gamut \{XYZ\}\}" "" ""}}
 addUserKnob {1 target_gamut_name l "" -STARTLINE +DISABLED}
 target_gamut_name ACEScg
 addUserKnob {6 compress_only l "compress only" t "No gamut conversion, just do the compression mapping.\n<b>INPUT</b>: CIE XYZ\n<b>OUTPUT</b>: CIE XYZ" +STARTLINE}
 addUserKnob {6 invert +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 compress_gamut_label l " " T "<b>Compress Gamut"}
 addUserKnob {7 threshold}
 threshold 1
 addUserKnob {7 slope}
 slope 0.785
 addUserKnob {41 limit T SoftCompress15.limit}
 addUserKnob {22 calc_limit l "Calculate Limit" t "Calculate the max saturation value" T "n = nuke.thisNode()\nnuke.root().begin()\nn.begin()\nct = nuke.toNode('CT')\nnuke.execute(ct, nuke.frame(), nuke.frame())\nmaxpx = ct\['maxlumapixvalue'].getValue()\n\nn\['limit'].setValue(maxpx\[1])" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 purple_supression_label l " " T "<b>Suppress Purple"}
 addUserKnob {7 strength}
 addUserKnob {7 hue_phase}
 hue_phase 0.5
 addUserKnob {7 range}
 range 0.7
 addUserKnob {20 Chromaticities}
 addUserKnob {41 target_gamut l "target gamut" +DISABLED T TARGET_GAMUT_GamutToXYZ1.gamut}
 addUserKnob {26 target_chromaticities_label l " " T "<b>Target Gamut Chromaticities</b>"}
 addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
 rxy {400.7130127 670.2930298}
 addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
 gxy {400.1650085 670.8300171}
 addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
 bxy {400.1279907 670.0440063}
 addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
 wxy {400.3216858 670.3376465}
 addUserKnob {13 primaryAngle}
 primaryAngle {{"(-(degrees(atan2(rxy.x - wxy.x, rxy.y-wxy.y))-180)+270)%360/360"} {"(-(degrees(atan2(gxy.x-wxy.x, gxy.y-wxy.y))-180)+270)%360/360"} {"(-(degrees(atan2(bxy.x-wxy.x, bxy.y-wxy.y))-180)+270)%360/360"}}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x5e295fff
  label "Purple Supress"
  note_font_size 42
  xpos 171
  ypos 127
  bdwidth 508
  bdheight 598
 }
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -202
 }
 Dot {
  name Dot6
  label "  SRC GAMUT"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos -136
 }
 Group {
  name SOURCE_GAMUT_GamutToXYZ
  label "\[value gamut] to XYZ\n"
  xpos -40
  ypos -81
  disable {{parent.compress_only}}
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Dot {
  name Dot45
  label " XYZ"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos -6
 }
 Group {
  name XYZtoLMS5
  label "direction : \[value direction]"
  xpos -40
  ypos 104
  addUserKnob {20 XYZtoLMS}
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 42
  }
set Nf659c20 [stack 0]
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   invert true
   name ColorMatrix1
   label "LMS\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 92
  }
  Expression {
   temp_name2 Xd65
   temp_expr2 (r+(cb-1)*b)/cb
   expr0 Xd65
   expr1 (g+(cg-1)*Xd65)/cg
   expr2 b
   name Expression47
   label "X'Y'Z (D65)\nto\nXYZ (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 188
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
push $Nf659c20
  Expression {
   expr0 "(cb*r) - ((cb-1)*b)"
   expr1 "(cg*g) - ((cg-1)*r)"
   expr2 b
   name Expression4
   label "XYZ (D65)\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 91
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   name ColorMatrix8
   label "X'Y'Z (D65)\nto\nLMS"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 188
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -40
   ypos 350
  }
  Output {
   name Output
   xpos -40
   ypos 446
  }
 end_group
 Dot {
  name Dot44
  label " LMS"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 162
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 234
 }
set Nf6a7290 [stack 0]
 Dot {
  name Dot39
  xpos 544
  ypos 234
 }
 Expression {
  temp_name0 v
  temp_expr0 max(abs(r-g),abs(g-b),abs(r-r))
  temp_name1 n
  temp_expr1 v/max(r,g,b)
  expr0 n
  expr1 n
  expr2 n
  expr3 n
  name Expression13
  label "saturation mask"
  xpos 510
  ypos 344
 }
 Clamp {
  channels rgba
  name Clamp3
  xpos 510
  ypos 398
 }
 Dot {
  name Dot38
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 544
  ypos 474
 }
push $Nf6a7290
 Group {
  name RGBtoHSV
  label "direction : \[value direction]"
  xpos -40
  ypos 296
  addUserKnob {20 RGBtoHSV_tab l RGBtoHSV}
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name Input
   xpos -700
   ypos 566
  }
set Nf6dbc10 [stack 0]
  Expression {
   temp_name0 C
   temp_expr0 b*g
   temp_name1 X
   temp_expr1 C*(1-abs((r*6)%2-1))
   temp_name2 m
   temp_expr2 b-C
   expr0 (r<1/6?C:r<2/6?X:r<3/6?0:r<4/6?0:r<5/6?X:C)+m
   expr1 (r<1/6?X:r<2/6?C:r<3/6?C:r<4/6?X:r<5/6?0:0)+m
   expr2 (r<1/6?0:r<2/6?0:r<3/6?X:r<4/6?C:r<5/6?C:X)+m
   name Expression48
   label "HSV to RGB"
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 656
  }
push $Nf6dbc10
  Expression {
   temp_name0 cmax
   temp_expr0 max(r,g,b)
   temp_name1 cmin
   temp_expr1 min(r,g,b)
   temp_name2 delta
   temp_expr2 cmax-cmin
   expr0 delta==0?0:cmax==r?(((g-b)/delta+6)%6)/6:cmax==g?(((b-r)/delta+2)/6):(((r-g)/delta+4)/6)
   expr1 "cmax == 0 ? 0 : delta / cmax"
   expr2 cmax
   name Expression47
   label "RGB to HSV"
   note_font "Bitstream Vera Sans"
   xpos -810
   ypos 656
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -700
   ypos 734
  }
  Output {
   name Output
   xpos -700
   ypos 806
  }
 end_group
 Dot {
  name Dot2
  label " HSV"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 354
 }
 Dot {
  name Dot46
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 426
 }
set Nf70f3a0 [stack 0]
 Expression {
  expr0 "r < 0 ? 1-abs(r)%1:r%1"
  expr1 g
  expr2 b
  expr3 a
  name Expression23
  label "hue wrap-around"
  xpos 290
  ypos 416
 }
set Nf7142a0 [stack 0]
 Expression {
  expr0 -(r+o)*m/c/c*exp(-(r+o)*m*(r+o)*m/2/c/c)
  expr1 g
  expr2 b
  expr3 a
  name Expression25
  label "gauss derivative"
  xpos 400
  ypos 416
  addUserKnob {20 User}
  addUserKnob {7 amplitude R 0 0.1}
  amplitude {{"0.6*max(1e-8, parent.strength)/exp(1/parent.range*2)"}}
  addUserKnob {7 phase R -1 1}
  phase {{parent.hue_phase}}
  addUserKnob {7 length}
  length {{parent.range/2}}
  addUserKnob {7 c R 0 5}
  c {{(1/exp(0.5)/amplitude)}}
  addUserKnob {7 m}
  m {{exp(1/length)*c}}
  addUserKnob {7 o}
  o {{-phase}}
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge15
  xpos 400
  ypos 470
 }
set Nf733d70 [stack 0]
push $Nf7142a0
 Merge2 {
  inputs 2
  operation from
  bbox B
  output rgb
  name Merge19
  xpos 400
  ypos 542
 }
push $Nf733d70
push $Nf7142a0
 Merge2 {
  inputs 2
  operation plus
  name Merge16
  xpos 290
  ypos 542
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name Switch_Inverse
  xpos 290
  ypos 590
 }
 Expression {
  expr0 "r < 0 ? 1 - abs(r) % 1 : r % 1"
  expr1 g
  expr2 b
  expr3 a
  name Expression26
  label "hue wrap-around"
  xpos 290
  ypos 632
 }
push $Nf70f3a0
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy3
  xpos -40
  ypos 632
 }
 Dot {
  name Dot40
  xpos -6
  ypos 834
 }
set Nf788da0 [stack 0]
 Dot {
  name Dot41
  xpos 434
  ypos 834
 }
 Group {
  name RGBtoHSV1
  label "direction : \[value direction]"
  xpos 400
  ypos 864
  addUserKnob {20 RGBtoHSV_tab l RGBtoHSV}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
 }
  Input {
   inputs 0
   name Input
   xpos -700
   ypos 566
  }
set Nf79c3f0 [stack 0]
  Expression {
   temp_name0 C
   temp_expr0 b*g
   temp_name1 X
   temp_expr1 C*(1-abs((r*6)%2-1))
   temp_name2 m
   temp_expr2 b-C
   expr0 (r<1/6?C:r<2/6?X:r<3/6?0:r<4/6?0:r<5/6?X:C)+m
   expr1 (r<1/6?X:r<2/6?C:r<3/6?C:r<4/6?X:r<5/6?0:0)+m
   expr2 (r<1/6?0:r<2/6?0:r<3/6?X:r<4/6?C:r<5/6?C:X)+m
   name Expression48
   label "HSV to RGB"
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 656
  }
push $Nf79c3f0
  Expression {
   temp_name0 cmax
   temp_expr0 max(r,g,b)
   temp_name1 cmin
   temp_expr1 min(r,g,b)
   temp_name2 delta
   temp_expr2 cmax-cmin
   expr0 delta==0?0:cmax==r?(((g-b)/delta+6)%6)/6:cmax==g?(((b-r)/delta+2)/6):(((r-g)/delta+4)/6)
   expr1 "cmax == 0 ? 0 : delta / cmax"
   expr2 cmax
   name Expression47
   label "RGB to HSV"
   note_font "Bitstream Vera Sans"
   xpos -810
   ypos 656
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -700
   ypos 734
  }
  Output {
   name Output
   xpos -700
   ypos 806
  }
 end_group
 Group {
  name XYZtoLMS1
  label "direction : \[value direction]"
  xpos 400
  ypos 926
  addUserKnob {20 XYZtoLMS}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 42
  }
set Nf7d8c10 [stack 0]
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   invert true
   name ColorMatrix1
   label "LMS\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 92
  }
  Expression {
   temp_name2 Xd65
   temp_expr2 (r+(cb-1)*b)/cb
   expr0 Xd65
   expr1 (g+(cg-1)*Xd65)/cg
   expr2 b
   name Expression47
   label "X'Y'Z (D65)\nto\nXYZ (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 188
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
push $Nf7d8c10
  Expression {
   expr0 "(cb*r) - ((cb-1)*b)"
   expr1 "(cg*g) - ((cg-1)*r)"
   expr2 b
   name Expression4
   label "XYZ (D65)\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 91
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   name ColorMatrix8
   label "X'Y'Z (D65)\nto\nLMS"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 188
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -40
   ypos 350
  }
  Output {
   name Output
   xpos -40
   ypos 446
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 400
  ypos 1001
 }
 Expression {
  temp_name0 yellow
  temp_expr0 "hypot(( (g*white.y-b*white.x)*(red.x-green.x)-(g-white.x)*(red.x*green.y-red.y*green.x) ) / ( (g-white.x)*(red.y-green.y)-(b-white.y)*(red.x-green.x) )-white.x, ( (g*white.y-b*white.x)*(red.y-green.y)-(b-white.y)*(red.x*green.y-red.y*green.x) ) / ( (g-white.x)*(red.y-green.y)-(b-white.y)*(red.x-green.x) )-white.y)"
  temp_name1 cyan
  temp_expr1 "hypot(( (g*white.y-b*white.x)*(green.x-blue.x)-(g-white.x)*(green.x*blue.y-green.y*blue.x) ) / ( (g-white.x)*(green.y-blue.y)-(b-white.y)*(green.x-blue.x) )-white.x, ( (g*white.y-b*white.x)*(green.y-blue.y)-(b-white.y)*(green.x*blue.y-green.y*blue.x) ) / ( (g-white.x)*(green.y-blue.y)-(b-white.y)*(green.x-blue.x) )-white.y)"
  temp_name2 magenta
  temp_expr2 "hypot(( (g*white.y-b*white.x)*(blue.x-red.x)-(g-white.x)*(blue.x*red.y-blue.y*red.x) ) / ( (g-white.x)*(blue.y-red.y)-(b-white.y)*(blue.x-red.x) )-white.x, ( (g*white.y-b*white.x)*(blue.y-red.y)-(b-white.y)*(blue.x*red.y-blue.y*red.x) ) / ( (g-white.x)*(blue.y-red.y)-(b-white.y)*(blue.x-red.x) )-white.y)"
  temp_name3 angleNorm
  temp_expr3 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360-primaryNormOffset < 0 ? (-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360-primaryNormOffset + 1 : (-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360-primaryNormOffset"
  expr0 r
  expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
  expr2 "g == white.x && b == white.y ? hypot(g-red.x, b-red.y) : angleNorm < primaryAngleNorm.y ? yellow : angleNorm < primaryAngleNorm.z ? cyan : magenta"
  name Expression_max_rg5
  label "Yxy to YHmaxC"
  note_font "Bitstream Vera Sans"
  xpos 400
  ypos 1050
  addUserKnob {20 User}
  addUserKnob {12 red}
  red {{parent.rxy} {parent.rxy}}
  addUserKnob {12 green}
  green {{parent.gxy} {parent.gxy}}
  addUserKnob {12 blue}
  blue {{parent.bxy} {parent.bxy}}
  addUserKnob {12 white}
  white {{parent.wxy} {parent.wxy}}
  addUserKnob {13 primaryAngle}
  primaryAngle {{parent.primaryAngle} {parent.primaryAngle} {parent.primaryAngle}}
  addUserKnob {7 primaryNormOffset}
  primaryNormOffset {{primaryAngle.x}}
  addUserKnob {13 primaryAngleNorm}
  primaryAngleNorm {{"primaryAngle.x-primaryNormOffset < 0 ? primaryAngle.x-primaryNormOffset + 1 : primaryAngle.x-primaryNormOffset"} {"primaryAngle.y-primaryNormOffset < 0 ? primaryAngle.y-primaryNormOffset + 1 : primaryAngle.y-primaryNormOffset"} {"primaryAngle.z-primaryNormOffset < 0 ? primaryAngle.z-primaryNormOffset + 1 : primaryAngle.z-primaryNormOffset"}}
 }
 Expression {
  expr0 1
  expr1 cos(radians(g*360))*b+white.x
  expr2 sin(radians(g*360))*b+white.y
  expr3 1
  name Expression40
  label "YHC to 1xy"
  xpos 400
  ypos 1096
  addUserKnob {20 User}
  addUserKnob {12 white}
  white {{parent.wxy} {parent.wxy}}
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace7
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 400
  ypos 1143
 }
 Group {
  name XYZtoLMS2
  label "direction : \[value direction]"
  xpos 400
  ypos 1197
  addUserKnob {20 XYZtoLMS}
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 42
  }
set Nf880bc0 [stack 0]
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   invert true
   name ColorMatrix1
   label "LMS\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 92
  }
  Expression {
   temp_name2 Xd65
   temp_expr2 (r+(cb-1)*b)/cb
   expr0 Xd65
   expr1 (g+(cg-1)*Xd65)/cg
   expr2 b
   name Expression47
   label "X'Y'Z (D65)\nto\nXYZ (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 188
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
push $Nf880bc0
  Expression {
   expr0 "(cb*r) - ((cb-1)*b)"
   expr1 "(cg*g) - ((cg-1)*r)"
   expr2 b
   name Expression4
   label "XYZ (D65)\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 91
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   name ColorMatrix8
   label "X'Y'Z (D65)\nto\nLMS"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 188
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -40
   ypos 350
  }
  Output {
   name Output
   xpos -40
   ypos 446
  }
 end_group
 Group {
  name RGBtoHSV2
  label "direction : \[value direction]"
  xpos 400
  ypos 1247
  addUserKnob {20 RGBtoHSV_tab l RGBtoHSV}
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name Input
   xpos -700
   ypos 566
  }
set Nf8d23e0 [stack 0]
  Expression {
   temp_name0 C
   temp_expr0 b*g
   temp_name1 X
   temp_expr1 C*(1-abs((r*6)%2-1))
   temp_name2 m
   temp_expr2 b-C
   expr0 (r<1/6?C:r<2/6?X:r<3/6?0:r<4/6?0:r<5/6?X:C)+m
   expr1 (r<1/6?X:r<2/6?C:r<3/6?C:r<4/6?X:r<5/6?0:0)+m
   expr2 (r<1/6?0:r<2/6?0:r<3/6?X:r<4/6?C:r<5/6?C:X)+m
   name Expression48
   label "HSV to RGB"
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 656
  }
push $Nf8d23e0
  Expression {
   temp_name0 cmax
   temp_expr0 max(r,g,b)
   temp_name1 cmin
   temp_expr1 min(r,g,b)
   temp_name2 delta
   temp_expr2 cmax-cmin
   expr0 delta==0?0:cmax==r?(((g-b)/delta+6)%6)/6:cmax==g?(((b-r)/delta+2)/6):(((r-g)/delta+4)/6)
   expr1 "cmax == 0 ? 0 : delta / cmax"
   expr2 cmax
   name Expression47
   label "RGB to HSV"
   note_font "Bitstream Vera Sans"
   xpos -810
   ypos 656
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -700
   ypos 734
  }
  Output {
   name Output
   xpos -700
   ypos 806
  }
 end_group
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 434
  ypos 1329
 }
set Nf900bc0 [stack 0]
 Dot {
  name Dot42
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 434
  ypos 1520
 }
push $Nf788da0
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 1262
 }
set Nf90aa60 [stack 0]
push $Nf900bc0
 Merge2 {
  inputs 2
  operation divide
  name Merge17
  note_font "Bitstream Vera Sans"
  xpos 190
  ypos 1325
 }
set Nf90f960 [stack 0]
 Group {
  name SoftCompress15
  label "direction: \[knob direction]"
  xpos 190
  ypos 1424
  addUserKnob {20 SoftCompress}
  addUserKnob {7 slope t "The softness of the compressing curve's slope. 0 is a clamp."}
  slope {{parent.threshold}}
  addUserKnob {7 threshold t "The minimum threshold. Values below this number will not be affected." R 0 2}
  threshold {{parent.slope}}
  addUserKnob {7 limit t "The asymptotic maximum value. For example, the value that inf becomes." R 0 2}
  limit 0.3682569563
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name InputMask
   xpos -590
   ypos 806
   number 1
  }
  Input {
   inputs 0
   name Input
   xpos -810
   ypos 494
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -776
   ypos 546
  }
set Nf934360 [stack 0]
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 threshold
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r : (pow(sl, 2) + 2 * sl * th - 2 * sl * r + pow(th, 2) - th * r + lim * r)/(th + lim - r)"
   expr1 "g < th + sl ? g : (pow(sl, 2) + 2 * sl * th - 2 * sl * g + pow(th, 2) - th * g + lim * g)/(th + lim - g)"
   expr2 "b < th + sl ? b : (pow(sl, 2) + 2 * sl * th - 2 * sl * b + pow(th, 2) - th * b + lim * b)/(th + lim - b)"
   expr3 "a < th + sl ? a : (pow(sl, 2) + 2 * sl * th - 2 * sl * a + pow(th, 2) - th * a + lim * a)/(th + lim - a)"
   name SoftCompress_inverse
   xpos -700
   ypos 638
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
push $Nf934360
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 "min(threshold, limit)"
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r :  th + (-1 / ((r - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr1 "g < th + sl ? g :  th + (-1 / ((g - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr2 "b < th + sl ? b :  th + (-1 / ((b - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr3 "a < th + sl ? a :  th + (-1 / ((a - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   name SoftCompress
   xpos -920
   ypos 638
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name SwitchDirection
   xpos -810
   ypos 710
  }
push $Nf934360
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 546
  }
  Dot {
   name Dot3
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 810
  }
  NodeWrapper {
   inputs 2+1
   channels rgba
   name NodeWrapper1
   xpos -810
   ypos 806
  }
  Output {
   name Output
   xpos -810
   ypos 926
  }
 end_group
 Merge2 {
  inputs 2
  operation multiply
  name Merge18
  note_font "Bitstream Vera Sans"
  xpos 190
  ypos 1516
 }
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 224
  ypos 1610
 }
push $Nf90aa60
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.green
  name Copy1
  xpos -40
  ypos 1600
 }
 Group {
  name RGBtoHSV3
  label "direction : \[value direction]"
  xpos -40
  ypos 1689
  addUserKnob {20 RGBtoHSV_tab l RGBtoHSV}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
 }
  Input {
   inputs 0
   name Input
   xpos -700
   ypos 566
  }
set Nf9a8870 [stack 0]
  Expression {
   temp_name0 C
   temp_expr0 b*g
   temp_name1 X
   temp_expr1 C*(1-abs((r*6)%2-1))
   temp_name2 m
   temp_expr2 b-C
   expr0 (r<1/6?C:r<2/6?X:r<3/6?0:r<4/6?0:r<5/6?X:C)+m
   expr1 (r<1/6?X:r<2/6?C:r<3/6?C:r<4/6?X:r<5/6?0:0)+m
   expr2 (r<1/6?0:r<2/6?0:r<3/6?X:r<4/6?C:r<5/6?C:X)+m
   name Expression48
   label "HSV to RGB"
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 656
  }
push $Nf9a8870
  Expression {
   temp_name0 cmax
   temp_expr0 max(r,g,b)
   temp_name1 cmin
   temp_expr1 min(r,g,b)
   temp_name2 delta
   temp_expr2 cmax-cmin
   expr0 delta==0?0:cmax==r?(((g-b)/delta+6)%6)/6:cmax==g?(((b-r)/delta+2)/6):(((r-g)/delta+4)/6)
   expr1 "cmax == 0 ? 0 : delta / cmax"
   expr2 cmax
   name Expression47
   label "RGB to HSV"
   note_font "Bitstream Vera Sans"
   xpos -810
   ypos 656
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -700
   ypos 734
  }
  Output {
   name Output
   xpos -700
   ypos 806
  }
 end_group
 Group {
  name XYZtoLMS4
  label "direction : \[value direction]"
  xpos -40
  ypos 1740
  addUserKnob {20 XYZtoLMS}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 42
  }
set Nf9e4d00 [stack 0]
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   invert true
   name ColorMatrix1
   label "LMS\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 92
  }
  Expression {
   temp_name2 Xd65
   temp_expr2 (r+(cb-1)*b)/cb
   expr0 Xd65
   expr1 (g+(cg-1)*Xd65)/cg
   expr2 b
   name Expression47
   label "X'Y'Z (D65)\nto\nXYZ (D65)"
   note_font "Bitstream Vera Sans"
   xpos 70
   ypos 188
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
push $Nf9e4d00
  Expression {
   expr0 "(cb*r) - ((cb-1)*b)"
   expr1 "(cg*g) - ((cg-1)*r)"
   expr2 b
   name Expression4
   label "XYZ (D65)\nto\nX'Y'Z (D65)"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 91
   addUserKnob {20 User}
   addUserKnob {7 cb R 0 2}
   cb 1.15
   addUserKnob {7 cg}
   cg 0.66
  }
  ColorMatrix {
   matrix {
       {0.41478972 0.579999 0.014648}
       {-0.20151 1.120649 0.0531008}
       {-0.0166008 0.2648 0.6684799}
     }
   name ColorMatrix8
   label "X'Y'Z (D65)\nto\nLMS"
   note_font "Bitstream Vera Sans"
   xpos -150
   ypos 188
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -40
   ypos 350
  }
  Output {
   name Output
   xpos -40
   ypos 446
  }
 end_group
 ColorMatrix {
  matrix {
      {{parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix}}
      {{parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix}}
      {{parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix} {parent.SOURCE_GAMUT_GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to \[value parent.src_gamut]"
  xpos -40
  ypos 1909
  disable {{parent.compress_only}}
 }
 Dot {
  name Dot7
  label " OUTPUT GAMUT"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 1986
 }
 Output {
  name Output
  xpos -40
  ypos 2121
 }
push $Nf90f960
 Group {
  name SoftCompress16
  label "direction: \[knob direction]"
  xpos 1023
  ypos 1394
  addUserKnob {20 SoftCompress}
  addUserKnob {7 slope t "The softness of the compressing curve's slope. 0 is a clamp."}
  slope {{parent.SoftCompress15.slope}}
  addUserKnob {7 threshold t "The minimum threshold. Values below this number will not be affected." R 0 2}
  threshold {{parent.SoftCompress15.threshold}}
  addUserKnob {7 limit t "The asymptotic maximum value. For example, the value that inf becomes." R 0 2}
  limit {{parent.SoftCompress15.limit}}
  addUserKnob {4 direction M {forward inverse}}
  direction inverse
 }
  Input {
   inputs 0
   name InputMask
   xpos -590
   ypos 806
   number 1
  }
  Input {
   inputs 0
   name Input
   xpos -810
   ypos 494
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -776
   ypos 546
  }
set Nfa58b70 [stack 0]
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 threshold
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r : (pow(sl, 2) + 2 * sl * th - 2 * sl * r + pow(th, 2) - th * r + lim * r)/(th + lim - r)"
   expr1 "g < th + sl ? g : (pow(sl, 2) + 2 * sl * th - 2 * sl * g + pow(th, 2) - th * g + lim * g)/(th + lim - g)"
   expr2 "b < th + sl ? b : (pow(sl, 2) + 2 * sl * th - 2 * sl * b + pow(th, 2) - th * b + lim * b)/(th + lim - b)"
   name SoftCompress_inverse
   xpos -700
   ypos 638
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
push $Nfa58b70
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 "min(threshold, limit)"
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r :  th + (-1 / ((r - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr1 "g < th + sl ? g :  th + (-1 / ((g - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr2 "b < th + sl ? b :  th + (-1 / ((b - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   name SoftCompress
   xpos -920
   ypos 638
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch1
   xpos -810
   ypos 710
  }
push $Nfa58b70
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 546
  }
  Dot {
   name Dot3
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 810
  }
  NodeWrapper {
   inputs 2+1
   channels rgb
   name NodeWrapper1
   xpos -810
   ypos 806
  }
  Output {
   name Output
   xpos -810
   ypos 926
  }
 end_group
push 0
 Switch {
  inputs 2
  which {{parent.invert}}
  name Switch_Inverse1
  xpos 1023
  ypos 1482
 }
push $Nf90f960
 CurveTool {
  operation "Max Luma Pixel"
  ROI {0 0 {input.width} {input.height}}
  autocropdata {0 0 {input.width} {input.height}}
  maxlumapixdata {{curve x1 478 x14 1800 x28 564} {curve x1 364 x14 436 x28 301}}
  maxlumapixvalue {{curve x1 329576.0312 x14 3.869687557 x28 4.389913082} {curve x1 1.28495717 x14 4.130000114 x28 0.3682569563} {curve x1 0.4011462331 x14 3.160937548 x28 13.19165993}}
  minlumapixdata {{curve x1 145 x14 380 x28 0} {curve x1 425 x14 0 x28 0}}
  minlumapixvalue {{curve x1 2.707561186e-25 x14 0 x28 1.144201624e-24} {curve x1 0 x14 0 x28 0} {curve x1 0 x14 0 x28 0}}
  name CT
  xpos 320
  ypos 1424
 }
 Group {
  inputs 0
  name SoftCompress1
  label "direction: \[knob direction]"
  xpos 66
  ypos 1424
  addUserKnob {20 SoftCompress}
  addUserKnob {7 slope t "The softness of the compressing curve's slope. 0 is a clamp."}
  slope 0.945
  addUserKnob {7 threshold t "The minimum threshold. Values below this number will not be affected." R 0 2}
  threshold 0.57
  addUserKnob {7 limit t "The asymptotic maximum value. For example, the value that inf becomes." R 0 2}
  limit 1.07
  addUserKnob {4 direction M {forward inverse}}
 }
  Input {
   inputs 0
   name InputMask
   xpos -590
   ypos 806
   number 1
  }
  Input {
   inputs 0
   name Input
   xpos -810
   ypos 494
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -776
   ypos 546
  }
set Nfacf9b0 [stack 0]
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 threshold
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r : (pow(sl, 2) + 2 * sl * th - 2 * sl * r + pow(th, 2) - th * r + lim * r)/(th + lim - r)"
   expr1 "g < th + sl ? g : (pow(sl, 2) + 2 * sl * th - 2 * sl * g + pow(th, 2) - th * g + lim * g)/(th + lim - g)"
   expr2 "b < th + sl ? b : (pow(sl, 2) + 2 * sl * th - 2 * sl * b + pow(th, 2) - th * b + lim * b)/(th + lim - b)"
   expr3 "a < th + sl ? a : (pow(sl, 2) + 2 * sl * th - 2 * sl * a + pow(th, 2) - th * a + lim * a)/(th + lim - a)"
   name SoftCompress_inverse
   xpos -702
   ypos 636
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
push $Nfacf9b0
  Expression {
   temp_name0 sl
   temp_expr0 "(1-slope)*(max(0, limit-threshold))"
   temp_name1 th
   temp_expr1 "min(threshold, limit)"
   temp_name2 lim
   temp_expr2 "max(0, (limit-threshold))"
   expr0 "r < th + sl ? r :  th + (-1 / ((r - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr1 "g < th + sl ? g :  th + (-1 / ((g - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr2 "b < th + sl ? b :  th + (-1 / ((b - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   expr3 "a < th + sl ? a :  th + (-1 / ((a - th - sl) / (lim - sl) + 1) + 1) * (lim - sl) + sl"
   name SoftCompress
   xpos -921
   ypos 639
   addUserKnob {20 Params_tab l Params}
   addUserKnob {7 slope}
   slope {{parent.slope}}
   addUserKnob {7 threshold R 0 25}
   threshold {{parent.threshold}}
   addUserKnob {7 limit R 0 25}
   limit {{parent.limit}}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name SwitchDirection
   xpos -810
   ypos 709
  }
push $Nfacf9b0
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 546
  }
  Dot {
   name Dot3
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -996
   ypos 810
  }
  NodeWrapper {
   inputs 2+1
   channels rgba
   name NodeWrapper1
   xpos -810
   ypos 806
  }
  Output {
   name Output
   xpos -810
   ypos 926
  }
 end_group
 Group {
  inputs 0
  name SoftclipExpression1
  label "Type B"
  note_font "Bitstream Vera Sans"
  xpos 720
  ypos 1440
  addUserKnob {20 User}
  addUserKnob {18 threshold}
  threshold {0 0 0}
  addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {3 direction}
  addUserKnob {7 mix}
  mix 1
 }
  Input {
   inputs 0
   name Input1
   xpos -284
   ypos 147
  }
set Nfb200f0 [stack 0]
  Expression {
   temp_name0 atanh_r
   temp_expr0 log((1+(threshold.r-r)/threshCompl.r)/(1-(threshold.r-r)/threshCompl.r))/2
   temp_name1 atanh_g
   temp_expr1 log((1+(threshold.g-g)/threshCompl.g)/(1-(threshold.g-g)/threshCompl.g))/2
   temp_name2 atanh_b
   temp_expr2 log((1+(threshold.b-b)/threshCompl.b)/(1-(threshold.b-b)/threshCompl.b))/2
   expr0 "r > threshold.r ? threshold.r*(-atanh_r) + atanh_r + threshold.r : r"
   expr1 "g > threshold.g ? threshold.g*(-atanh_g) + atanh_g + threshold.g : g"
   expr2 "b > threshold.b ? threshold.b*(-atanh_b) + atanh_b + threshold.b : b"
   expr3 a
   name Expression12
   label inverse
   xpos -204
   ypos 272
   addUserKnob {20 User}
   addUserKnob {18 threshold}
   threshold {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {18 threshCompl}
   threshCompl {{threshold.r-1} {threshold.g-1} {threshold.b-1}}
   addUserKnob {6 threshCompl_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshCompl_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
push $Nfb200f0
  Expression {
   expr0 "r > threshold.r ? threshold.r + threshCompl.r * tanh((r - threshold.r) / threshCompl.r) : r"
   expr1 "g > threshold.g ? threshold.g + threshCompl.g * tanh((g - threshold.g) / threshCompl.g) : g"
   expr2 "b > threshold.b ? threshold.b + threshCompl.b * tanh((b - threshold.b) / threshCompl.b) : b"
   expr3 a
   name Expression3
   label forward
   xpos -376
   ypos 269
   addUserKnob {20 User}
   addUserKnob {18 threshold}
   threshold {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {18 threshCompl}
   threshCompl {{1-threshold.r} {1-threshold.g} {1-threshold.b}}
   addUserKnob {6 threshCompl_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshCompl_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 356
  }
  Output {
   name Output1
   xpos -287
   ypos 463
  }
 end_group
 Group {
  inputs 0
  name SoftclipExpression8
  label "Type A"
  note_font "Bitstream Vera Sans"
  xpos 590
  ypos 1442
  addUserKnob {20 User}
  addUserKnob {18 threshold}
  threshold {0 0 0}
  addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {3 direction}
  addUserKnob {7 mix}
  mix 1
 }
  Input {
   inputs 0
   name Input1
   xpos -284
   ypos 147
  }
set Nfb5dde0 [stack 0]
  Expression {
   temp_name0 one_minus_e
   temp_expr0 "1 - pow(10,-15)"
   temp_name1 maxr
   temp_expr1 "(pow(threshold.r, 2) - 2 * threshold.r * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name2 maxg
   temp_expr2 "(pow(threshold.g, 2) - 2 * threshold.g * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   temp_name3 maxb
   temp_expr3 "(pow(threshold.b, 2) - 2 * threshold.b * one_minus_e + one_minus_e ) / ( 1 - one_minus_e )"
   expr0 " threshold.r < 1 ? r >= 1 ? maxr : r > threshold.r ? (pow(threshold.r, 2) - 2 * threshold.r * r + r ) / ( 1 - r ) : r : r"
   expr1 " threshold.g < 1 ? g >= 1 ? maxg : g > threshold.g ? (pow(threshold.g, 2) - 2 * threshold.g * g + g ) / ( 1 - g ) : g : g"
   expr2 " threshold.b < 1 ? b >= 1 ? maxb : b > threshold.b ? (pow(threshold.b, 2) - 2 * threshold.b * b + b ) / ( 1 - b ) : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression2
   label inverse
   xpos -222
   ypos 258
   addUserKnob {20 User}
   addUserKnob {18 threshold}
   threshold {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
push $Nfb5dde0
  Expression {
   expr0 "threshold.r < 1 ? r > threshold.r ? ( -1 / (( r - threshold.r ) / ( 1 - threshold.r ) +1 ) +1 ) * ( 1 - threshold.r ) + threshold.r : r : r"
   expr1 "threshold.g < 1 ? g > threshold.g ? ( -1 / (( g - threshold.g ) / ( 1 - threshold.g ) +1 ) +1 ) * ( 1 - threshold.g ) + threshold.g : g : g"
   expr2 "threshold.b < 1 ? b > threshold.b ? ( -1 / (( b - threshold.b ) / ( 1 - threshold.b ) +1 ) +1 ) * ( 1 - threshold.b ) + threshold.b : b : b"
   expr3 a
   mix {{parent.mix}}
   name Expression1
   label forward
   xpos -350
   ypos 258
   addUserKnob {20 User}
   addUserKnob {18 threshold_1 l threshold}
   threshold_1 {{parent.threshold.r} {parent.threshold.g} {parent.threshold.b}}
   addUserKnob {6 threshold_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
   addUserKnob {6 threshold_1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  }
  Switch {
   inputs 2
   which {{parent.direction}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos -287
   ypos 351
  }
  Output {
   name Output1
   xpos -287
   ypos 463
  }
 end_group
end_group
Group {
 inputs 0
 name VIEWER_INPUT
 tile_color 0xa57aaaff
 label Rec.709
 xpos 9227
 ypos 7232
 addUserKnob {20 ACES_OutputTransform_tab l "ACES OutputTransform"}
 addUserKnob {35 presets t "display output presets." M {display/sRGB "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 0 limiting_pri 0 eotf 0 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 1 legal_range 0 label \"sRGB\"\}" "display/sRGB D60 sim." "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 0 limiting_pri 0 eotf 0 stretch_black 0 d60_sim 1 force_d65_cat 0 dark_to_dim 1 legal_range 0 label \"sRGB D60 sim.\"\}" display/Rec.709 "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 0 limiting_pri 0 eotf 1 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 1 legal_range 0 label \"Rec.709\"\}" "display/Rec.709 D60 sim." "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 0 limiting_pri 0 eotf 1 stretch_black 0 d60_sim 1 force_d65_cat 0 dark_to_dim 1 legal_range 0 label \"Rec.709 D60 sim.\"\}" display/Rec.2020 "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 1 limiting_pri 1 eotf 1 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 1 legal_range 0 label \"Rec.2020\"\}" display/P3D60 "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 4 limiting_pri 4 eotf 4 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D60\"\}" display/P3D65 "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 2 limiting_pri 2 eotf 4 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65\"\}" "display/P3D65 D60 sim." "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 2 limiting_pri 2 eotf 4 stretch_black 0 d60_sim 1 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 D60 sim.\"\}" display/P3DCI "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 3 limiting_pri 3 eotf 4 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3DCI\"\}" "display/P3DCI D60 sim." "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 3 limiting_pri 3 eotf 4 stretch_black 0 d60_sim 1 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3DCI D60 sim.\"\}" "display/P3DCI D65 sim." "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 3 limiting_pri 3 eotf 4 stretch_black 0 d60_sim 0 force_d65_cat 1 dark_to_dim 0 legal_range 0 label \"P3DCI D65 sim.\"\}" display/DCDM "knobs this \{lum \{0.02 4.8 48\} override_ssts_params 0 use_c9 1 display_pri 7 limiting_pri 7 eotf 5 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"DCDM\"\}" "display/P3D65 ST2084 108nits 7.2nits" "knobs this \{lum \{0.0001 7.2 108\} override_ssts_params 0 use_c9 0 display_pri 2 limiting_pri 2 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 ST2084 108nits 7.2nits\"\}" "display/P3D65 ST2084 1000nits 15nits" "knobs this \{lum \{0.0001 15 1000\} override_ssts_params 0 use_c9 0 display_pri 2 limiting_pri 2 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 ST2084 1000nits 15nits\"\}" "display/P3D65 ST2084 2000nits 15nits" "knobs this \{lum \{0.0001 15 2000\} override_ssts_params 0 use_c9 0 display_pri 2 limiting_pri 2 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 ST2084 2000nits 15nits\"\}" "display/P3D65 ST2084 2000nits 15nits" "knobs this \{lum \{0.0001 15 2000\} override_ssts_params 0 use_c9 0 display_pri 2 limiting_pri 2 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 ST2084 2000nits 15nits\"\}" "display/P3D65 ST2084 4000nits 15nits" "knobs this \{lum \{0.0001 15 4000\} override_ssts_params 0 use_c9 0 display_pri 2 limiting_pri 2 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"P3D65 ST2084 4000nits 15nits\"\}" display/Rec2020_HLG_1000nits_15nits "knobs this \{lum \{0.0001 15 1000\} override_ssts_params 0 use_c9 0 display_pri 1 limiting_pri 1 eotf 7 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"Rec2020_HLG_1000nits_15nits\"\}" display/Rec2020_ST2084_1000nits_15nits "knobs this \{lum \{0.0001 15 1000\} override_ssts_params 0 use_c9 0 display_pri 1 limiting_pri 1 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"Rec2020_ST2084_1000nits_15nits\"\}" display/Rec2020_ST2084_2000nits_15nits "knobs this \{lum \{0.0001 15 2000\} override_ssts_params 0 use_c9 0 display_pri 1 limiting_pri 1 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"Rec2020_ST2084_2000nits_15nits\"\}" display/Rec2020_ST2084_4000nits_15nits "knobs this \{lum \{0.0001 15 4000\} override_ssts_params 0 use_c9 0 display_pri 1 limiting_pri 1 eotf 6 stretch_black 1 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"Rec2020_ST2084_4000nits_15nits\"\}" display/OCES "knobs this \{lum \{0.0001 4.8 10000\} override_ssts_params 0 use_c9 0 display_pri 6 limiting_pri 6 eotf 9 stretch_black 0 d60_sim 0 force_d65_cat 0 dark_to_dim 0 legal_range 0 label \"OCES\"\}" "" ""}}
 addUserKnob {26 ""}
 addUserKnob {26 display_label l " " T "<b>Display Settings</b>"}
 addUserKnob {78 lum l luminance t "<b>SSTS Display Luminance</b>: \ny_min y_mid y_max\n\nAccording to Zach Lewis's ACES_OT\nhttps://gist.github.com/zachlewis/786c0be941868644c993fde1c3515c2c\n\n<b>Standard Cinema</b>: \n0.02 4.8 48\n<b>Dolby Cinema</b>: \n0.0001 7.2 108\n<b>Dolby Pulsar</b>: \n0.005 15 4000\n<b>Dolby PRR-4220</b>: \n0.005 10 600\n<b>Sony BVM-X300</b>: \n0.0001 10 1000\n<b>ACES OCES</b>: \n0.0001 4.8 10000\n\n" n 3}
 lum {0.02 4.8 48}
 addUserKnob {20 ssts_params_grp l "SSTS Parameters" n 1}
 addUserKnob {6 override_ssts_params l "override ssts params" t "Enable overrides of SSTS params.\n\nOtherwise the values will be calculated automatically by the algorithm." +STARTLINE}
 override_ssts_params true
 addUserKnob {35 presets_ssts_param l presets t "If you want to override the default SSTS parameters and play around, here are some useful starting points." M {contrast/default "knobs this \{override_ssts_params 0 pctLow 0.35 pctHigh 0.89 slope \{0 1.5 0.\} exposure 0.0 use_c9 0\}" contrast/sdr "knobs this \{override_ssts_params 1 pctLow 0.35 pctHigh 0.89 slope \{0.1 1.6 0.01\} exposure 0.0 use_c9 0\}" contrast/high "knobs this \{override_ssts_params 1 pctLow 0.2 pctHigh 0.89 slope \{0.28 1.75 0.01\} exposure 0.0 use_c9 0\}" contrast/med "knobs this \{override_ssts_params 1 pctLow 0.40 pctHigh 0.89 slope \{0.38 1.3 0.01\} exposure 0.0 use_c9 0\}" contrast/med-low "knobs this \{override_ssts_params 1 pctLow 0.40 pctHigh 0.80 slope \{0.38 1.42 0.01\} exposure 0.0 use_c9 0\}" contrast/low "knobs this \{override_ssts_params 1 pctLow 0.40 pctHigh 0.80 slope \{0.38 1.2 0.01\} exposure 0.0 use_c9 0\}" ""}}
 addUserKnob {7 exposure R -5 5}
 addUserKnob {7 pctLow l knee}
 pctLow 0.4
 addUserKnob {7 pctHigh l shoulder}
 pctHigh 0.8
 addUserKnob {78 slope n 3}
 slope {0.38 1.42 0.01}
 addUserKnob {20 endGroup n -1}
 addUserKnob {6 use_c9 l "use SegmentedSpline_c9" t "In ACES 1.1 the Output Transform was re-written for HDR tonescales. \n\nIn ACES 1.1, HDR transforms use the new SSTS (Single Stage Tone Scale), while SDR transforms continue to use the old SegmentedSpline_c5 -> OCES -> SegmentedSpline_c9 -> ODT transform.\n\nIf this is enabled, the SegmentedSpline_c9 transform is used to maintain compatibility with the ACES SDR output transforms and enable a 1:1 match with the AMPAS CTL.\n\nIf you are curious, turn use_c9 off and play around with the SSTS Parameters." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {4 display_pri l "display pri" t "Display encoding primaries." M {Rec709 Rec2020 P3D65 P3DCI P3D60 ACEScg ACES XYZ}}
 addUserKnob {4 limiting_pri l "limiting pri" t "Limiting primaries for the output transform." -STARTLINE M {Rec709 Rec2020 P3D65 P3DCI P3D60 ACEScg ACES XYZ}}
 addUserKnob {4 eotf l EOTF t "Electrical to Optical Transfer Function of the monitor." M {sRGB BT.1886 "Gamma 2.2" "Gamma 2.4" "Gamma 2.6" DCDM "ST-2084 (PQ)" HLG Linear OCES ""}}
 eotf BT.1886
 addUserKnob {6 stretch_black l "stretch black" t "For hdr outputs: stretch black luminance to a PQ code value of 0" +STARTLINE}
 addUserKnob {6 d60_sim l "d60 sim" t "d60 whitepoint simulation." +STARTLINE}
 addUserKnob {6 force_d65_cat l "force d60 to d65 cat" -STARTLINE}
 addUserKnob {6 dark_to_dim l "dark to dim surround" t "Apply gamma adjustment to compensate for \"Dark to Dim\" surround. For SDR outputs only." +STARTLINE}
 dark_to_dim true
 addUserKnob {6 legal_range l "legal range" t "Output legal range." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 blinkscript_options_label l " " T <b>BlinkScript}
 addUserKnob {6 use_gpu l "use gpu" t "Enable GPU processing for the blinkscript nodes" +STARTLINE}
 use_gpu true
 addUserKnob {6 vectorize t "Vectorize on the CPU for blinkscript nodes" -STARTLINE}
 vectorize true
}
 BackdropNode {
  inputs 0
  name Electrical_Optical_Transfer_Function
  tile_color 0x151515ff
  label "ACESlib.OutputTransforms.ctl : 185\n// EOTF"
  note_font_size 12
  xpos -2025
  ypos 2294
  bdwidth 3391
  bdheight 740
  z_order -10
 }
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x272727ff
  label "HDR EOTFs"
  note_font_size 42
  xpos 425
  ypos 2379
  bdwidth 910
  bdheight 617
  z_order -5
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x272727ff
  label "SDR EOTFs"
  note_font_size 42
  xpos -1158
  ypos 2384
  bdwidth 1436
  bdheight 608
  z_order -5
 }
 BackdropNode {
  inputs 0
  name AP1_to_XYZ
  tile_color 0x555b5cff
  label "ACESlib.OutputTransforms.ctl : 90\n// Rendering primaries to XYZ\n"
  note_font_size 12
  xpos -1400
  ypos 906
  bdwidth 380
  bdheight 156
 }
 BackdropNode {
  inputs 0
  name AP1_to_XYZ1
  tile_color 0x555a5cff
  label "// Apply desaturation to compensate for luminance difference\nlinearCV = mult_f3_f33( linearCV, ODT_SAT_MAT);\n( SDR only)"
  note_font_size 12
  xpos -1412
  ypos 669
  bdwidth 439
  bdheight 186
 }
 BackdropNode {
  inputs 0
  name D60_whitepoint_simulation
  tile_color 0x232323ff
  label "ACESlib.OutputTransforms.ctl : 150\n// Scale to avoid clipping when device calibration is different from D60. \n// To simulate D60, unequal code values are sent to the display.\n"
  note_font_size 12
  xpos -1399
  ypos 176
  bdwidth 818
  bdheight 463
 }
 BackdropNode {
  inputs 0
  name Luminance_to_Linear_Code_Values
  tile_color 0x272727ff
  label "ACESlib.OutputTransforms.ctl : 87\n/*  Scale absolute luminance to linear code value  */\n"
  note_font_size 12
  xpos -1367
  ypos -50
  bdwidth 315
  bdheight 148
 }
 BackdropNode {
  inputs 0
  name Output_Color_Encoding_Specification
  tile_color 0x1d1d1dff
  label "<font size=12>OCES\n<font size=0.1>\n- ACES Output Output Color Encoding Specification \n- An idealized reference display with 0.0001 / 4.8 / 10000 luma\n w/ ACES AP0 Primaries."
  note_font_size 27.4
  xpos -1833
  ypos 2379
  bdwidth 367
  bdheight 377
 }
 BackdropNode {
  inputs 0
  name Output_Legal_Range
  tile_color 0x272727ff
  label "ACESlib.OutputTransforms.ctl : 216\n"
  note_font_size 12
  xpos -1369
  ypos 3128
  bdwidth 318
  bdheight 176
 }
 BackdropNode {
  inputs 0
  name Single_Stage_Tone_Scale
  tile_color 0x272727ff
  label "<b>Single Stage Tone Scale : ACESlib.OutputTransforms.ctl : 82</b><pre>// Apply the tonescale independently in rendering-space RGB\nfloat rgbPost\[3] = ssts_f3( rgbPre, PARAMS);\n\nIf output is SDR, output OCES from SSTS and use SegmentedSpline_c9."
  note_font_size 12
  xpos -1502
  ypos -653
  bdwidth 609
  bdheight 533
 }
 BackdropNode {
  inputs 0
  name clamp_negatives
  tile_color 0x272727ff
  label "ACESlib.OutputTransforms.ctl : 174\n// Clip values < 0 (i.e. projecting outside the display primaries)\nNote: Also clamping values > 1 here."
  note_font_size 12
  xpos -1393
  ypos 2087
  bdwidth 386
  bdheight 120
 }
 BackdropNode {
  inputs 0
  name dim_surround_gamma_adjustment
  tile_color 0x272727ff
  label "ACESlib.OutputTransforms.ctl : 92\n// Apply gamma adjustment to compensate for dim surround\n"
  note_font_size 12
  xpos -1407
  ypos 1063
  bdwidth 395
  bdheight 258
 }
 BackdropNode {
  inputs 0
  name limit_primaries
  tile_color 0x555a5cff
  label "ACESlib.OutputTransforms.ctl : 130\n// Gamut limit to limiting primaries\n"
  note_font_size 12
  xpos -1408
  ypos 1655
  bdwidth 396
  bdheight 194
 }
 BackdropNode {
  inputs 0
  name limit_primaries1
  tile_color 0x555a5cff
  label "ACESlib.OutputTransforms.ctl : 144\n// CIE XYZ to display encoding primaries\n"
  note_font_size 12
  xpos -1402
  ypos 1892
  bdwidth 384
  bdheight 151
 }
 BackdropNode {
  inputs 0
  name limit_primaries2
  tile_color 0x555a5cff
  label "ACESlib.OutputTransforms.ctl : 130\n    // Apply CAT from ACES white point to assumed observer adapted white point\n    // TODO: Needs to expand from just supporting D60 sim to allow for any\n    // observer adapted white point.\n"
  note_font_size 12
  xpos -1407
  ypos 1337
  bdwidth 467
  bdheight 301
 }
 BackdropNode {
  inputs 0
  name rrt_sweeteners_
  tile_color 0x555a5cff
  label "<b>RRT Sweeteners : ACESlib.OutputTransforms.ctl : 79</b><pre>// RRT sweeteners\nfloat rgbPre\[3] = rrt_sweeteners( in);\n"
  note_font_size 18
  xpos -1469
  ypos -1234
  bdwidth 519
  bdheight 548
 }
 Input {
  inputs 0
  name Input
  xpos -1250
  ypos -1450
 }
 AddChannels {
  channels rgba
  name AddChannels
  xpos -1250
  ypos -1378
 }
 ColorMatrix {
  matrix {
      {1.451439381 -0.2365107685 -0.2149285674}
      {-0.07655383646 1.176229835 -0.09967593104}
      {0.008316127583 -0.0060324613 0.997716248}
    }
  invert true
  name ColorMatrix4
  label "ACEScg to ACES "
  xpos -1250
  ypos -1352
 }
 Dot {
  name Dot7
  label " ACES 2065-1 IN"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos -1302
 }
 BlinkScript {
  recompileCount 87
  ProgramGroup 1
  KernelDescription "2 \"ACES_rrt_sweetener_glow_module\" iterate pixelWise 75f48b280734753b8fc802d2ab2e3ba5f31e66e541fc1473537319fbfb99939c 2 \"src\" Read Point \"dst\" Write Point 3 \"RRT_GLOW_GAIN\" Float 1 AAAAAA== \"RRT_GLOW_MID\" Float 1 AAAAAA== \"invert\" Bool 1 AA== 3 \"RRT_GLOW_GAIN\" 1 1 \"RRT_GLOW_MID\" 1 1 \"invert\" 1 1 0"
  kernelSource "kernel ACES_rrt_sweetener_glow_module : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\nparam:\n  // User controllable parameters\n  float RRT_GLOW_GAIN;\n  float RRT_GLOW_MID;\n  bool invert;\n  // \"Glow\" module constants\n  // RRT_GLOW_GAIN = 0.05;\n  // RRT_GLOW_MID = 0.08;\n\n\n  float3 mult_f_f3( float x, float3 rgb) \{\n    return float3(rgb.x*x, rgb.y*x, rgb.z*x);\n  \}\n\n  float min_f3(float3 a) \{\n    return min( a.x, min( a.y, a.z));\n  \}\n\n  float max_f3(float3 a) \{\n    return max( a.x, max( a.y, a.z));\n  \}\n\n  float rgb_2_saturation( float3 rgb ) \{\n    return ( max( max_f3(rgb), 1e-10) - max( min_f3(rgb), 1e-10)) / max( max_f3(rgb), 1e-2);\n  \}\n\n  float sigmoid_shaper( float x) \{\n    float t = max( float(1. - fabs( float(x / 2.))), float(0));\n    float y = 1. + sign(float(x)) * (1. - t * t);\n    return y / 2.;\n  \}\n\n  float rgb_2_yc( float3 rgb, float ycRadiusWeight) \{\n    // keyword arguments don't work with blink.. ycRadiusWeight default if not specified was 1.75\n    float r = rgb.x; \n    float g = rgb.y; \n    float b = rgb.z;\n    float chroma = sqrt(float(b*(b-g)+g*(g-r)+r*(r-b)));\n    return ( b + g + r + ycRadiusWeight * chroma) / 3.;\n  \}\n\n  // ------- Glow module functions\n  float glow_fwd( float ycIn, float glowGainIn, float glowMid) \{\n     float glowGainOut;\n     if (ycIn <= 2./3. * glowMid) \{\n       glowGainOut = glowGainIn;\n     \} else if ( ycIn >= 2. * glowMid) \{\n       glowGainOut = 0.;\n     \} else \{\n       glowGainOut = glowGainIn * (glowMid / ycIn - 1./2.);\n     \}\n     return glowGainOut;\n  \}\n\n  float glow_inv( float ycOut, float glowGainIn, float glowMid) \{\n      float glowGainOut;\n      if (ycOut <= ((1 + glowGainIn) * 2./3. * glowMid)) \{\n        glowGainOut = -glowGainIn / (1 + glowGainIn);\n      \} else if ( ycOut >= (2. * glowMid)) \{\n        glowGainOut = 0.;\n      \} else \{\n        glowGainOut = glowGainIn * (glowMid / ycOut - 1./2.) / (glowGainIn / 2. - 1.);\n      \}\n      return glowGainOut;\n  \}\n\n  void process() \{\n    float3 aces = float3(src().x, src().y, src().z);\n\n    // --- Glow module --- //\n    float saturation = rgb_2_saturation(aces);\n    float s = sigmoid_shaper( (saturation - 0.4) / 0.2);\n    float ycIn = rgb_2_yc( aces, 1.75);\n\n    float glow;\n    if ( invert == 0 ) \{\n      glow = 1. + glow_fwd( ycIn, RRT_GLOW_GAIN * s, RRT_GLOW_MID);\n      aces = mult_f_f3( glow, aces);\n    \}\n    else \{\n      glow = 1. + glow_inv( ycIn, RRT_GLOW_GAIN * s, RRT_GLOW_MID);\n      aces = mult_f_f3( ( glow), aces);\n    \}\n    \n    dst() = float4(aces.x, aces.y, aces.z, src().w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  vectorize {{parent.vectorize}}
  rebuild ""
  ACES_rrt_sweetener_glow_module_RRT_GLOW_GAIN 0.05
  ACES_rrt_sweetener_glow_module_RRT_GLOW_MID 0.08
  rebuild_finalise ""
  name rrt_sweetener_glow_module
  xpos -1250
  ypos -1096
  disable true
 }
 BlinkScript {
  recompileCount 7
  ProgramGroup 1
  KernelDescription "2 \"ACES_rrt_sweeteners\" iterate pixelWise 9f98be960666c115276f1fde84f0fa459ebb6c3833f44a05252af4ebb10f63b4 2 \"src\" Read Point \"dst\" Write Point 5 \"RRT_RED_SCALE\" Float 1 AAAAAA== \"RRT_RED_PIVOT\" Float 1 AAAAAA== \"RRT_RED_HUE\" Float 1 AAAAAA== \"RRT_RED_WIDTH\" Float 1 AAAAAA== \"invert\" Bool 1 AA== 5 \"RRT_RED_SCALE\" 1 1 \"RRT_RED_PIVOT\" 1 1 \"RRT_RED_HUE\" 1 1 \"RRT_RED_WIDTH\" 1 1 \"invert\" 1 1 0"
  kernelSource "kernel ACES_rrt_sweeteners : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\nparam:\n  // User controllable parameters\n  float RRT_RED_SCALE;\n  float RRT_RED_PIVOT;\n  float RRT_RED_HUE;\n  float RRT_RED_WIDTH;\n  bool invert;\n\n  // // Red modifier constants\n  // RRT_RED_SCALE = 0.82;\n  // RRT_RED_PIVOT = 0.03;\n  // RRT_RED_HUE = 0.;\n  // RRT_RED_WIDTH = 135.;\n\n\n  float min_f3(float3 a) \{\n    return min( a.x, min( a.y, a.z));\n  \}\n\n  float max_f3(float3 a) \{\n    return max( a.x, max( a.y, a.z));\n  \}\n\n  float rgb_2_saturation( float3 rgb ) \{\n    return ( max( max_f3(rgb), 1e-10) - max( min_f3(rgb), 1e-10)) / max( max_f3(rgb), 1e-2);\n  \}\n\n  float sigmoid_shaper( float x) \{\n    float t = max( float(1. - fabs( float(x / 2.))), float(0));\n    float y = 1. + sign(float(x)) * (1. - t * t);\n    return y / 2.;\n  \}\n\n  float rgb_2_yc( float3 rgb, float ycRadiusWeight) \{\n    // keyword arguments don't work with blink.. ycRadiusWeight default if not specified was 1.75\n    float r = rgb.x; \n    float g = rgb.y; \n    float b = rgb.z;\n    float chroma = sqrt(float(b*(b-g)+g*(g-r)+r*(r-b)));\n    return ( b + g + r + ycRadiusWeight * chroma) / 3.;\n  \}\n\n  // ------- Glow module functions\n  float glow_fwd( float ycIn, float glowGainIn, float glowMid) \{\n     float glowGainOut;\n     if (ycIn <= 2./3. * glowMid) \{\n       glowGainOut = glowGainIn;\n     \} else if ( ycIn >= 2. * glowMid) \{\n       glowGainOut = 0.;\n     \} else \{\n       glowGainOut = glowGainIn * (glowMid / ycIn - 1./2.);\n     \}\n     return glowGainOut;\n  \}\n\n  // Transformations from RGB to other color representations\n  float rgb_2_hue( float3 rgb) \n  \{\n    // Returns a geometric hue angle in degrees (0-360) based on RGB values.\n    // For neutral colors, hue is undefined and the function will return a quiet NaN value.\n    float hue;\n    if (rgb.x == rgb.y && rgb.y == rgb.z) \{\n      hue = 0.; // RGB triplets where RGB are equal have an undefined hue\n    \} else \{\n      hue = (180./3.14159265359) * atan2( sqrt(3)*(rgb.y-rgb.z), 2*rgb.x-rgb.y-rgb.z);\n    \}\n    if (hue < 0.) hue = hue + 360.;\n    return hue;\n  \}\n\n  float center_hue( float hue, float centerH) \{\n    float hueCentered = hue - centerH;\n    if (hueCentered < -180.) hueCentered = hueCentered + 360.;\n    else if (hueCentered > 180.) hueCentered = hueCentered - 360.;\n    return hueCentered;\n  \}\n\n  float cubic_basis_shaper( float x, float w) \{\n    float M\[4]\[4] = \{ \{ -1./6,  3./6, -3./6,  1./6 \},\n                      \{  3./6, -6./6,  3./6,  0./6 \},\n                      \{ -3./6,  0./6,  3./6,  0./6 \},\n                      \{  1./6,  4./6,  1./6,  0./6 \} \};\n    \n    double knots\[5] = \{ -w/2.,\n                       -w/4.,\n                       0.,\n                       w/4.,\n                       w/2. \};\n    float y = 0;\n    if ((x > knots\[0]) && (x < knots\[4])) \{  \n      float knot_coord = (x - knots\[0]) * 4./w;  \n      int j = knot_coord;\n      float t = knot_coord - j;\n      float monomials\[4] = \{ t*t*t, t*t, t, 1. \};\n      // (if/else structure required for compatibility with CTL < v1.5.)\n      if ( j == 3) \{\n        y = monomials\[0] * M\[0]\[0] + monomials\[1] * M\[1]\[0] + \n            monomials\[2] * M\[2]\[0] + monomials\[3] * M\[3]\[0];\n      \} else if ( j == 2) \{\n        y = monomials\[0] * M\[0]\[1] + monomials\[1] * M\[1]\[1] + \n            monomials\[2] * M\[2]\[1] + monomials\[3] * M\[3]\[1];\n      \} else if ( j == 1) \{\n        y = monomials\[0] * M\[0]\[2] + monomials\[1] * M\[1]\[2] + \n            monomials\[2] * M\[2]\[2] + monomials\[3] * M\[3]\[2];\n      \} else if ( j == 0) \{\n        y = monomials\[0] * M\[0]\[3] + monomials\[1] * M\[1]\[3] + \n            monomials\[2] * M\[2]\[3] + monomials\[3] * M\[3]\[3];\n      \} else \{\n        y = 0.0;\n      \}\n    \}\n    return y * 3/2.;\n  \}\n\n\n  void process() \{\n    float3 aces = float3(src().x, src().y, src().z);\n\n    float saturation = rgb_2_saturation(aces);\n\n    // --- Red modifier --- //\n    float hue = rgb_2_hue( aces);\n    float centeredHue = center_hue( hue, RRT_RED_HUE);\n    float hueWeight = cubic_basis_shaper( centeredHue, RRT_RED_WIDTH);\n\n    if ( invert == 0 ) \{\n      aces.x = aces.x + hueWeight * saturation * (RRT_RED_PIVOT - aces.x) * (1. - RRT_RED_SCALE);\n    \} \n    else \{ // invert red modifier: note that this is not mathematically perfect\n      float minChan;\n      if (centeredHue < 0) \{ // min_f3(aces) = aces\[1] (i.e. magenta-red)\n        minChan = aces.y;\n      \} else \{ // min_f3(aces) = aces\[2] (i.e. yellow-red)\n        minChan = aces.z;\n      \}\n      float a = hueWeight * (1. - RRT_RED_SCALE) - 1.;\n      float b = aces.x - hueWeight * (RRT_RED_PIVOT + minChan) * (1. - RRT_RED_SCALE);\n      float c = hueWeight * RRT_RED_PIVOT * minChan * (1. - RRT_RED_SCALE);\n      aces.x = ( -b - sqrt( float(b * b - 4. * a * c )) ) / ( 2. * a);\n    \}\n\n    dst() = float4(aces.x, aces.y, aces.z, src().w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  vectorize {{parent.vectorize}}
  rebuild ""
  ACES_rrt_sweeteners_RRT_RED_SCALE 0.82
  ACES_rrt_sweeteners_RRT_RED_PIVOT 0.03
  ACES_rrt_sweeteners_RRT_RED_WIDTH 135
  rebuild_finalise ""
  name rrt_sweetener_red_modifier
  xpos -1250
  ypos -1048
  disable true
 }
 Clamp {
  channels rgb
  maximum_enable false
  name clamp_f3_min
  label "Clamp Negative Values"
  xpos -1250
  ypos -976
  disable true
 }
 ColorMatrix {
  matrix {
      {1.451439381 -0.2365107685 -0.2149285674}
      {-0.07655383646 1.176229835 -0.09967593104}
      {0.008316127583 -0.0060324613 0.997716248}
    }
  name ColorMatrix15
  label "ACES to ACEScg"
  xpos -1250
  ypos -928
 }
 Clamp {
  channels rgb
  maximum 65535
  name clamp_f3_
  label "clamp to HALF_MAX"
  xpos -1250
  ypos -880
  disable true
 }
 Group {
  name GamutCompress_blink4
  label "\[value method] : \[value direction]\ndefaults"
  xpos -1250
  ypos -824
  addUserKnob {20 GamutCompress}
  addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
  method reinhard
  addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
  addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
  use_gpu true
  addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
  threshold 0.2
  addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
  shd_rolloff 0.03
  addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
  addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
  cyan 0.1
  addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
  magenta 0.2
  addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
  yellow 0.1
  addUserKnob {26 ""}
  addUserKnob {4 direction M {forward inverse}}
  addUserKnob {20 info_tab l Info}
  addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
  addUserKnob {20 doc_grp l "" +STARTLINE n 1}
  doc_grp 0
  addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
  addUserKnob {20 endGroup n -1}
  addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  AddChannels {
   name AddChannels
   note_font Helvetica
   xpos -40
   ypos 26
  }
  BlinkScript {
   ProgramGroup 1
   KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
   kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
   useGPUIfAvailable {{parent.use_gpu}}
   rebuild ""
   GamutCompression_threshold {{parent.threshold}}
   GamutCompression_shd_rolloff {{parent.shd_rolloff}}
   GamutCompression_cyan {{parent.cyan}}
   GamutCompression_magenta {{parent.magenta}}
   GamutCompression_yellow {{parent.yellow}}
   GamutCompression_method {{parent.method}}
   GamutCompression_invert {{parent.direction}}
   rebuild_finalise ""
   name GamutCompress
   xpos -40
   ypos 80
  }
  Output {
   name Output
   xpos -40
   ypos 134
  }
 end_group
 ColorMatrix {
  matrix {
      {{"(1.0 - sat) * rgb2Y.x + sat"} {"(1.0 - sat) * rgb2Y.y"} {"(1.0 - sat) * rgb2Y.z"}}
      {{"(1.0 - sat) * rgb2Y.x"} {"(1.0 - sat) * rgb2Y.y + sat"} {"(1.0 - sat) * rgb2Y.z"}}
      {{"(1.0 - sat) * rgb2Y.x"} {"(1.0 - sat) * rgb2Y.y"} {"(1.0 - sat) * rgb2Y.z + sat"}}
    }
  name ColorMatrix
  label "// --- Global desaturation --- //\nrgbPre = mult_f3_f33( rgbPre, RRT_SAT_MAT);"
  xpos -1250
  ypos -751
  addUserKnob {20 params}
  addUserKnob {13 rgb2Y}
  rgb2Y {0.27222875 0.67408174 0.05368952}
  addUserKnob {7 sat}
  sat 0.96
 }
 BlinkScript {
  recompileCount 436
  ProgramGroup 1
  KernelDescription "2 \"AcesSSTSKernel\" iterate pixelWise 777c75870bbc7fdb9e01da86019d098ae651932ef41328afda5c5c9c18fedc40 2 \"src\" Read Point \"dst\" Write Point 7 \"disp_lum\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"override_curve_params\" Bool 1 AA== \"knee\" Float 1 AAAAAA== \"shoulder\" Float 1 AAAAAA== \"slope\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"exposure\" Float 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"disp_lum\" 3 1 \"override_curve_params\" 1 1 \"knee\" 1 1 \"shoulder\" 1 1 \"slope\" 3 1 \"exposure\" 1 1 \"invert\" 1 1 17 \"MIN_STOP_SDR\" Float 1 1 AAAAAA== \"MAX_STOP_SDR\" Float 1 1 AAAAAA== \"MIN_STOP_RRT\" Float 1 1 AAAAAA== \"MAX_STOP_RRT\" Float 1 1 AAAAAA== \"MIN_LUM_SDR\" Float 1 1 AAAAAA== \"MAX_LUM_SDR\" Float 1 1 AAAAAA== \"MIN_LUM_RRT\" Float 1 1 AAAAAA== \"MAX_LUM_RRT\" Float 1 1 AAAAAA== \"Min\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"Mid\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"Max\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"expShift\" Float 1 1 AAAAAA== \"coefsLow\" Float 1 5 AAAAAAAAAAAAAAAAAAAAAAAAAAA= \"coefsHigh\" Float 1 5 AAAAAAAAAAAAAAAAAAAAAAAAAAA= \"N_KNOTS_LOW\" Int 1 1 AAAAAA== \"N_KNOTS_HIGH\" Int 1 1 AAAAAA== \"M1\" Float 9 1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
  kernelSource "kernel AcesSSTSKernel : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\nparam:\n  // User controllable parameters\n  float3 disp_lum;\n  bool override_curve_params;\n  float knee;\n  float shoulder;\n  float3 slope;\n  float exposure;\n  bool invert;\n\nlocal:\n  float MIN_STOP_SDR;\n  float MAX_STOP_SDR;\n  float MIN_STOP_RRT;\n  float MAX_STOP_RRT;\n  float MIN_LUM_SDR;\n  float MAX_LUM_SDR;\n  float MIN_LUM_RRT;\n  float MAX_LUM_RRT;\n  float3 Min;\n  float3 Mid;\n  float3 Max;\n  float expShift;\n  float coefsLow\[5];\n  float coefsHigh\[5];\n  int N_KNOTS_LOW;\n  int N_KNOTS_HIGH;\n  float3x3 M1;\n\n  // -------------------------------------------------------\n  // Utility Functions\n  // -------------------------------------------------------\n\n  // 1D interpolate: return y value at some point p in x\n  // This function differs from the interpolate1D CTL implementation.\n  // It is limited to 2 float2 vectors, x and y\n  // given a position p between x.x and x.y, it returns an interpolated\n  // value between y.x and y.y\n  // CTL_table\[2]\[2] = \{ \{ A, B \}, \{ C, D \} \};\n  // = \n  // float2 x = float2(A, C)\n  // float2 y = float2(B, D)\n  float interpolate1D(float2 x, float2 y, float p) \{\n    if (p <= x.x) \{\n      return y.x;\n    \} else if (p >= x.y) \{\n      return y.y;\n    \} else \{\n      float slope = (y.y-y.x) / (x.y-x.x);\n      return y.x + slope * (p-x.x);\n    \}\n  \}\n\n  // multiply a float3 by a matrix3x3\n  float3 mult_f3_f33( float3 src, float3x3 mtx) \{\n    return float3(mtx\[0]\[0] * src.x + mtx\[0]\[1] * src.y + \n    mtx\[0]\[2] * src.z, mtx\[1]\[0] * src.x + mtx\[1]\[1] * src.y + \n    mtx\[1]\[2] * src.z, mtx\[2]\[0] * src.x + mtx\[2]\[1] * src.y + \n    mtx\[2]\[2] * src.z);\n  \}\n\n  // dot product of two 1x3 matrices\n  float dot_f3_f3( float3 A, float3 B) \{\n    return (A.x*B.x)+(A.y*B.y)+(A.z*B.z);\n  \}\n\n  // Return interpolated minimum ACES value given a minimum luminance value.\n  float lookup_ACESmin( float minLum ) \{\n    float2 rangeLum = float2(log10(float(MIN_LUM_RRT)), log10(float(MIN_LUM_SDR)));\n    float2 rangeStops = float2(MIN_STOP_RRT, MIN_STOP_SDR);\n    return 0.18*pow( float(2), float(interpolate1D( rangeLum, rangeStops, log10( float(minLum)))));\n  \}\n  // Return interpolated maximum ACES value given a maximum luminance value.\n  float lookup_ACESmax( float maxLum ) \{\n    float2 rangeLum = float2(log10(float(MAX_LUM_SDR)), log10(float(MAX_LUM_RRT)));\n    float2 rangeStops = float2(MAX_STOP_SDR, MAX_STOP_RRT);\n    return 0.18*pow( float(2), float(interpolate1D( rangeLum, rangeStops, log10( float(maxLum)))));\n  \}\n\n  void init_coefsLow( float3 TsPointLow, float3 TsPointMid ) \{\n    // :145 float cLow\[5] = init_coefsLow( MIN_PT, MID_PT);\n    float knotIncLow = (log10(TsPointMid.x) - log10(TsPointLow.x)) / 3.0;\n    // DeterTsPointLowe two lowest coefficients (straddling TsPointLowPt)\n    coefsLow\[0] = (TsPointLow.z * (log10(float(TsPointLow.x))-0.5*knotIncLow)) + ( log10(float(TsPointLow.y)) - TsPointLow.z * log10(float(TsPointLow.x)));\n    coefsLow\[1] = (TsPointLow.z * (log10(float(TsPointLow.x))+0.5*knotIncLow)) + ( log10(float(TsPointLow.y)) - TsPointLow.z * log10(float(TsPointLow.x)));\n    // DeterTsPointLowe two highest coefficients (straddling TsPointMidPt)\n    coefsLow\[3] = (TsPointMid.z * (log10(float(TsPointMid.x))-0.5*knotIncLow)) + ( log10(float(TsPointMid.y)) - TsPointMid.z * log10(float(TsPointMid.x)));\n    coefsLow\[4] = (TsPointMid.z * (log10(float(TsPointMid.x))+0.5*knotIncLow)) + ( log10(float(TsPointMid.y)) - TsPointMid.z * log10(float(TsPointMid.x)));\n    // TsPointMiddle coefficient (which defines the \"sharpness of the bend\") is linearly interpolated\n    float2 bendsLowA = float2(MIN_STOP_RRT, MIN_STOP_SDR);\n    float2 bendsLowB = float2(0.18, 0.35);\n    float pctLow;\n    if (override_curve_params == 1) \{\n      pctLow = knee;\n    \}\n    else \{\n      pctLow = interpolate1D(bendsLowA, bendsLowB, log2(float(TsPointLow.x/0.18)));\n    \}\n    coefsLow\[2] = log10(float(TsPointLow.y)) + pctLow*(log10(float(TsPointMid.y))-log10(float(TsPointLow.y)));\n  \}\n\n  void init_coefsHigh( float3 TsPointMid, float3 TsPointMax ) \{\n    // :146 float cHigh\[5] = init_coefsHigh( MID_PT, MAX_PT);\n    float knotIncHigh = (log10(TsPointMax.x) - log10(TsPointMid.x)) / 3.;\n    // DeterMine two lowest coefficients (straddling MidPt)\n    coefsHigh\[0] = (TsPointMid.z * (log10(float(TsPointMid.x))-0.5*knotIncHigh)) + ( log10(float(TsPointMid.y)) - TsPointMid.z * log10(float(TsPointMid.x)));\n    coefsHigh\[1] = (TsPointMid.z * (log10(float(TsPointMid.x))+0.5*knotIncHigh)) + ( log10(float(TsPointMid.y)) - TsPointMid.z * log10(float(TsPointMid.x)));\n    // DeterMide two highest coefficients (straddling TsPointMaxPt)\n    coefsHigh\[3] = (TsPointMax.z * (log10(float(TsPointMax.x))-0.5*knotIncHigh)) + ( log10(float(TsPointMax.y)) - TsPointMax.z * log10(float(TsPointMax.x)));\n    coefsHigh\[4] = (TsPointMax.z * (log10(float(TsPointMax.x))+0.5*knotIncHigh)) + ( log10(float(TsPointMax.y)) - TsPointMax.z * log10(float(TsPointMax.x)));\n    // Middle coefficient (which defines the \"sharpness of the bend\") is linearly interpolated\n    float2 bendsHighA = float2(MAX_STOP_SDR, MAX_STOP_RRT);\n    float2 bendsHighB = float2(0.89, 0.90);\n    float pctHigh;\n    if (override_curve_params == 1) \{\n      pctHigh = shoulder;\n    \}\n    else \{\n      pctHigh = interpolate1D(bendsHighA, bendsHighB, log2(float(TsPointMax.x/0.18)));\n    \}\n    coefsHigh\[2] = log10(float(TsPointMid.y)) + pctHigh*(log10(float(TsPointMax.y))-log10(float(TsPointMid.y)));\n  \}\n\n  float shift( float in, float expShift) \{\n    return pow(float(2), (log2(float(in)) - expShift));\n  \}\n\n  void init_TsParams( float minLum, float maxLum, float exp_shift ) \{\n    // ACESlib.SSTS.ctl :136 init_TsParams \n    // Min Mid and Max is a float3 :\n    // x = lum (aces), y = lum (cd/m^2), z = slope\n\n    // override slope with default values used in AMPAS CTL\n    if (override_curve_params == 1) \{\n      Min = float3(lookup_ACESmin(minLum), minLum, float(slope.x));\n      Mid = float3(0.18, 4.8, float(slope.y));\n      Max = float3(lookup_ACESmax(maxLum), maxLum, float(slope.z));   \n    \}\n    else \{\n      Min = float3(lookup_ACESmin(minLum), minLum, float(0.0));\n      Mid = float3(0.18, 4.8, float(1.55));\n      Max = float3(lookup_ACESmax(maxLum), maxLum, float(0.0));\n    \}\n\n    // init coefsLow and coefsHigh (directly sets local variables).\n    init_coefsLow( Min, Mid );\n    init_coefsHigh( Mid, Max );\n\n    // :140 - init_TsParams : Exposure Shift\n    Min.x = shift(lookup_ACESmin(minLum), exp_shift);\n    Mid.x = shift(0.18, exp_shift);\n    Max.x = shift(lookup_ACESmax(maxLum), exp_shift);\n\n    // PARAMS = \n    // float3 Min / float3 Mid / float3 Max \n    // coefsLow\[5]\n    // coefsHigh\[5]\n  \}\n\n  void init() \{\n    // Textbook monomial to basis-function conversion matrix. (Used in tonescale)\n    MIN_STOP_SDR = -6.5;\n    MAX_STOP_SDR = 6.5;\n    MIN_STOP_RRT = -15.;\n    MAX_STOP_RRT = 18.;\n    MIN_LUM_SDR = 0.02;\n    MAX_LUM_SDR = 48.0;\n    MIN_LUM_RRT = 0.0001;\n    MAX_LUM_RRT = 10000.0;\n    // Monomial to basis function\n    float Marray\[] = \{0.5, -1.0, 0.5, \n                      -1.0, 1.0, 0.0, \n                      0.5, 0.5, 0.0\};\n    M1.setArray(Marray);\n\n    N_KNOTS_LOW = 4;\n    N_KNOTS_HIGH = 4;\n\n    // Get min / max lum from user\n    float Y_MIN = disp_lum.x;\n    float Y_MID = disp_lum.y;\n    float Y_MAX = disp_lum.z;\n\n\n    init_TsParams( Y_MIN, Y_MAX, 0.0 );\n\n    // Override expShift\n    if (override_curve_params != 1) \{\n      expShift = 0.0;\n    \} else \{\n      expShift = exposure;\n    \}\n\n    // Define expShift from inv_ssts\n    expShift = (log2(inv_ssts(Y_MID)) - log2(0.18)) + expShift;\n\n    // expShift = log2(inv_ssts(Y_MID)) - log2(0.18);\n\n    init_TsParams( Y_MIN, Y_MAX, expShift );\n  \}\n\n\n  // ACES Single Stage Tone Scale\n  float ssts( float x ) \{\n\n    // Take the log: clamp min to HALF_MIN\n    float logx = log10(max(x, 5.96046448e-08));\n    float logy;\n\n    // Calculate values for linear extension in shadows\n    if (logx <= log10(float(Min.x))) \{\n      logy = logx * Min.z + (log10(float(Min.y))) - \n        Min.z * log10(float(Min.x));\n    \}\n    // Calculate values for lower half of S-curve, shadows \n    else if (( logx > log10(float(Min.x)) ) && ( logx < log10(float(Mid.x)) )) \{\n      float knot_coord = (N_KNOTS_LOW-1) * (logx-log10(float(Min.x)))/\n        (log10(float(Mid.x))-log10(float(Min.x)));\n      int j = knot_coord;\n      float t = knot_coord - j;\n      float3 cf = float3(coefsLow\[j], coefsLow\[j + 1], coefsLow\[j + 2]);\n      float3 monomials = float3(t * t, t, 1.);\n      logy = dot_f3_f3(monomials, mult_f3_f33(cf, M1));\n    \}\n    // Calculate values for upper half of S-curve, highlights\n    else if (( logx >= log10(float(Mid.x)) ) && ( logx < log10(float(Max.x)) )) \{\n      float knot_coord = (N_KNOTS_HIGH-1) * (logx-log10(float(Mid.x)))/\n        (log10(float(Max.x))-log10(float(Mid.x)));\n      int j = knot_coord;\n      float t = knot_coord - j;\n      float3 cf = float3(coefsHigh\[j], coefsHigh\[j + 1], coefsHigh\[j + 2]); \n      float3 monomials = float3(t * t, t, 1.);\n      logy = dot_f3_f3(monomials, mult_f3_f33(cf, M1));\n    \}\n    // Calculate values for linear extension in highlights\n    else \{ // if ( logx >= log10(float(Max.x)) ) \{\n      logy = logx * Max.z + ( log10(float(Max.y)) - Max.z * log10(float(Max.x)) );\n    \}\n    // un-log\n    return  pow(float(10),logy);\n  \}\n\n\n  // ACES Inverse Single Stage Tone Scale\n  float inv_ssts( float y ) \{\n\n    float KNOT_INC_LOW = (log10(float(Mid.x)) - log10(float(Min.x))) / (N_KNOTS_LOW - 1.);\n    float KNOT_INC_HIGH = (log10(float(Max.x)) - log10(float(Mid.x))) / (N_KNOTS_HIGH - 1.);\n\n    // KNOT_Y is luminance of the spline at each knot\n    // Error 1: variable length arrays are not supported in OpenCL\n    // float __KNOT_Y_LOW_38\[N_KNOTS_LOW];\n    // Setting array length to 4 manually as a workaround... :(\n    float KNOT_Y_LOW\[ 4];\n    for (int i = 0; i < N_KNOTS_LOW; i = i+1) \{\n      KNOT_Y_LOW\[ i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.;\n    \}\n    // Setting array length to 4 manually as a workaround...\n    float KNOT_Y_HIGH\[ 4];\n    for (int i = 0; i < N_KNOTS_HIGH; i = i+1) \{\n      KNOT_Y_HIGH\[ i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.;\n    \};\n\n    float logy = log10( max(y, 1e-10));\n    float logx;\n\n    if (logy <= log10(float(Min.y))) \{\n        logx = log10(float(Min.x));\n\n    \} else if ( (logy > log10(float(Min.y))) && (logy <= log10(float(Mid.y))) ) \{\n        int j;\n        float3 cf;\n        if ( logy > KNOT_Y_LOW\[ 0] && logy <= KNOT_Y_LOW\[ 1]) \{\n            cf.x = coefsLow\[0];  cf.y = coefsLow\[1];  cf.z = coefsLow\[2];  j = 0;\n        \} else if ( logy > KNOT_Y_LOW\[ 1] && logy <= KNOT_Y_LOW\[ 2]) \{\n            cf.x = coefsLow\[1];  cf.y = coefsLow\[2];  cf.z = coefsLow\[3];  j = 1;\n        \} else if ( logy > KNOT_Y_LOW\[ 2] && logy <= KNOT_Y_LOW\[ 3]) \{\n            cf.x = coefsLow\[2];  cf.y = coefsLow\[3];  cf.z = coefsLow\[4];  j = 2;\n        \} \n\n        float3 tmp = mult_f3_f33( cf, M1);\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        const float d = sqrt(float(b * b - 4. * a * c));\n\n        const float t = ( 2. * c) / ( -d - b);\n\n        logx = log10(float(Min.x)) + ( t + j) * KNOT_INC_LOW;\n\n    \} else if ( (logy > log10(float(Mid.y))) && (logy < log10(float(Max.y))) ) \{\n        int j;\n        float3 cf;\n        if ( logy >= KNOT_Y_HIGH\[ 0] && logy <= KNOT_Y_HIGH\[ 1]) \{\n            cf.x = coefsHigh\[0];  cf.y = coefsHigh\[1];  cf.z = coefsHigh\[2];  j = 0;\n        \} else if ( logy > KNOT_Y_HIGH\[ 1] && logy <= KNOT_Y_HIGH\[ 2]) \{\n            cf.x = coefsHigh\[1];  cf.y = coefsHigh\[2];  cf.z = coefsHigh\[3];  j = 1;\n        \} else if ( logy > KNOT_Y_HIGH\[ 2] && logy <= KNOT_Y_HIGH\[ 3]) \{\n            cf.x = coefsHigh\[2];  cf.y = coefsHigh\[3];  cf.z = coefsHigh\[4];  j = 2;\n        \} \n\n        float3 tmp = mult_f3_f33( cf, M1);\n\n        float a = tmp.x;\n        float b = tmp.y;\n        float c = tmp.z;\n        c = c - logy;\n\n        const float d = sqrt( float(b * b - 4. * a * c));\n\n        const float t = ( 2. * c) / ( -d - b);\n\n        logx = log10(float(Mid.x)) + ( t + j) * KNOT_INC_HIGH;\n\n    \} else \{ //if ( logy >= log10(float(Max.y)) ) \{\n\n        logx = log10(float(Max.x));\n\n    \}\n\n    return pow(10, logx);\n\n  \}\n\n  void process() \{\n\n    if (invert == 1 ) \{\n      dst() = float4(inv_ssts(src().x), inv_ssts(src().y), inv_ssts(src().z), src().w);\n    \}\n    else \{\n      dst() = float4(ssts(src().x), ssts(src().y), ssts(src().z), src().w);\n    \}\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  vectorize {{parent.vectorize}}
  rebuild ""
  AcesSSTSKernel_disp_lum {{"use_c9 ? 0.0001 : parent.lum"} {parent.lum} {"use_c9 ? 10000 : parent.lum"}}
  AcesSSTSKernel_override_curve_params {{parent.override_ssts_params}}
  AcesSSTSKernel_knee {{parent.pctLow}}
  AcesSSTSKernel_shoulder {{parent.pctHigh}}
  AcesSSTSKernel_slope {{parent.slope} {parent.slope} {parent.slope}}
  AcesSSTSKernel_exposure {{parent.exposure}}
  rebuild_finalise ""
  name ACES_SSTS
  xpos -1250
  ypos -520
 }
 Dot {
  name Dot23
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos -462
 }
set Nfd02c70 [stack 0]
 Dot {
  name Dot22
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1656
  ypos -462
 }
 ColorMatrix {
  matrix {
      {1.4514395 -0.2365107536 -0.2149285972}
      {-0.07655385882 1.176229835 -0.09967592359}
      {0.008316127583 -0.006032462232 0.9977163076}
    }
  name ColorMatrix12
  label "ACEScg to ACES"
  xpos -1690
  ypos -400
 }
 Dot {
  name Dot21
  label " OCES"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1656
  ypos 2658
 }
push $Nfd02c70
 Dot {
  name Dot28
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos -342
 }
set Nfd1bfa0 [stack 0]
 BlinkScript {
  recompileCount 3
  ProgramGroup 1
  KernelDescription "2 \"ACES_segmented_spline_c9\" iterate pixelWise 4b980beb88a808b7875da41c3b7df42df009b5085dccf81d73bd31384e611901 2 \"src\" Read Point \"dst\" Write Point 2 \"invert\" Bool 1 AA== \"odt_type\" Int 1 AAAAAA== 2 \"invert\" 1 1 \"odt_type\" 1 1 10 \"Min\" Float 2 1 AAAAAAAAAAA= \"Mid\" Float 2 1 AAAAAAAAAAA= \"Max\" Float 2 1 AAAAAAAAAAA= \"slopeLow\" Float 1 1 AAAAAA== \"slopeHigh\" Float 1 1 AAAAAA== \"coefsLow\" Float 1 10 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"coefsHigh\" Float 1 10 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"N_KNOTS_LOW\" Int 1 1 AAAAAA== \"N_KNOTS_HIGH\" Int 1 1 AAAAAA== \"M\" Float 9 1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
  kernelSource "kernel ACES_segmented_spline_c9 : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\nparam:\n  // User controllable parameters\n  bool invert;\n  int odt_type;\n\nlocal:\n  float2 Min;\n  float2 Mid;\n  float2 Max;\n  float slopeLow;\n  float slopeHigh;\n  float coefsLow\[10];\n  float coefsHigh\[10];\n  int N_KNOTS_LOW;\n  int N_KNOTS_HIGH;\n\n  float3x3 M;\n\n\n  // multiply a float3 by a matrix3x3\n  float3 mult_f3_f33( float3 src, float3x3 mtx) \{\n    return float3(mtx\[0]\[0] * src.x + mtx\[0]\[1] * src.y + \n    mtx\[0]\[2] * src.z, mtx\[1]\[0] * src.x + mtx\[1]\[1] * src.y + \n    mtx\[1]\[2] * src.z, mtx\[2]\[0] * src.x + mtx\[2]\[1] * src.y + \n    mtx\[2]\[2] * src.z);\n  \}\n\n  // dot product of two 1x3 matrices\n  float dot_f3_f3( float3 A, float3 B) \{\n    return (A.x*B.x)+(A.y*B.y)+(A.z*B.z);\n  \}\n\n  void init() \{\n\n    // Set up ODT prameters : switch with int odt_type\n    // Assigning arrays the normal way with <type> name\[] = \{val, val, val\}; doesn't work in blinkscript :(\n    // odt_type = 0 : ODT_48nits\n    if (odt_type == 0) \{\n      // coefsLow\[10]\n      coefsLow\[0] = -1.6989700043;\n      coefsLow\[1] = -1.6989700043;\n      coefsLow\[2] = -1.4779000000;\n      coefsLow\[3] = -1.2291000000;\n      coefsLow\[4] = -0.8648000000;\n      coefsLow\[5] = -0.4480000000;\n      coefsLow\[6] = 0.0051800000;\n      coefsLow\[7] = 0.4511080334;\n      coefsLow\[8] = 0.9113744414;\n      coefsLow\[9] = 0.9113744414;\n      // coefsHigh\[10]\n      coefsHigh\[0] = 0.5154386965;\n      coefsHigh\[1] = 0.8470437783;\n      coefsHigh\[2] = 1.1358000000;\n      coefsHigh\[3] = 1.3802000000;\n      coefsHigh\[4] = 1.5197000000;\n      coefsHigh\[5] = 1.5985000000;\n      coefsHigh\[6] = 1.6467000000;\n      coefsHigh\[7] = 1.6746091357;\n      coefsHigh\[8] = 1.6878733390;\n      coefsHigh\[9] = 1.6878733390;\n\n      // Explicit casts to float are necessary for log10 calls in function to work :/\n      // Explicitly calculating calls to segmented_spline_c5_fwd() to avoid having to implement this \n      // here as well.\n      Min = float2(float(0.00288), float(0.02));\n      Mid = float2(float(4.8), float(4.8));\n      Max = float2(float(1005.71936), float(48.0));\n      slopeLow = 0.0;\n      slopeHigh = 0.04;\n    \}\n    // odt_type = 1 : ODT_1000nits\n    else if (odt_type == 1) \{\n      // coefsLow\[10]\n      coefsLow\[0] = -4.9706219331;\n      coefsLow\[1] = -3.0293780669;\n      coefsLow\[2] = -2.1262;\n      coefsLow\[3] = -1.5105;\n      coefsLow\[4] = -1.0578;\n      coefsLow\[5] = -0.4668;\n      coefsLow\[6] = 0.11938;\n      coefsLow\[7] = 0.7088134201;\n      coefsLow\[8] = 1.2911865799;\n      coefsLow\[9] = 1.2911865799;\n      // coefsHigh\[10]\n      coefsHigh\[0] = 0.8089132070;\n      coefsHigh\[1] = 1.1910867930;\n      coefsHigh\[2] = 1.5683;\n      coefsHigh\[3] = 1.9483;\n      coefsHigh\[4] = 2.3083;\n      coefsHigh\[5] = 2.6384;\n      coefsHigh\[6] = 2.8595;\n      coefsHigh\[7] = 2.9872608805;\n      coefsHigh\[8] = 3.0127391195;\n      coefsHigh\[9] = 3.0127391195;\n\n      Min = float2(float(0.00014), float(0.0001));\n      Mid = float2(float(4.8), float(10));\n      Max = float2(float(4505.08447), float(1000));\n      slopeLow = 3.0;\n      slopeHigh = 0.06;\n    \}\n    // odt_type = 2 : ODT_2000nits\n    else if (odt_type == 2) \{\n      // coefsLow\[10]\n      coefsLow\[0] = -4.9706219331;\n      coefsLow\[1] = -3.0293780669;\n      coefsLow\[2] = -2.1262;\n      coefsLow\[3] = -1.5105;\n      coefsLow\[4] = -1.0578;\n      coefsLow\[5] = -0.4668;\n      coefsLow\[6] = 0.11938;\n      coefsLow\[7] = 0.7088134201;\n      coefsLow\[8] = 1.2911865799;\n      coefsLow\[9] = 1.2911865799;\n      // coefsHigh\[10]\n      coefsHigh\[0] = 0.8019952042;\n      coefsHigh\[1] = 1.1980047958;\n      coefsHigh\[2] = 1.5943000000;\n      coefsHigh\[3] = 1.9973000000;\n      coefsHigh\[4] = 2.3783000000;\n      coefsHigh\[5] = 2.7684000000;\n      coefsHigh\[6] = 3.0515000000;\n      coefsHigh\[7] = 3.2746293562;\n      coefsHigh\[8] = 3.3274306351;\n      coefsHigh\[9] = 3.3274306351;\n\n      Min = float2(float(0.00014), float(0.0001));\n      Mid = float2(float(4.8), float(10));\n      Max = float2(float(5771.86426), float(2000));\n      slopeLow = 3.0;\n      slopeHigh = 0.12;\n    \}\n    // odt_type = 3 : ODT_4000nits\n    else if (odt_type == 3) \{\n      // coefsLow\[10]\n      coefsLow\[0] = -4.9706219331;\n      coefsLow\[1] = -3.0293780669;\n      coefsLow\[2] = -2.1262;\n      coefsLow\[3] = -1.5105;\n      coefsLow\[4] = -1.0578;\n      coefsLow\[5] = -0.4668;\n      coefsLow\[6] = 0.11938;\n      coefsLow\[7] = 0.7088134201;\n      coefsLow\[8] = 1.2911865799;\n      coefsLow\[9] = 1.2911865799;\n      // coefsHigh\[10]\n      coefsHigh\[0] = 0.7973186613;\n      coefsHigh\[1] = 1.2026813387;\n      coefsHigh\[2] = 1.6093000000;\n      coefsHigh\[3] = 2.0108000000;\n      coefsHigh\[4] = 2.4148000000;\n      coefsHigh\[5] = 2.8179000000;\n      coefsHigh\[6] = 3.1725000000;\n      coefsHigh\[7] = 3.5344995451;\n      coefsHigh\[8] = 3.6696204376;\n      coefsHigh\[9] = 3.6696204376;\n\n      Min = float2(float(0.00014), float(0.0001));\n      Mid = float2(float(4.8), float(10));\n      Max = float2(float(6824.36572), float(2000));\n      slopeLow = 3.0;\n      slopeHigh = 0.3;\n    \}\n\n    // Monomial to basis function (Note: this is transposed compared to the AMPAS CTL)\n    float Marray\[] = \{0.5, -1.0, 0.5, \n                      -1.0, 1.0, 0.0, \n                      0.5, 0.5, 0.0\};\n    M.setArray(Marray);\n\n    // It seems as though if you define an int before an array, the int\n    // could randomly get set to a really really high value :(\n    N_KNOTS_LOW = 8;\n    N_KNOTS_HIGH = 8;\n  \}\n\n\n  float segmented_spline_c9_fwd( float x ) \{\n    // Take the log: clamp min to HALF_MIN\n    float logx = log10(max(x, 5.96046448e-08));\n    float logy;\n\n    if ( logx <= log10(Min.x) ) \{ \n      logy = logx * slopeLow + ( log10(Min.y) - slopeLow * log10(Min.x) );\n    \} \n    else if (( logx > log10(Min.x) ) && ( logx < log10(Mid.x) )) \{\n      float knot_coord = (N_KNOTS_LOW-1) * (logx-log10(Min.x))/(log10(Mid.x)-log10(Min.x));\n      int j = knot_coord;\n      float t = knot_coord - j;\n      float3 cf = float3(coefsLow\[ j], coefsLow\[ j + 1], coefsLow\[ j + 2]);\n      float3 monomials = float3(t * t, t, 1. );\n      logy = dot_f3_f3( monomials, mult_f3_f33( cf, M));\n    \} \n    else if (( logx >= log10(Mid.x) ) && ( logx < log10(Max.x) )) \{\n      float knot_coord = (N_KNOTS_HIGH-1) * (logx-log10(Mid.x))/(log10(Max.x)-log10(Mid.x));\n      int j = knot_coord;\n      float t = knot_coord - j;\n      float3 cf = float3(coefsHigh\[ j], coefsHigh\[ j + 1], coefsHigh\[ j + 2]);\n      float3 monomials = float3(t * t, t, 1.);\n      logy = dot_f3_f3( monomials, mult_f3_f33( cf, M));\n    \} \n    else \{ //if ( logIn >= log10(Max.x) ) \{ \n      logy = logx * slopeHigh + ( log10(Max.y) - slopeHigh * log10(Max.x) );\n    \}\n\n    return pow(10, logy);\n  \}\n\n\n\n  float segmented_spline_c9_rev( float y ) \{  \n\n    const float KNOT_INC_LOW = (log10(Mid.x) - log10(Min.x)) / (N_KNOTS_LOW - 1.);\n    const float KNOT_INC_HIGH = (log10(Max.x) - log10(Mid.x)) / (N_KNOTS_HIGH - 1.);\n    \n    // KNOT_Y is luminance of the spline at each knot\n    // Setting array length to 4 manually to work around \n    // Error 1: variable length arrays are not supported in OpenCL\n\n    float KNOT_Y_LOW\[ 8];\n    for (int i = 0; i < N_KNOTS_LOW; i = i+1) \{\n      KNOT_Y_LOW\[ i] = ( coefsLow\[i] + coefsLow\[i+1]) / 2.;\n    \};\n\n    float KNOT_Y_HIGH\[ 8];\n    for (int i = 0; i < N_KNOTS_HIGH; i = i+1) \{\n      KNOT_Y_HIGH\[ i] = ( coefsHigh\[i] + coefsHigh\[i+1]) / 2.;\n    \};\n\n    float logy = log10( max( y, 1e-10));\n    float logx;\n\n    if (logy <= log10(Min.y)) \{\n      logx = log10(Min.x);\n    \} \n    else if ( (logy > log10(Min.y)) && (logy <= log10(Mid.y)) ) \{\n      int j;\n      float3 cf;\n      if ( logy > KNOT_Y_LOW\[ 0] && logy <= KNOT_Y_LOW\[ 1]) \{\n          cf\[ 0] = coefsLow\[0];  cf\[ 1] = coefsLow\[1];  cf\[ 2] = coefsLow\[2];  j = 0;\n      \} else if ( logy > KNOT_Y_LOW\[ 1] && logy <= KNOT_Y_LOW\[ 2]) \{\n          cf\[ 0] = coefsLow\[1];  cf\[ 1] = coefsLow\[2];  cf\[ 2] = coefsLow\[3];  j = 1;\n      \} else if ( logy > KNOT_Y_LOW\[ 2] && logy <= KNOT_Y_LOW\[ 3]) \{\n          cf\[ 0] = coefsLow\[2];  cf\[ 1] = coefsLow\[3];  cf\[ 2] = coefsLow\[4];  j = 2;\n      \} else if ( logy > KNOT_Y_LOW\[ 3] && logy <= KNOT_Y_LOW\[ 4]) \{\n          cf\[ 0] = coefsLow\[3];  cf\[ 1] = coefsLow\[4];  cf\[ 2] = coefsLow\[5];  j = 3;\n      \} else if ( logy > KNOT_Y_LOW\[ 4] && logy <= KNOT_Y_LOW\[ 5]) \{\n          cf\[ 0] = coefsLow\[4];  cf\[ 1] = coefsLow\[5];  cf\[ 2] = coefsLow\[6];  j = 4;\n      \} else if ( logy > KNOT_Y_LOW\[ 5] && logy <= KNOT_Y_LOW\[ 6]) \{\n          cf\[ 0] = coefsLow\[5];  cf\[ 1] = coefsLow\[6];  cf\[ 2] = coefsLow\[7];  j = 5;\n      \} else if ( logy > KNOT_Y_LOW\[ 6] && logy <= KNOT_Y_LOW\[ 7]) \{\n          cf\[ 0] = coefsLow\[6];  cf\[ 1] = coefsLow\[7];  cf\[ 2] = coefsLow\[8];  j = 6;\n      \}\n      \n      const float3 tmp = mult_f3_f33( cf, M);\n      float a = tmp\[ 0];\n      float b = tmp\[ 1];\n      float c = tmp\[ 2];\n      c = c - logy;\n      const float d = sqrt(float(b * b - 4. * a * c));\n      const float t = ( 2. * c) / ( -d - b);\n      logx = log10(Min.x) + ( t + j) * KNOT_INC_LOW;\n    \} \n    else if ( (logy > log10(Mid.y)) && (logy < log10(Max.y)) ) \{\n      int j;\n      float3 cf;\n      if ( logy > KNOT_Y_HIGH\[ 0] && logy <= KNOT_Y_HIGH\[ 1]) \{\n          cf\[ 0] = coefsHigh\[0];  cf\[ 1] = coefsHigh\[1];  cf\[ 2] = coefsHigh\[2];  j = 0;\n      \} else if ( logy > KNOT_Y_HIGH\[ 1] && logy <= KNOT_Y_HIGH\[ 2]) \{\n          cf\[ 0] = coefsHigh\[1];  cf\[ 1] = coefsHigh\[2];  cf\[ 2] = coefsHigh\[3];  j = 1;\n      \} else if ( logy > KNOT_Y_HIGH\[ 2] && logy <= KNOT_Y_HIGH\[ 3]) \{\n          cf\[ 0] = coefsHigh\[2];  cf\[ 1] = coefsHigh\[3];  cf\[ 2] = coefsHigh\[4];  j = 2;\n      \} else if ( logy > KNOT_Y_HIGH\[ 3] && logy <= KNOT_Y_HIGH\[ 4]) \{\n          cf\[ 0] = coefsHigh\[3];  cf\[ 1] = coefsHigh\[4];  cf\[ 2] = coefsHigh\[5];  j = 3;\n      \} else if ( logy > KNOT_Y_HIGH\[ 4] && logy <= KNOT_Y_HIGH\[ 5]) \{\n          cf\[ 0] = coefsHigh\[4];  cf\[ 1] = coefsHigh\[5];  cf\[ 2] = coefsHigh\[6];  j = 4;\n      \} else if ( logy > KNOT_Y_HIGH\[ 5] && logy <= KNOT_Y_HIGH\[ 6]) \{\n          cf\[ 0] = coefsHigh\[5];  cf\[ 1] = coefsHigh\[6];  cf\[ 2] = coefsHigh\[7];  j = 5;\n      \} else if ( logy > KNOT_Y_HIGH\[ 6] && logy <= KNOT_Y_HIGH\[ 7]) \{\n          cf\[ 0] = coefsHigh\[6];  cf\[ 1] = coefsHigh\[7];  cf\[ 2] = coefsHigh\[8];  j = 6;\n      \}\n      \n      const float3 tmp = mult_f3_f33( cf, M);\n      float a = tmp\[ 0];\n      float b = tmp\[ 1];\n      float c = tmp\[ 2];\n      c = c - logy;\n      const float d = sqrt( float(b * b - 4. * a * c));\n      const float t = ( 2. * c) / ( -d - b);\n      logx = log10(Mid.x) + ( t + j) * KNOT_INC_HIGH;\n    \} \n    else \{ //if ( logy >= log10(Max.y) ) \{\n      logx = log10(Max.x);\n    \}\n    \n    return pow(10, logx);\n\n  \}\n\n\n\n  void process() \{\n    float3 aces = float3(src().x, src().y, src().z);\n\n    if (invert == 0) \{\n      aces = float3(segmented_spline_c9_fwd(aces.x), segmented_spline_c9_fwd(aces.y), segmented_spline_c9_fwd(aces.z));\n    \} else \{\n      aces = float3(segmented_spline_c9_rev(aces.x), segmented_spline_c9_rev(aces.y), segmented_spline_c9_rev(aces.z));\n    \}\n\n    dst() = float4(aces.x, aces.y, aces.z, src().w);\n \n    // dst() = float4(log10(Min.x), log10(Mid.x), N_KNOTS_LOW, N_KNOTS_HIGH);\n\n    \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  vectorize {{parent.vectorize}}
  rebuild ""
  rebuild_finalise ""
  name segmented_spline_c9_
  xpos -1140
  ypos -352
 }
push $Nfd1bfa0
 Switch {
  inputs 2
  which {{parent.use_c9}}
  name Switch_c9
  xpos -1250
  ypos -298
 }
 Expression {
  expr0 "(r - Ymin) / (Ymax - Ymin)"
  expr1 "(g - Ymin) / (Ymax - Ymin)"
  expr2 "(b - Ymin) / (Ymax - Ymin)"
  expr3 1
  name Y_2_linCV_f3_
  xpos -1250
  ypos 38
  addUserKnob {20 Luminance}
  addUserKnob {7 Ymin R 0.0001 0.02}
  Ymin {{parent.lum.0}}
  addUserKnob {7 Ymax R 48 10000}
  Ymax {{parent.lum.2}}
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 282
 }
set Nfd5a280 [stack 0]
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 282
 }
set Nfd5f330 [stack 0]
 Dot {
  name Dot13
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -886
  ypos 282
 }
 Dot {
  name Dot16
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -886
  ypos 354
 }
set Nfd69130 [stack 0]
 Expression {
  temp_name0 tr
  temp_expr0 "(-r - c_x_0) / (c_x_1 - c_x_0)"
  temp_name1 tg
  temp_expr1 "(-g - c_x_0) / (c_x_1 - c_x_0)"
  temp_name2 tb
  temp_expr2 "(-b - c_x_0) / (c_x_1 - c_x_0)"
  expr0 "tr < 0.0 ? -(tr * c_b + c_c) : tr > 1.0 ? r : -(( tr * c_a + c_b) * tr + c_c)"
  expr1 "tg < 0.0 ? -(tg * c_b + c_c) : tg > 1.0 ? g : -(( tg * c_a + c_b) * tg + c_c)"
  expr2 "tb < 0.0 ? -(tb * c_b + c_c) : tb > 1.0 ? b : -(( tb * c_a + c_b) * tb + c_c)"
  name roll_white_fwd_1
  xpos -920
  ypos 398
  addUserKnob {20 Params}
  addUserKnob {7 new_wht}
  new_wht 0.918
  addUserKnob {7 c_width}
  c_width 0.5
  addUserKnob {7 c_x_0 +DISABLED}
  c_x_0 -1
  addUserKnob {7 c_x_1 +DISABLED}
  c_x_1 {{"c_x_0 + c_width"}}
  addUserKnob {7 c_y0 +DISABLED}
  c_y0 {{-new_wht}}
  addUserKnob {7 c_y1 +DISABLED}
  c_y1 {{c_x_1}}
  addUserKnob {7 c_m1 +DISABLED}
  c_m1 {{"(c_x_1 - c_x_0)"}}
  addUserKnob {7 c_a +DISABLED}
  c_a {{"c_y0 - c_y1 + c_m1"}}
  addUserKnob {7 c_b +DISABLED}
  c_b {{"2 * (c_y1 - c_y0) - c_m1"}}
  addUserKnob {7 c_c +DISABLED}
  c_c {{c_y0}}
 }
 Expression {
  temp_name0 SCALE
  temp_expr0 0.96
  temp_name1 NEW_WHT
  temp_expr1 0.918
  expr0 "min( r, NEW_WHT) * SCALE"
  expr1 "min( g, NEW_WHT) * SCALE"
  expr2 "min( b, NEW_WHT) * SCALE"
  name Expression2
  label "// Scale and clamp white to avoid casted highlights due to D60 simulation"
  xpos -920
  ypos 440
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -886
  ypos 498
 }
push $Nfd69130
 Expression {
  temp_name0 SCALE
  temp_expr0 0.96362
  expr0 "r * SCALE"
  expr1 "g * SCALE"
  expr2 "b * SCALE"
  name mult_f_f3_
  label D65
  xpos -1030
  ypos 344
 }
push $Nfd5f330
 Switch {
  inputs 2
  which {{"parent.display_pri < 3"}}
  name switch_wp_is_d65_
  xpos -1140
  ypos 350
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 426
 }
push $Nfd5a280
 Switch {
  inputs 2
  which {{parent.d60_sim}}
  name d60_sim_switch1
  xpos -1250
  ypos 422
 }
 Switch {
  inputs 2
  which {{"parent.display_pri == 3"}}
  name switch_wp_is_dci_
  xpos -1250
  ypos 494
 }
 Dot {
  name Dot26
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 762
 }
set Nfdbf6b0 [stack 0]
 ColorMatrix {
  matrix {
      {{"(1.0 - sat) * rgb2Y.x + sat"} {"(1.0 - sat) * rgb2Y.y"} {"(1.0 - sat) * rgb2Y.z"}}
      {{"(1.0 - sat) * rgb2Y.x"} {"(1.0 - sat) * rgb2Y.y + sat"} {"(1.0 - sat) * rgb2Y.z"}}
      {{"(1.0 - sat) * rgb2Y.x"} {"(1.0 - sat) * rgb2Y.y"} {"(1.0 - sat) * rgb2Y.z + sat"}}
    }
  name ColorMatrix3
  label "// Apply desaturation to compensate \nfor luminance difference"
  xpos -1140
  ypos 746
  addUserKnob {20 params}
  addUserKnob {13 rgb2Y}
  rgb2Y {0.27222875 0.67408174 0.05368952}
  addUserKnob {7 sat}
  sat 0.93
 }
push $Nfdbf6b0
 Switch {
  inputs 2
  which {{"parent.eotf < 5 && display_pri < 2"}}
  name Switch_eotf
  label "Use if output is SDR"
  xpos -1250
  ypos 800
 }
 ColorMatrix {
  matrix {
      {0.6624541879 0.1340042055 0.1561876982}
      {0.2722287476 0.6740817428 0.05368951708}
      {-0.005574660841 0.004060741514 1.010339141}
    }
  name ColorMatrix1
  label "ACES AP1 to XYZ"
  xpos -1250
  ypos 968
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 1146
 }
set Nfde6740 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1140
  ypos 1136
 }
 Clamp {
  channels {rgba.red -rgba.green -rgba.blue none}
  maximum_enable false
  name ClampMin4
  xpos -1140
  ypos 1190
 }
 Expression {
  expr0 "pow(r, DIM_SURROUND_GAMMA)"
  expr1 g
  expr2 b
  channel3 none
  name dark_to_dim3
  xpos -1140
  ypos 1214
  addUserKnob {20 Params}
  addUserKnob {7 DIM_SURROUND_GAMMA}
  DIM_SURROUND_GAMMA 0.9811
 }
 Colorspace {
  colorspace_in CIE-Yxy
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1140
  ypos 1256
 }
push $Nfde6740
 Switch {
  inputs 2
  which {{"(parent.eotf <= 4) ? parent.dark_to_dim : 0"}}
  name DarkToDim_Switch
  label "enable if sdr\nand dark_to_dim enabled"
  xpos -1250
  ypos 1250
 }
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 1434
 }
set Nfe419b0 [stack 0]
 Dot {
  name Dot9
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 1434
 }
set Nfe46a80 [stack 0]
 ColorMatrix {
  matrix {
      {0.9872254133 -0.006114810705 0.01592640579}
      {-0.007603884675 1.001874804 0.005322027951}
      {0.003066040576 -0.005084238946 1.081519246}
    }
  name ColorMatrix2
  label "CAT: Bradford\n D60 to D65"
  xpos -1140
  ypos 1466
 }
set Nfe4b980 [stack 0]
push $Nfe46a80
 Dot {
  name Dot10
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -996
  ypos 1434
 }
push $Nfe4b980
 Switch {
  inputs 2
  which {{parent.d60_sim}}
  name d60_sim_switch
  xpos -1140
  ypos 1550
 }
push $Nfe419b0
 Switch {
  inputs 2
  which {{"parent.display_pri < 3"}}
  name switch_wp_is_d65_1
  xpos -1250
  ypos 1550
 }
 Switch {
  inputs 2
  which {{parent.force_d65_cat}}
  name switch_force_d65_cat
  xpos -1250
  ypos 1598
 }
 Group {
  name limit_to_primaries
  label "Only enabled when display_pri != limiting_pri"
  xpos -1250
  ypos 1760
  disable {{"!(parent.display_pri != parent.limiting_pri)"}}
  addUserKnob {20 limit_to_primaries}
  addUserKnob {4 limiting_pri l "limiting pri" M {Rec709 Rec2020 P3D65 P3DCI P3D60 ACEScg ACES XYZ}}
  limiting_pri {{parent.limiting_pri}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -298
  }
  Dot {
   name Dot1
   label " XYZ to limiting primaries"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos -198
  }
set Nfe83470 [stack 0]
push $Nfe83470
  ColorMatrix {
   matrix {
       {1.049811006 0 -9.748453158e-05}
       {-0.4959030151 1.373313069 0.09824004024}
       {4.020908051e-08 0 0.9912520051}
     }
   name ColorMatrix5
   label "XYZ to ACES"
   xpos 730
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {1.641023397 -0.3248033226 -0.2364246994}
       {-0.6636629701 1.615331769 0.01675636508}
       {0.01172191743 -0.008284457959 0.9883947968}
     }
   name ColorMatrix21
   label "XYZ to ACEScg"
   xpos 620
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {2.402741432 -0.8974840641 -0.3880533576}
       {-0.8325796723 1.769231915 0.02371272631}
       {0.03882339597 -0.08249972761 1.036368608}
     }
   name ColorMatrix15
   label "XYZ to P3D60"
   xpos 510
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {2.725393534 -1.018002748 -0.4401631057}
       {-0.795167923 1.689731717 0.02264718339}
       {0.04124190658 -0.0876390487 1.100929499}
     }
   name ColorMatrix19
   label "XYZ to P3DCI"
   xpos 400
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {2.493496418 -0.9313833117 -0.4027107358}
       {-0.8294888139 1.762663841 0.02362467349}
       {0.03584583849 -0.07617240399 0.9568845034}
     }
   name ColorMatrix17
   label "XYZ to P3D65"
   xpos 290
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {0.6954522133 0.1406786889 0.163869068}
       {0.04479461163 0.8596711159 0.09553432465}
       {-0.005525866989 0.004025223665 1.001500726}
     }
   name ColorMatrix12
   label "XYZ to Rec2020"
   xpos 180
   ypos -136
  }
push $Nfe83470
  ColorMatrix {
   matrix {
       {3.240970135 -1.537383318 -0.4986107945}
       {-0.9692437053 1.875967622 0.04155509174}
       {0.0556300357 -0.2039768547 1.056971431}
     }
   name ColorMatrix2
   label "XYZ to Rec709"
   xpos 70
   ypos -136
  }
  Switch {
   inputs 8
   which {{parent.limiting_pri}}
   name limiting_primary_switch
   xpos -40
   ypos -34
  }
  Clamp {
   channels rgb
   name clamp_f3
   label "Clip any values outside the limiting primaries"
   xpos -40
   ypos 56
  }
  Dot {
   name Dot2
   label " Convert limited RGB to XYZ"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 162
  }
set Nfef3a50 [stack 0]
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.9525524378 0 9.367863095e-05}
       {0.3439664543 0.7281661034 -0.07213255018}
       {-3.863927134e-08 0 1.008825183}
     }
   name ColorMatrix4
   label "ACES to XYZ"
   xpos 730
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.6624541879 0.1340042055 0.1561876982}
       {0.2722287476 0.6740817428 0.05368951708}
       {-0.005574660841 0.004060741514 1.010339141}
     }
   name ColorMatrix20
   label "ACEScg to XYZ"
   xpos 620
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.5049495697 0.2646814585 0.1830150485}
       {0.237623319 0.6891706586 0.07320601493}
       {0 0.0449459292 0.9638792276}
     }
   name ColorMatrix13
   label "P3D60 to XYZ"
   xpos 510
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.4451698363 0.2771343887 0.1722826511}
       {0.209491685 0.7215952873 0.06891305745}
       {0 0.04706057906 0.9073553085}
     }
   name ColorMatrix18
   label "P3DCI to XYZ"
   xpos 400
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.4865709841 0.2656676769 0.1982172877}
       {0.2289745659 0.6917385459 0.07928691059}
       {0 0.04511339962 1.043944359}
     }
   name ColorMatrix16
   label "P3D65 to XYZ"
   xpos 290
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.6369580626 0.1446169019 0.1688809693}
       {0.2627002299 0.6779980659 0.05930171534}
       {0 0.0280726999 1.060985088}
     }
   name ColorMatrix3
   label "Rec2020 to XYZ"
   xpos 180
   ypos 224
  }
push $Nfef3a50
  ColorMatrix {
   matrix {
       {0.4123907983 0.3575843275 0.180480808}
       {0.2126390189 0.7151686549 0.07219231874}
       {0.01933082007 0.1191947311 0.950532198}
     }
   name ColorMatrix1
   label "Rec709 to XYZ"
   xpos 70
   ypos 224
  }
  Switch {
   inputs 8
   which {{parent.limiting_pri}}
   name limiting_primary_switch1
   xpos -40
   ypos 326
  }
  Output {
   name Output
   xpos -40
   ypos 446
  }
 end_group
 Group {
  name XYZ_2_DISPLAY_PRI
  label "CIE XYZ to display encoding primaries"
  xpos -1250
  ypos 1976
  addUserKnob {20 XYZ_2_DISPLAY_PRI_tab l XYZ_2_DISPLAY_PRI}
  addUserKnob {4 display_pri l "display pri" M {Rec709 Rec2020 P3D65 P3DCI P3D60 ACEScg ACES XYZ}}
  display_pri {{parent.display_pri}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -298
  }
  Dot {
   name Dot1
   label " XYZ to display primaries"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos -198
  }
set Nff69470 [stack 0]
push $Nff69470
  ColorMatrix {
   matrix {
       {1.049811006 0 -9.748453158e-05}
       {-0.4959030151 1.373313069 0.09824004024}
       {4.020908051e-08 0 0.9912520051}
     }
   name ColorMatrix3
   label "XYZ to ACES"
   xpos 730
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {1.641023397 -0.3248033226 -0.2364246994}
       {-0.6636629701 1.615331769 0.01675636508}
       {0.01172191743 -0.008284457959 0.9883947968}
     }
   name ColorMatrix21
   label "XYZ to ACEScg"
   xpos 620
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {2.402741432 -0.8974840641 -0.3880533576}
       {-0.8325796723 1.769231915 0.02371272631}
       {0.03882339597 -0.08249972761 1.036368608}
     }
   name ColorMatrix15
   label "XYZ to P3D60"
   xpos 510
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {2.725393534 -1.018002748 -0.4401631057}
       {-0.795167923 1.689731717 0.02264718339}
       {0.04124190658 -0.0876390487 1.100929499}
     }
   name ColorMatrix19
   label "XYZ to P3DCI"
   xpos 400
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {2.493496418 -0.9313833117 -0.4027107358}
       {-0.8294888139 1.762663841 0.02362467349}
       {0.03584583849 -0.07617240399 0.9568845034}
     }
   name ColorMatrix17
   label "XYZ to P3D65"
   xpos 290
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {1.71665132 -0.3556708097 -0.2533662617}
       {-0.6666844487 1.616481304 0.01576855592}
       {0.01763986237 -0.04277062416 0.9421030879}
     }
   name ColorMatrix12
   label "XYZ to Rec2020"
   xpos 180
   ypos -136
  }
push $Nff69470
  ColorMatrix {
   matrix {
       {3.240970135 -1.537383318 -0.4986107945}
       {-0.9692437053 1.875967622 0.04155509174}
       {0.0556300357 -0.2039768547 1.056971431}
     }
   name ColorMatrix2
   label "XYZ to Rec709"
   xpos 70
   ypos -136
  }
  Switch {
   inputs 8
   which {{parent.display_pri}}
   name limiting_primary_switch
   xpos -40
   ypos -34
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Clamp {
  channels rgb
  name clamp_f3_all
  xpos -1250
  ypos 2164
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 2514
 }
set Nffe2830 [stack 0]
push $Nffe2830
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -886
  ypos 2514
 }
set Nffe7d80 [stack 0]
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 2514
 }
set Nffecc50 [stack 0]
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -446
  ypos 2514
 }
set Nfff1b50 [stack 0]
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -226
  ypos 2514
 }
set Nfff6a50 [stack 0]
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -6
  ypos 2514
 }
set Nfffb950 [stack 0]
 Dot {
  name Dot25
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 214
  ypos 2514
 }
set N10000850 [stack 0]
 Dot {
  name Dot24
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 2514
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 2610
 }
set N1000a650 [stack 0]
 Expression {
  expr0 "r * (Ymax - Ymin) + Ymin"
  expr1 "g * (Ymax - Ymin) + Ymin"
  expr2 "b * (Ymax - Ymin) + Ymin"
  name linCV_2_Y_f3_hdr
  label "stretch_black = True"
  xpos 510
  ypos 2672
  addUserKnob {20 Luminance}
  addUserKnob {7 Ymin R 0.0001 0.02}
  addUserKnob {7 Ymax R 48 10000}
  Ymax {{parent.lum.2}}
 }
push $N1000a650
 Expression {
  expr0 "r * (Ymax - Ymin) + Ymin"
  expr1 "g * (Ymax - Ymin) + Ymin"
  expr2 "b * (Ymax - Ymin) + Ymin"
  name linCV_2_Y_f3_hdr2
  label "stretch_black = False"
  xpos 620
  ypos 2672
  addUserKnob {20 Luminance}
  addUserKnob {7 Ymin R 0.0001 0.02}
  Ymin {{parent.lum.0}}
  addUserKnob {7 Ymax R 48 10000}
  Ymax {{parent.lum.2}}
 }
 Switch {
  inputs 2
  which {{parent.stretch_black}}
  name StretchBlacks_Switch
  xpos 620
  ypos 2750
 }
 Clamp {
  channels rgb
  maximum 65535
  name clamp_f3__
  xpos 620
  ypos 2822
 }
 Expression {
  temp_name0 Lm_r
  temp_expr0 "pow((r / pq_C), pq_m1)"
  temp_name1 Lm_g
  temp_expr1 "pow((g / pq_C), pq_m1)"
  temp_name2 Lm_b
  temp_expr2 "pow((b / pq_C), pq_m1)"
  expr0 "pow(( pq_c1 + pq_c2 * Lm_r ) / ( 1.0 + pq_c3 * Lm_r ), pq_m2)"
  expr1 "pow(( pq_c1 + pq_c2 * Lm_g ) / ( 1.0 + pq_c3 * Lm_g ), pq_m2)"
  expr2 "pow(( pq_c1 + pq_c2 * Lm_b ) / ( 1.0 + pq_c3 * Lm_b ), pq_m2)"
  name Y_2_ST2084_
  label "ACESlib.OutputTransforms.ctl : 243 \nACESlib.Utilities_Color.ctl : 425"
  xpos 620
  ypos 2882
  addUserKnob {20 SMPTE_ST2084-2014_Constants_tab l "Constants from SMPTE ST 2084-2014"}
  addUserKnob {7 pq_m1 t " ( 2610.0 / 4096.0 ) / 4.0;" +DISABLED R 0 100}
  pq_m1 0.1593017578
  addUserKnob {7 pq_m2 t " ( 2523.0 / 4096.0 ) * 128.0;" +DISABLED R 0 100}
  pq_m2 78.84375
  addUserKnob {7 pq_c1 t " 3424.0 / 4096.0 or pq_c3 - pq_c2 + 1.0;" +DISABLED R 0 100}
  pq_c1 0.8359375
  addUserKnob {7 pq_c2 t " ( 2413.0 / 4096.0 ) * 32.0;" +DISABLED R 0 100}
  pq_c2 18.8515625
  addUserKnob {7 pq_c3 t " ( 2392.0 / 4096.0 ) * 32.0;" +DISABLED R 0 100}
  pq_c3 18.6875
  addUserKnob {7 pq_C +DISABLED R 0 100}
  pq_C 10000
 }
set N10044570 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 984
  ypos 2514
 }
 Expression {
  temp_name0 Np_r
  temp_expr0 "pow( r, 1.0 / pq_m2 )"
  temp_name1 Np_g
  temp_expr1 "pow( g, 1.0 / pq_m2 )"
  temp_name2 Np_b
  temp_expr2 "pow( b, 1.0 / pq_m2 )"
  expr0 "r < 0 ? 0 : pow((Np_r - pq_c1) / ( pq_c2 - pq_c3 * Np_r ), 1.0/pq_m1) * pq_C"
  expr1 "g < 0 ? 0 : pow((Np_g - pq_c1) / ( pq_c2 - pq_c3 * Np_g ), 1.0/pq_m1) * pq_C"
  expr2 "b < 0 ? 0 : pow((Np_b - pq_c1) / ( pq_c2 - pq_c3 * Np_b ), 1.0/pq_m1) * pq_C"
  name ST2084_2_Y_f3_
  label "ACESlib.Utilities_Color.ctl : 408\n// Converts from the non-linear perceptually quantized space to linear cd/m^2"
  xpos 950
  ypos 2618
  addUserKnob {20 SMPTE_ST2084-2014_Constants_tab l "Constants from SMPTE ST 2084-2014"}
  addUserKnob {7 pq_m1 t " ( 2610.0 / 4096.0 ) / 4.0;" +DISABLED R 0 100}
  pq_m1 0.1593017578
  addUserKnob {7 pq_m2 t " ( 2523.0 / 4096.0 ) * 128.0;" +DISABLED R 0 100}
  pq_m2 78.84375
  addUserKnob {7 pq_c1 t " 3424.0 / 4096.0 or pq_c3 - pq_c2 + 1.0;" +DISABLED R 0 100}
  pq_c1 0.8359375
  addUserKnob {7 pq_c2 t " ( 2413.0 / 4096.0 ) * 32.0;" +DISABLED R 0 100}
  pq_c2 18.8515625
  addUserKnob {7 pq_c3 t " ( 2392.0 / 4096.0 ) * 32.0;" +DISABLED R 0 100}
  pq_c3 18.6875
  addUserKnob {7 pq_C +DISABLED R 0 100}
  pq_C 10000
 }
 Expression {
  temp_name0 Y_d
  temp_expr0 "0.2627*r + 0.6780*g + 0.0593*b"
  expr0 "Y_d == 0 ? 0 : pow( (Y_d-c_beta)/c_alpha, (1-c_gamma)/c_gamma) * ((r-c_beta)/c_alpha)"
  expr1 "Y_d == 0 ? 0 : pow( (Y_d-c_beta)/c_alpha, (1-c_gamma)/c_gamma) * ((g-c_beta)/c_alpha)"
  expr2 "Y_d == 0 ? 0 : pow( (Y_d-c_beta)/c_alpha, (1-c_gamma)/c_gamma) * ((b-c_beta)/c_alpha)"
  name ST2084_2_HLG_1000nits_f3_3
  label "ACESlib.Utilities_Color.ctl : 469\n// HLG Inverse EOTF (i.e. HLG inverse OOTF followed by the HLG OETF)\n// HLG Inverse OOTF (display linear to scene linear)"
  xpos 950
  ypos 2732
  addUserKnob {20 Constants_tab l Constants}
  addUserKnob {7 L_w +DISABLED}
  L_w 1000
  addUserKnob {7 L_b +DISABLED}
  addUserKnob {7 c_alpha +DISABLED}
  c_alpha {{L_w-L_b}}
  addUserKnob {7 c_beta +DISABLED}
  c_beta {{L_b}}
  addUserKnob {7 c_gamma +DISABLED}
  c_gamma 1.2
 }
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue none}
  expr0 "r <= 1.0/12 ? sqrt(3.0*r) : c_a * log(12.0 * r - c_b) + c_c"
  expr1 "g <= 1.0/12 ? sqrt(3.0*g) : c_a * log(12.0 * g- c_b) + c_c"
  expr2 "b <= 1.0/12 ? sqrt(3.0*b) : c_a * log(12.0 * b - c_b) + c_c"
  name ST2084_2_HLG_1000nits_f3_
  label "ACESlib.Utilities_Color.ctl : 493\n// HLG OETF (scene linear to non-linear signal value)"
  xpos 950
  ypos 2834
  addUserKnob {20 Constants_tab l Constants}
  addUserKnob {7 c_a +DISABLED}
  c_a 0.17883277
  addUserKnob {7 c_b t 1.-4.*a +DISABLED}
  c_b 0.28466892
  addUserKnob {7 c_c t 0.5-a*log(4.*a) +DISABLED}
  c_c 0.55991073
 }
 Dot {
  name Dot17
  label " HLG"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 984
  ypos 2970
 }
push $N10044570
 Dot {
  name Dot27
  label " PQ"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 2970
 }
push $N10000850
 Expression {
  expr0 "pow( (48./52.37) * r, 1./2.6)"
  expr1 "pow( (48./52.37) * g, 1./2.6)"
  expr2 "pow( (48./52.37) * b, 1./2.6)"
  expr3 1
  name dcdm_encode
  xpos 180
  ypos 2702
 }
push $Nfffb950
 Expression {
  expr0 pow(r,1/gamma)
  expr1 pow(g,1/gamma)
  expr2 pow(b,1/gamma)
  name pow_f3_gamma_26_
  label "ACESlib.Utilities_Color.ctl : 260\n// Gamma 2.6"
  xpos -40
  ypos 2690
  addUserKnob {20 Gamma_tab l Gamma}
  addUserKnob {7 gamma R 0 4}
  gamma 2.6
 }
push $Nfff6a50
 Expression {
  expr0 pow(r,1/gamma)
  expr1 pow(g,1/gamma)
  expr2 pow(b,1/gamma)
  name pow_f3_gamma_24_
  label "ACESlib.Utilities_Color.ctl : 260\n// Gamma 2.4"
  xpos -260
  ypos 2690
  addUserKnob {20 Gamma_tab l Gamma}
  addUserKnob {7 gamma R 0 4}
  gamma 2.4
 }
push $Nfff1b50
 Expression {
  expr0 pow(r,1/gamma)
  expr1 pow(g,1/gamma)
  expr2 pow(b,1/gamma)
  name pow_f3_gamma_22_
  label "ACESlib.Utilities_Color.ctl : 260\n// Gamma 2.2"
  xpos -480
  ypos 2690
  addUserKnob {20 Gamma_tab l Gamma}
  addUserKnob {7 gamma R 0 4}
  gamma 2.2
 }
push $Nffecc50
 Expression {
  temp_name0 c_a
  temp_expr0 "pow( pow( Lw, 1./gamma) - pow( Lb, 1./gamma), gamma)"
  temp_name1 c_b
  temp_expr1 "pow( Lb, 1./gamma) / ( pow( Lw, 1./gamma) - pow( Lb, 1./gamma))"
  expr0 "pow( max( r / c_a, 0.), 1.0/gamma) - c_b"
  expr1 "pow( max( g / c_a, 0.), 1.0/gamma) - c_b"
  expr2 "pow( max( b / c_a, 0.), 1.0/gamma) - c_b"
  name bt1886_r_f3
  label "ACESlib.Utilities_Color.ctl : 301\n// The reference EOTF specified in Rec. ITU-R BT.1886\n// L = a(max\[(V+b),0])^g"
  xpos -700
  ypos 2684
  addUserKnob {20 Luminance}
  addUserKnob {7 Lw R 48 10000}
  Lw 1
  addUserKnob {7 Lb R 0.0001 0.02}
  addUserKnob {7 gamma R 1 4}
  gamma 2.4
 }
push $Nffe7d80
 Expression {
  temp_name0 yb
  temp_expr0 "pow( offs * gamma / ( ( gamma - 1.0) * ( 1.0 + offs)), gamma)"
  temp_name1 rs
  temp_expr1 "pow( ( gamma - 1.0) / offs, gamma - 1.0) * pow( ( 1.0 + offs) / gamma, gamma)"
  expr0 "r >= yb ? ( 1.0 + offs) * pow( r, 1.0 / gamma) - offs : r * rs"
  expr1 "g >= yb ? ( 1.0 + offs) * pow( g, 1.0 / gamma) - offs : g * rs"
  expr2 "b >= yb ? ( 1.0 + offs) * pow( b, 1.0 / gamma) - offs : b * rs"
  name moncurve_r_f3_
  label "ACESlib.Utilities_Color.ctl : 260\nmoncurve_r with gamma of 2.4 and offset of 0.055 matches the EOTF found in IEC 61966-2-1:1999 (sRGB)"
  xpos -920
  ypos 2690
  addUserKnob {20 Luminance}
  addUserKnob {7 gamma R 0 4}
  gamma 2.4
  addUserKnob {7 offs}
  offs 0.055
 }
 Switch {
  inputs 10
  which {{parent.eotf}}
  name EOTF_Switch
  xpos -1250
  ypos 2966
 }
 Expression {
  temp_name0 REFBLACK
  temp_expr0 "64 / 1023"
  temp_name1 REFWHITE
  temp_expr1 "940 / 1023"
  expr0 "r * ( REFWHITE - REFBLACK) + REFBLACK"
  expr1 "g * ( REFWHITE - REFBLACK) + REFBLACK"
  expr2 "b * ( REFWHITE - REFBLACK) + REFBLACK"
  name fullRange_to_smpteRange_f3_
  label "ACESlib.OutputTransforms.ctl : 216"
  xpos -1250
  ypos 3224
  disable {{!parent.legal_range}}
 }
 Output {
  name Output
  xpos -1250
  ypos 3446
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0x535a61ff
  label "\n<b>ACESlib.RRT_Common.ctl : 135</b>\n<pre>\nfloat\[3] rrt_sweeteners( float in\[3])\n\{\n    float aces\[3] = in;\n    \n    // --- Glow module --- //\n    float saturation = rgb_2_saturation( aces);\n    float ycIn = rgb_2_yc( aces);\n    float s = sigmoid_shaper( (saturation - 0.4) / 0.2);\n    float addedGlow = 1. + glow_fwd( ycIn, RRT_GLOW_GAIN * s, RRT_GLOW_MID);\n\n    aces = mult_f_f3( addedGlow, aces);\n\n    // --- Red modifier --- //\n    float hue = rgb_2_hue( aces);\n    float centeredHue = center_hue( hue, RRT_RED_HUE);\n    float hueWeight = cubic_basis_shaper( centeredHue, RRT_RED_WIDTH);\n\n    aces\[0] = aces\[0] + hueWeight * saturation * (RRT_RED_PIVOT - aces\[0]) * (1. - RRT_RED_SCALE);\n\n    // --- ACES to RGB rendering space --- //\n    aces = clamp_f3( aces, 0., HALF_POS_INF);\n    float rgbPre\[3] = mult_f3_f44( aces, AP0_2_AP1_MAT);\n    rgbPre = clamp_f3( rgbPre, 0., HALF_MAX);\n    \n    // --- Global desaturation --- //\n    rgbPre = mult_f3_f33( rgbPre, RRT_SAT_MAT);\n    return rgbPre;\n\}\n\n\n\n"
  note_font_size 10
  xpos -825
  ypos -1204
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0x535a61ff
  label "\n\n<b>ACESlib.SSTS.ctl : 163</b><pre>float ssts\n( \n    varying float x,\n    varying TsParams C\n)\n\{\n    const int N_KNOTS_LOW = 4;\n    const int N_KNOTS_HIGH = 4;\n\n    // Check for negatives or zero before taking the log. If negative or zero,\n    // set to HALF_MIN.\n    float logx = log10( max(x, HALF_MIN )); \n\n    float logy;\n\n    if ( logx <= log10(C.Min.x) ) \{ \n\n        logy = logx * C.Min.slope + ( log10(C.Min.y) - C.Min.slope * log10(C.Min.x) );\n\n    \} else if (( logx > log10(C.Min.x) ) && ( logx < log10(C.Mid.x) )) \{\n\n        float knot_coord = (N_KNOTS_LOW-1) * (logx-log10(C.Min.x))/(log10(C.Mid.x)-log10(C.Min.x));\n        int j = knot_coord;\n        float t = knot_coord - j;\n\n        float cf\[ 3] = \{ C.coefsLow\[ j], C.coefsLow\[ j + 1], C.coefsLow\[ j + 2]\};\n\n        float monomials\[ 3] = \{ t * t, t, 1. \};\n        logy = dot_f3_f3( monomials, mult_f3_f33( cf, M1));\n\n    \} else if (( logx >= log10(C.Mid.x) ) && ( logx < log10(C.Max.x) )) \{\n\n        float knot_coord = (N_KNOTS_HIGH-1) * (logx-log10(C.Mid.x))/(log10(C.Max.x)-log10(C.Mid.x));\n        int j = knot_coord;\n        float t = knot_coord - j;\n\n        float cf\[ 3] = \{ C.coefsHigh\[ j], C.coefsHigh\[ j + 1], C.coefsHigh\[ j + 2]\}; \n\n        float monomials\[ 3] = \{ t * t, t, 1. \};\n        logy = dot_f3_f3( monomials, mult_f3_f33( cf, M1));\n\n    \} else \{ //if ( logIn >= log10(C.Max.x) ) \{ \n\n        logy = logx * C.Max.slope + ( log10(C.Max.y) - C.Max.slope * log10(C.Max.x) );\n\n    \}\n\n    return pow10(logy);\n\n\}"
  note_font_size 10
  xpos -830
  ypos -664
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0x535a61ff
  label "\n\n<b>ACESlib.Tonescales.ctl : 271</b><pre>float segmented_spline_c9_fwd\n  ( \n    varying float x,\n    varying SegmentedSplineParams_c9 C = ODT_48nits\n  )\n\{    \n  const int N_KNOTS_LOW = 8;\n  const int N_KNOTS_HIGH = 8;\n\n  // Check for negatives or zero before taking the log. If negative or zero,\n  // set to HALF_MIN.\n  float logx = log10( max(x, HALF_MIN )); \n\n  float logy;\n\n  if ( logx <= log10(C.minPoint.x) ) \{ \n\n    logy = logx * C.slopeLow + ( log10(C.minPoint.y) - C.slopeLow * log10(C.minPoint.x) );\n\n  \} else if (( logx > log10(C.minPoint.x) ) && ( logx < log10(C.midPoint.x) )) \{\n\n    float knot_coord = (N_KNOTS_LOW-1) * (logx-log10(C.minPoint.x))/(log10(C.midPoint.x)-log10(C.minPoint.x));\n    int j = knot_coord;\n    float t = knot_coord - j;\n\n    float cf\[ 3] = \{ C.coefsLow\[ j], C.coefsLow\[ j + 1], C.coefsLow\[ j + 2]\};\n    \n    float monomials\[ 3] = \{ t * t, t, 1. \};\n    logy = dot_f3_f3( monomials, mult_f3_f33( cf, M));\n\n  \} else if (( logx >= log10(C.midPoint.x) ) && ( logx < log10(C.maxPoint.x) )) \{\n\n    float knot_coord = (N_KNOTS_HIGH-1) * (logx-log10(C.midPoint.x))/(log10(C.maxPoint.x)-log10(C.midPoint.x));\n    int j = knot_coord;\n    float t = knot_coord - j;\n\n    float cf\[ 3] = \{ C.coefsHigh\[ j], C.coefsHigh\[ j + 1], C.coefsHigh\[ j + 2]\}; \n\n    float monomials\[ 3] = \{ t * t, t, 1. \};\n    logy = dot_f3_f3( monomials, mult_f3_f33( cf, M));\n\n  \} else \{ //if ( logIn >= log10(C.maxPoint.x) ) \{ \n\n    logy = logx * C.slopeHigh + ( log10(C.maxPoint.y) - C.slopeHigh * log10(C.maxPoint.x) );\n\n  \}\n\n  return pow10(logy);\n  \n\}"
  note_font_size 10
  xpos -200
  ypos -660
 }
end_group
OCIODisplay {
 inputs 0
 colorspace scene_linear
 display rec1886
 view tcam
 name OCIODisplay1
 label "\[value display]: \[value view]"
 note_font Helvetica
 xpos 9343
 ypos 7234
}
push $Na440710
NoOp {
 name ___pointer_rcyo3
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 8870
 ypos 6335
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_rcyo
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
push $N81b1110
push $N7c79050
push $N7d50e10
push $N80be610
push $N8ac1cc0
push $N811b380
push $N816d6d0
push $N8772d60
push $N87c5060
push $N8447c90
push $N849a150
push $N85063e0
push $N8558870
push $N85aadb0
push $N85fd270
push $N864f730
push $N86a1bf0
push $N86f40b0
push $N8f5e080
push $N8fb0540
push $N9002a00
push $N9056120
push $N90a85e0
push $N90faaa0
push $N914cf60
push $N919f420
push $N91f1a30
push $N92444f0
push $N9296ab0
push $N92e9070
push $N933b530
push $N938d9f0
push $N93e06c0
push $N9432b80
push $N9485040
push $N94d7530
push $N95299f0
push $N957beb0
push $Na143a80
push $Na195f50
push $Na1e8430
push $Na23a900
Switch {
 inputs 42
 which {{"frame -1"}}
 name Switch3
 note_font Helvetica
 xpos 14040
 ypos 5271
 hide_input true
}
FrameRange {
 first_frame 1
 last_frame 42
 time ""
 name FrameRange1
 label "\[value first_frame]-\[value last_frame]"
 note_font Helvetica
 xpos 14040
 ypos 5295
}
Dot {
 name Dot122
 label " Alexa Wide Gamut"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 14074
 ypos 5370
}
NoOp {
 name ___anchor_xohd
 tile_color 0x989898ff
 label "<font size=7>\[value title]"
 note_font Helvetica
 xpos 14040
 ypos 5423
 icon Output.png
 addUserKnob {20 anchor_tab l anchor}
 addUserKnob {1 title}
 title "Alexa Wide Gamut"
}
NoOp {
 name ___pointer_xohd
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7> \[if \{\[exists input.title]\} \{return \[value input.title]\}]"
 note_font Helvetica
 xpos 9090
 ypos 6335
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target ___anchor_xohd
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
push $Ncc57ff0
Group {
 name GamutCompress_blink3
 label "\[value method] : \[value direction]\ndefaults"
 xpos 7550
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.2
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.2
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
push $Ncc57ff0
Group {
 name GamutCompress_blink11
 label "\[value method] : \[value direction]\nmax distance for image"
 xpos 7770
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method atan
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.03131032
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.14391696
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
push $Nca2d170
Group {
 name GamutCompress_blink9
 label "\[value method] : \[value direction]\ndefaults"
 xpos 8210
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method atan
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.2
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.2
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
push $Nca2d170
Group {
 name GamutCompress_blink10
 label "\[value method] : \[value direction]\nmax distance for rwg"
 xpos 8320
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method atan
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.05902803
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.20120943
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.24509275
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
push $Nca2d170
Group {
 name GamutCompress_blink12
 label "\[value method] : \[value direction]\nmax distance for image"
 xpos 8430
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method atan
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.05902803
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.08658242
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.24960935
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
Group {
 inputs 0
 name GamutPrimaries1
 xpos 7660
 ypos 6639
 postage_stamp true
 addUserKnob {20 GamutPrimaries_tab l GamutPrimaries}
 addUserKnob {41 gamut T ColorMatrix5.gamut}
 addUserKnob {41 red T Primaries.red}
 addUserKnob {41 green T Primaries.green}
 addUserKnob {41 blue T Primaries.blue}
 addUserKnob {41 white T Primaries.white}
}
 Constant {
  inputs 0
  color {0 0 0 0}
  format "4 1 0 0 4 1 1 rgbw"
  name Constant3
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos -42
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 4
  box_height 2
  box_fixed true
  name Reformat1
  xpos 509
  ypos -16
 }
 Rectangle {
  area {0 0 1 2}
  color {1 0 0 0}
  name Rectangle1
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 10
 }
 Rectangle {
  area {1 0 2 2}
  color {0 1 0 0}
  name Rectangle2
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 36
 }
 Rectangle {
  area {2 0 3 2}
  color {0 0 1 0}
  name Rectangle3
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 59
 }
 Rectangle {
  area {3 0 4 2}
  color {1 1 1 0}
  name Rectangle4
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 85
 }
 Group {
  name ColorMatrix5
  label "\[value gamut] to XYZ\n"
  xpos 509
  ypos 128
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI ArriAlexaWideGamut "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB GoProProtune CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut ""}}
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 33
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy +DISABLED}
   rxy {{curve(which) 0 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28}}
   addUserKnob {12 gxy +DISABLED}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165} {curve(which) 0 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84}}
   addUserKnob {12 bxy +DISABLED}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03}}
   addUserKnob {12 wxy +DISABLED}
   wxy {{curve(which) 0.33333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127} {curve(which) 0.33333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
set Ne6e92b0 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 509
  ypos 185
 }
 NoOp {
  name Primaries
  note_font "Bitstream Vera Sans"
  xpos 509
  ypos 238
  addUserKnob {20 User}
  addUserKnob {12 red}
  red {{"\[sample this green 0 0]"} {"\[sample this blue 0 0]"}}
  addUserKnob {12 green}
  green {{"\[sample this green 1 0]"} {"\[sample this blue 1 0]"}}
  addUserKnob {12 blue}
  blue {{"\[sample this green 2 0]"} {"\[sample this blue 2 0]"}}
  addUserKnob {12 white}
  white {{"\[sample this green 3 0]"} {"\[sample this blue 3 0]"}}
 }
push $Ne6e92b0
 Output {
  name Output
  xpos 400
  ypos 134
 }
end_group
Group {
 name ChromaticityConverter_live5
 tile_color 0xbd91c9ff
 label "\[if \{\[value invert]\} \{return \"\[value dst_colorspace_name] to \[value src_colorspace_name]\"\} else \{return \"\[value src_colorspace_name] to \[value dst_colorspace_name]\"\}]"
 xpos 7660
 ypos 6752
 addUserKnob {20 ChromaticityConverter_tab l ChromaticityConverter}
 addUserKnob {26 colorspace_chromaticities_label l " " T "<b>Src Colorspace Chromaticities</b>"}
 addUserKnob {35 src_presets l preset M {colorspace/ACES "knobs this \{rxy \{0.73470 0.26530\} gxy \{0.00000 1.00000\} bxy \{0.00010 -0.07700\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{rxy \{0.713 0.293\} gxy \{0.165 0.830\} bxy \{0.128 0.044\} wxy \{0.32168 0.33767\} src_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ rxy \{0.8 0.3177\} gxy \{0.18 0.9\} bxy \{0.065 -0.0805\} wxy \{0.3127 0.329\} src_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{rxy \{0.64000 0.33000\} gxy \{0.30000 0.60000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.32168 0.33767\} src_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.3127 0.329\} src_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{rxy \{0.68000 0.32000\} gxy \{0.26500 0.69000\} bxy \{0.15000 0.06000\} wxy \{0.314 0.351\} src_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{rxy \{0.68400 0.31300\} gxy \{0.22100 0.84800\} bxy \{0.08610 -0.10200\} wxy \{0.3127 0.329\} src_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{rxy \{0.753044222785 0.327830576682\} gxy \{0.299570228481 0.700699321956\} bxy \{0.079642066735 -0.0549379510888\} wxy \{0.321683187724 0.337673316035\} src_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{rxy \{0.753044491143 0.327831029513\} gxy \{0.299570490451 0.700699415614\} bxy \{0.145011584278 0.0510971250879\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{rxy \{0.699747001291 0.329046930313\} gxy \{0.304264039024 0.623641145129\} bxy \{0.134913961296 0.0347174412813\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{rxy \{0.878682510476 0.32496400741\} gxy \{0.300888714367 0.679054755791\} bxy \{0.0953986946056 -0.0293793268343\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{rxy \{0.701181035906 0.329014155583\} gxy \{0.300600304652 0.683788834269\} bxy \{0.108154455624 -0.00868817578666\} wxy \{0.321683210353 0.337673610062\} src_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{rxy \{0.701180591892 0.329013699116\} gxy \{0.300600395529 0.683788824257\} bxy \{0.145331946229 0.0516168036226\} wxy \{0.321683289449 0.337673447208\} src_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{rxy \{0.780308 0.304253\} gxy \{0.121595 1.493994\} bxy \{0.095612 -0.084589\} wxy \{0.3127 0.329\} src_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{rxy \{0.69848046 0.19302645\} gxy \{0.32955538 1.02459662\} bxy \{0.10844263 -0.03467857\} wxy \{0.3127 0.329\} src_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{rxy \{0.74 0.27\} gxy \{0.17 1.14\} bxy \{0.08 -0.1\} wxy \{0.3127 0.329\} src_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{rxy \{0.73 0.28\} gxy \{0.14 0.855\} bxy \{0.1 -0.05\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{rxy \{0.766 0.275\} gxy \{0.225 0.8\} bxy \{0.089 -0.087\} wxy \{0.3127 0.329\} src_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{rxy \{0.730 0.280\} gxy \{0.165 0.840\} bxy \{0.100 -0.030\} wxy \{0.3127 0.329\} src_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{rxy \{0.71 0.31\} gxy \{0.21 0.88\} bxy \{0.09 -0.08\} wxy \{0.3127 0.329\} src_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{rxy \{0.70800 0.29200\} gxy \{0.17000 0.79700\} bxy \{0.13100 0.04600\} wxy \{0.3127 0.329\} src_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{rxy \{0.9173 0.2502\} gxy \{0.2833 1.7072\} bxy \{0.0856 -0.0708\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{rxy \{0.7422 0.2859\} gxy \{0.4140 1.3035\} bxy \{0.0342 -0.0833\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{rxy \{1.0625 0.3948\} gxy \{0.3689 0.7775\} bxy \{0.0956 -0.0332\} wxy \{0.3135 0.3305\} src_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{rxy \{0.9175 0.2983\} gxy \{0.2983 1.2835\} bxy \{0.0756 -0.0860\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{rxy \{0.8608 0.3689\} gxy \{0.3282 0.6156\} bxy \{0.0783 -0.0233\} wxy \{0.3127 0.329\} src_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{rxy \{0.7177 0.3171\} gxy \{0.2280 0.8616\} bxy \{0.1006 -0.0820\} wxy \{0.3127 0.329\} src_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{rxy \{0.6400 0.3300\} gxy \{0.2100 0.7100\} bxy \{0.1500 0.0600\} wxy \{0.3127 0.329\} src_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{rxy \{0.7347 0.2653\} gxy \{0.1152 0.8264\} bxy \{0.1566 0.0177\} wxy \{0.3457 0.3585\} src_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01  8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{rxy \{7.34700000e-01 2.65300000e-01\} gxy \{1.59600000e-01 8.40400000e-01\} bxy \{3.66000000e-02 1.00000000e-04\} wxy \{0.3457 0.3585\} src_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{rxy \{0.734699 0.265301\} gxy \{0.159597 0.840403\} bxy \{0.036598 0.000105\} wxy \{0.345704 0.358540\} src_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{rxy \{0.6900 0.3100\} gxy \{0.1800 0.7700\} bxy \{0.1000 0.0200\} wxy \{0.33243 0.34744\} src_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{rxy \{0.6898 0.3206\} gxy \{0.0736 0.9003\} bxy \{0.1166 0.0374\} wxy \{0.33333333 0.33333333\} src_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{rxy \{0.6250 0.3400\} gxy \{0.2800 0.5950\} bxy \{0.1550 0.0700\} wxy \{0.3127 0.329\} src_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{rxy \{0.735191637630662 0.264808362369338\} gxy \{0.215336134453781 0.774159663865546\} bxy \{0.130122950819672 0.034836065573770\} wxy \{0.3457 0.3585\} src_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{rxy \{1 0\} gxy \{0 1\} bxy \{0 0\} wxy \{0.33333333  0.33333333\} src_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 rxy l r T _knobchanged_.rxy}
 addUserKnob {41 gxy l g T _knobchanged_.gxy}
 addUserKnob {41 bxy l b T _knobchanged_.bxy}
 addUserKnob {41 wxy l w T _knobchanged_.wxy}
 addUserKnob {1 src_colorspace_name l src +DISABLED}
 src_colorspace_name REDWideGamutRGB
 addUserKnob {26 ""}
 addUserKnob {26 dst_colorspace_chromaticities_label l " " T "<b>Dst Colorspace Chromaticities</b>"}
 addUserKnob {35 dst_presets l preset M {colorspace/ACES "knobs this \{drxy \{0.73470 0.26530\} dgxy \{0.00000 1.00000\} dbxy \{0.00010 -0.07700\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACES\}\}" colorspace/ACEScg "knobs this \{drxy \{0.713 0.293\} dgxy \{0.165 0.830\} dbxy \{0.128 0.044\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{ACEScg\}\}" "colorspace/Filmlight E-Gamut" "knobs this \{ drxy \{0.8 0.3177\} dgxy \{0.18 0.9\} dbxy \{0.065 -0.0805\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Filmlight E-Gamut\}\}" colorspace/Rec709 "knobs this \{drxy \{0.64000 0.33000\} dgxy \{0.30000 0.60000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec709\}\}" colorspace/Rec2020 "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Rec2020\}\}" colorspace/P3D60 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.32168 0.33767\} dst_colorspace_name \{P3D60\}\}" colorspace/P3D65 "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.3127 0.329\} dst_colorspace_name \{P3D65\}\}" colorspace/P3DCI "knobs this \{drxy \{0.68000 0.32000\} dgxy \{0.26500 0.69000\} dbxy \{0.15000 0.06000\} dwxy \{0.314 0.351\} dst_colorspace_name \{P3DCI\}\}" "colorspace/Arri AlexaWideGamut" "knobs this \{drxy \{0.68400 0.31300\} dgxy \{0.22100 0.84800\} dbxy \{0.08610 -0.10200\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Arri AlexaWideGamut\}\}" colorspace/REDDRAGONcolor "knobs this \{drxy \{0.753044222785 0.327830576682\} dgxy \{0.299570228481 0.700699321956\} dbxy \{0.079642066735 -0.0549379510888\} dwxy \{0.321683187724 0.337673316035\} dst_colorspace_name \{REDDRAGONcolor\}\}" colorspace/REDDRAGONcolor2 "knobs this \{drxy \{0.753044491143 0.327831029513\} dgxy \{0.299570490451 0.700699415614\} dbxy \{0.145011584278 0.0510971250879\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDDRAGONcolor2\}\}" colorspace/REDcolor "knobs this \{drxy \{0.699747001291 0.329046930313\} dgxy \{0.304264039024 0.623641145129\} dbxy \{0.134913961296 0.0347174412813\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor\}\}" colorspace/REDcolor2 "knobs this \{drxy \{0.878682510476 0.32496400741\} dgxy \{0.300888714367 0.679054755791\} dbxy \{0.0953986946056 -0.0293793268343\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor2\}\}" colorspace/REDcolor3 "knobs this \{drxy \{0.701181035906 0.329014155583\} dgxy \{0.300600304652 0.683788834269\} dbxy \{0.108154455624 -0.00868817578666\} dwxy \{0.321683210353 0.337673610062\} dst_colorspace_name \{REDcolor3\}\}" colorspace/REDcolor4 "knobs this \{drxy \{0.701180591892 0.329013699116\} dgxy \{0.300600395529 0.683788824257\} dbxy \{0.145331946229 0.0516168036226\} dwxy \{0.321683289449 0.337673447208\} dst_colorspace_name \{REDcolor4\}\}" colorspace/REDWideGamutRGB "knobs this \{drxy \{0.780308 0.304253\} dgxy \{0.121595 1.493994\} dbxy \{0.095612 -0.084589\} dwxy \{0.3127 0.329\} dst_colorspace_name \{REDWideGamutRGB\}\}" "colorspace/GoPro Protune Native" "knobs this \{drxy \{0.69848046 0.19302645\} dgxy \{0.32955538 1.02459662\} dbxy \{0.10844263 -0.03467857\} dwxy \{0.3127 0.329\} dst_colorspace_name \{GoPro Protune Native\}\}" colorspace/CanonCinemaGamut "knobs this \{drxy \{0.74 0.27\} dgxy \{0.17 1.14\} dbxy \{0.08 -0.1\} dwxy \{0.3127 0.329\} dst_colorspace_name \{CanonCinemaGamut\}\}" colorspace/SonySGamut "knobs this \{drxy \{0.73 0.28\} dgxy \{0.14 0.855\} dbxy \{0.1 -0.05\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut\}\}" colorspace/SonySGamut3Cine "knobs this \{drxy \{0.766 0.275\} dgxy \{0.225 0.8\} dbxy \{0.089 -0.087\} dwxy \{0.3127 0.329\} dst_colorspace_name \{SonySGamut3Cine\}\}" colorspace/PanasonicVGamut "knobs this \{drxy \{0.730 0.280\} dgxy \{0.165 0.840\} dbxy \{0.100 -0.030\} dwxy \{0.3127 0.329\} dst_colorspace_name \{PanasonicVGamut\}\}" "colorspace/DJI D-Gamut" "knobs this \{drxy \{0.71 0.31\} dgxy \{0.21 0.88\} dbxy \{0.09 -0.08\} dwxy \{0.3127 0.329\} dst_colorspace_name \{DJI D-Gamut\}\}" "colorspace/Fujifilm F-Gamut" "knobs this \{drxy \{0.70800 0.29200\} dgxy \{0.17000 0.79700\} dbxy \{0.13100 0.04600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{Fujifilm F-Gamut\}\}" colorspace/BMDFilmV1 "knobs this \{drxy \{0.9173 0.2502\} dgxy \{0.2833 1.7072\} dbxy \{0.0856 -0.0708\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMDFilmV1\}\}" colorspace/BMD4kFilmV1 "knobs this \{drxy \{0.7422 0.2859\} dgxy \{0.4140 1.3035\} dbxy \{0.0342 -0.0833\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV1\}\}" colorspace/BMD4kFilmV3 "knobs this \{drxy \{1.0625 0.3948\} dgxy \{0.3689 0.7775\} dbxy \{0.0956 -0.0332\} dwxy \{0.3135 0.3305\} dst_colorspace_name \{BMD4kFilmV3\}\}" colorspace/BMD46kFilmV1 "knobs this \{drxy \{0.9175 0.2983\} dgxy \{0.2983 1.2835\} dbxy \{0.0756 -0.0860\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV1\}\}" colorspace/BMD46kFilmV3 "knobs this \{drxy \{0.8608 0.3689\} dgxy \{0.3282 0.6156\} dbxy \{0.0783 -0.0233\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMD46kFilmV3\}\}" colorspace/BMDWideGamutV4 "knobs this \{drxy \{0.7177 0.3171\} dgxy \{0.2280 0.8616\} dbxy \{0.1006 -0.0820\} dwxy \{0.3127 0.329\} dst_colorspace_name \{BMDWideGamutV4\}\}" "colorspace/AdobeRGB\t" "knobs this \{drxy \{0.6400 0.3300\} dgxy \{0.2100 0.7100\} dbxy \{0.1500 0.0600\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AdobeRGB\}\}" colorspace/AdobeWideGamutRGB "knobs this \{drxy \{0.7347 0.2653\} dgxy \{0.1152 0.8264\} dbxy \{0.1566 0.0177\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{AdobeWideGamutRGB\}\}" colorspace/ROMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01  8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ROMM\}\}" colorspace/RIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{RIMM\}\}" colorspace/ERIMM "knobs this \{drxy \{7.34700000e-01 2.65300000e-01\} dgxy \{1.59600000e-01 8.40400000e-01\} dbxy \{3.66000000e-02 1.00000000e-04\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{ERIMM\}\}" colorspace/ProPhotoRGB "knobs this \{drxy \{0.734699 0.265301\} dgxy \{0.159597 0.840403\} dbxy \{0.036598 0.000105\} dwxy \{0.345704 0.358540\} dst_colorspace_name \{ProPhotoRGB\}\}" colorspace/RusselRGB "knobs this \{drxy \{0.6900 0.3100\} dgxy \{0.1800 0.7700\} dbxy \{0.1000 0.0200\} dwxy \{0.33243 0.34744\} dst_colorspace_name \{RusselRGB\}\}" colorspace/SharpRGB "knobs this \{drxy \{0.6898 0.3206\} dgxy \{0.0736 0.9003\} dbxy \{0.1166 0.0374\} dwxy \{0.33333333 0.33333333\} dst_colorspace_name \{SharpRGB\}\}" colorspace/AppleRGB "knobs this \{drxy \{0.6250 0.3400\} dgxy \{0.2800 0.5950\} dbxy \{0.1550 0.0700\} dwxy \{0.3127 0.329\} dst_colorspace_name \{AppleRGB\}\}" colorspace/BestRGB "knobs this \{drxy \{0.735191637630662 0.264808362369338\} dgxy \{0.215336134453781 0.774159663865546\} dbxy \{0.130122950819672 0.034836065573770\} dwxy \{0.3457 0.3585\} dst_colorspace_name \{BestRGB\}\}" colorspace/XYZ "knobs this \{drxy \{1 0\} dgxy \{0 1\} dbxy \{0 0\} dwxy \{0.33333333  0.33333333\} dst_colorspace_name \{XYZ\}\}"}}
 addUserKnob {41 drxy l r T _knobchanged_.drxy}
 addUserKnob {41 dgxy l g T _knobchanged_.dgxy}
 addUserKnob {41 dbxy l b T _knobchanged_.dbxy}
 addUserKnob {41 dwxy l w T _knobchanged_.dwxy}
 addUserKnob {1 dst_colorspace_name l dst +DISABLED}
 dst_colorspace_name ACEScg
 addUserKnob {26 ""}
 addUserKnob {26 chromatic_adaptation_label l " " T "<b>Chromatic Adaptation</b>"}
 addUserKnob {41 cat_method l method T _knobchanged_.cat_method}
 addUserKnob {26 ""}
 addUserKnob {41 invert T _knobchanged_.invert}
 addUserKnob {22 create_matrix_node l "Create Matrix" t "Create ColorMatrix node with the current values." T "node = nuke.thisNode()\nnode\['calculate_matrix'].execute()\nnuke.root().begin()\n_ = \[n.setSelected(False) for n in nuke.allNodes(recurseGroups=True)]\nm = nuke.createNode('ColorMatrix')\nm\['matrix'].setValue(node\['matrix'].getValue())\nm.setXYpos(node.xpos()-120, node.ypos())\nm\['label'].setValue(node\['label'].getValue())" +STARTLINE}
 addUserKnob {41 matrix T ColorMatrix.matrix}
 addUserKnob {22 clear l Clear T "n = nuke.thisNode()\nn\['matrix'].setValue(\[1,0,0,0,1,0,0,0,1])\nn\['label'].setValue('')" +STARTLINE}
 addUserKnob {22 show_matrix l Show t "Show matrix values in a popup window for copying." T "node = nuke.thisNode()\nshow_4x4 = node\['show_matrix_4x4'].getValue()\nshow_commas = node\['show_matrix_commas'].getValue()\n\nif show_commas:\n    sep = ', '\nelse:\n    sep = ' '\n\nmtx = \[format(i, '.8f') for i in node\['matrix'].getValue()]\n\nif show_4x4:\n    z = \['0']\n    mtx = mtx\[0:3] + z + mtx\[3:6] + z + mtx\[6:9] + z*4 + \['1']\n\nnuke.message(sep.join(mtx))" +STARTLINE}
 addUserKnob {6 show_matrix_4x4 l "show 4x4" t "present values in a 4x4 matrix (useful for ocio)" -STARTLINE}
 addUserKnob {6 show_matrix_commas l "show comma sep" t "show matrix comma separated." -STARTLINE}
 addUserKnob {22 save_spimtx l "Save spimtx" T "# inspired by ColorMatrixPlus by hpd\ndef write_spimtx(mtx_node, spimtx_file):\n    mtx_vals = mtx_node\['matrix'].getValue()\n    with open(spimtx_file, \"w\") as f:\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[0], mtx_vals\[1], mtx_vals\[2]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[3], mtx_vals\[4], mtx_vals\[5]) )\n        f.write( \"%3.6f %3.6f %3.6f 0.0\\n\" % (\n            mtx_vals\[6], mtx_vals\[7], mtx_vals\[8]) )\n\nnode = nuke.thisNode()\nfilepath = nuke.getFilename('Save Matrix', '*.spimtx')\n\nif filepath:\n    if not filepath.endswith('.spimtx'):\n        filepath = filepath + '.spimtx'\n    write_spimtx(node, filepath)" +STARTLINE}
 addUserKnob {22 load_spimtx l "Load spimtx" -STARTLINE T "# Inspired by ColorMatrixPlus by hpd\ndef load_spimtx(spimtx, mtx_node):\n    with open( spimtx, 'r') as file:\n        lines = file.readlines()\n    matrix_values = list()\n    for line in lines:\n        matrix_values.extend( map(float, line.strip().split(' ')\[0:3]) )\n    mtx_node\['matrix'].setValue(matrix_values)\n\nspimtx = nuke.getFilename('Load SPIMTX', '*.spimtx')\nif spimtx:\n    load_spimtx( spimtx, nuke.thisNode() )\n"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos 206
 }
 Dot {
  name _knobchanged_
  knobChanged "import nuke\nfloat2 = nuke.math.Vector2\nfloat3 = nuke.math.Vector3\nfloat3x3 = nuke.math.Matrix3\n\nCONE_RESP_MAT_BRADFORD = float3x3()\nCONE_RESP_MAT_CAT02 = float3x3()\nCONE_RESP_MAT_VONKRIES = float3x3()\nCONE_RESP_MAT_SHARP = float3x3()\nCONE_RESP_MAT_CMCCAT2000 = float3x3()\n\n# From ACESlib.Utilities_Color : 166\nCONE_RESP_MAT_BRADFORD.set(0.89510, -0.75020,  0.03890, 0.26640,  1.71350, -0.06850, -0.16140,  0.03670,  1.02960)\nCONE_RESP_MAT_CAT02.set(0.73280, -0.70360,  0.00300, 0.42960,  1.69750,  0.01360, -0.16240, 0.00610, 0.98340)\n\n# https://web.stanford.edu/~sujason/ColorBalancing/adaptation.html\n# from S. Bianco. \"Two New von Kries Based Chromatic Adapatation Transforms Found by Numerical Optimization.\"\nCONE_RESP_MAT_VONKRIES.set(0.40024, -0.2263, 0, 0.7076, 1.16532, 0, -0.08081, 0.0457, 0.91822)\nCONE_RESP_MAT_SHARP.set(1.2694, -0.8364, 0.0297, -0.0988, 1.8006, -0.0315, -0.1706, 0.0357, 1.0018)\nCONE_RESP_MAT_CMCCAT2000.set(0.7982, -0.5918, 0.0008, 0.3389, 1.5512, 0.239, -0.1371, 0.0406, 0.9753)\n\n\ndef transpose(mtx):\n    # transpose (swap rows to columns) of a 3x3 matrix\n    order = \[0, 3, 6, 1, 4, 7, 2, 5, 8]\n    omtx = float3x3()\n    for i in xrange(9):\n        omtx\[i] = mtx\[order\[i]]\n    return omtx\n\ndef mult_f33_f33(A, B):\n    # Calculate multiplication of 3x3 matrix A and 3x3 matrix B\n    C = float3x3()\n    C.makeIdentity()\n\n    # Row 1\n    C\[0] = (A\[0]*B\[0] + A\[1]*B\[3] + A\[2]*B\[6])\n    C\[1] = (A\[0]*B\[1] + A\[1]*B\[4] + A\[2]*B\[7])\n    C\[2] = (A\[0]*B\[2] + A\[1]*B\[5] + A\[2]*B\[8])\n    # Row 2\n    C\[3] = (A\[3]*B\[0] + A\[4]*B\[3] + A\[5]*B\[6])\n    C\[4] = (A\[3]*B\[1] + A\[4]*B\[4] + A\[5]*B\[7])\n    C\[5] = (A\[3]*B\[2] + A\[4]*B\[5] + A\[5]*B\[8])\n    # Row 3\n    C\[6] = (A\[6]*B\[0] + A\[7]*B\[3] + A\[8]*B\[6])\n    C\[7] = (A\[6]*B\[1] + A\[7]*B\[4] + A\[8]*B\[7])\n    C\[8] = (A\[6]*B\[2] + A\[7]*B\[5] + A\[8]*B\[8])\n\n    return C;\n\n\ndef mult_f3_f33(src, mtx):\n    return float3(mtx\[0] * src\[0] + mtx\[1] * src\[1] + \n    mtx\[2] * src\[2], mtx\[3] * src\[0] + mtx\[4] * src\[1] + \n    mtx\[5] * src\[2], mtx\[6] * src\[0] + mtx\[7] * src\[1] + \n    mtx\[8] * src\[2])\n\n\ndef XYZ_2_xyY(XYZ):\n    xyY = float3()\n    divisor = (XYZ\[0] + XYZ\[1] + XYZ\[2])\n    if (divisor == 0.):\n        divisor = 1e-10\n    xyY.set(XYZ\[0] / divisor, XYZ\[1] / divisor, XYZ\[1])\n    return xyY\n\n\ndef xyY_2_XYZ(xyY):\n    XYZ = float3()\n    XYZ.set(\n        xyY\[0] * xyY\[2] / max( xyY\[1], 1e-10), \\\n        xyY\[2], \\\n        (1.0 - xyY\[0] - xyY\[1]) * xyY\[2] / max( xyY\[1], 1e-10)\n        )\n    return XYZ\n\n\ndef calculate_cat_matrix(src_xy, des_xy, coneRespMat=CONE_RESP_MAT_BRADFORD):\n    # Calculates and returns a 3x3 Von Kries chromatic adaptation transform \n    # from src_xy to des_xy using the cone response primaries defined \n    # by coneRespMat. By default, coneRespMat is set to CONE_RESP_MAT_BRADFORD. \n    # The default coneRespMat can be overridden at runtime. \n\n    src_xyY = float3(src_xy\[0], src_xy\[1], 1.0)\n    des_xyY = float3(des_xy\[0], des_xy\[1], 1.0)\n\n    src_XYZ = xyY_2_XYZ( src_xyY )\n    des_XYZ = xyY_2_XYZ( des_xyY )\n\n    src_coneResp = mult_f3_f33(src_XYZ, coneRespMat)\n    des_coneResp = mult_f3_f33(des_XYZ, coneRespMat)\n\n    vkMat = float3x3()\n    vkMat.set(\n        des_coneResp\[0] / src_coneResp\[0], 0.0, 0.0,\n        0.0, des_coneResp\[1] / src_coneResp\[1], 0.0,\n        0.0, 0.0, des_coneResp\[2] / src_coneResp\[2]\n        )\n\n    cat_matrix = float3x3()\n    coneRespMatInv = coneRespMat.inverse()\n    cat_matrix = coneRespMat * ( vkMat * coneRespMatInv)\n    \n    return cat_matrix\n\n\ndef RGBtoXYZ(xy, Y=1.0, inverse=False):\n    # given r g b chromaticities and whitepoint, convert RGB colors to XYZ\n    # based on CtlColorSpace.cpp from the CTL source code : 77\n    # param: xy - dict of chromaticity xy coordinates: rxy: float2(x, y) etc\n    # param: Y - luminance of \"white\" - defaults to 1.0\n    # param: inverse - calculate XYZ to RGB instead\n    r = xy\['rxy']\n    g = xy\['gxy']\n    b = xy\['bxy']\n    w = xy\['wxy']\n\n    X = w.x * Y / w.y\n    Z = (1 - w.x - w.y) * Y / w.y\n\n    # Scale factors for matrix rows\n    d = r.x * (b.y - g.y) + b.x * (g.y - r.y) + g.x * (r.y - b.y)\n\n    Sr =    (X * (b.y - g.y) -      \\\n            g.x * (Y * (b.y - 1) +  \\\n            b.y  * (X + Z)) +       \\\n            b.x  * (Y * (g.y - 1) + \\\n            g.y * (X + Z))) / d\n    \n    Sg =    (X * (r.y - b.y) +      \\\n            r.x * (Y * (b.y - 1) +  \\\n            b.y * (X + Z)) -        \\\n            b.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    Sb =    (X * (g.y - r.y) -      \\\n            r.x * (Y * (g.y - 1) +  \\\n            g.y * (X + Z)) +        \\\n            g.x * (Y * (r.y - 1) +  \\\n            r.y * (X + Z))) / d\n\n    # Assemble the matrix\n    M = float3x3()\n    M.set(  Sr * r.x, Sr * r.y, Sr * (1 - r.x - r.y),\n            Sg * g.x, Sg * g.y, Sg * (1 - g.x - g.y),\n            Sb * b.x, Sb * b.y, Sb * (1 - b.x - b.y))\n    if inverse:\n        M = M.inverse()\n        return M\n    else:\n        return M\n\n\ndef get_primaries(node, dst=False):\n    # get colorspace chromaticities xy coordinates from node\n    dst_pri = \['drxy', 'dgxy', 'dbxy', 'dwxy']\n    pri = \['rxy', 'gxy', 'bxy', 'wxy']\n    d = \{\}\n    for i, p in enumerate(pri):\n        if dst:\n            d\[p] = float2(node\[dst_pri\[i]].getValue()\[0], node\[dst_pri\[i]].getValue()\[1])\n        else:\n            d\[p] = float2(node\[p].getValue()\[0], node\[p].getValue()\[1])\n    return d\n\n\n\ndef start():\n    node = nuke.thisGroup()\n    \n    identity_mtx = float3x3()\n    identity_mtx.makeIdentity()\n\n    invert = node\['invert'].getValue()\n    label = node\['label']\n    cat_method = node\['cat_method'].value()\n    src_primaries = get_primaries(node)\n    dst_primaries = get_primaries(node, dst=True)\n    src_colorspace_name = node\['src_colorspace_name'].getValue()\n    dst_colorspace_name = node\['dst_colorspace_name'].getValue()\n    \n    # Check for XYZ on src / destination\n    enable_src = (src_colorspace_name != 'XYZ')\n    enable_dst = (dst_colorspace_name != 'XYZ')\n    whitepoint_changed = (src_primaries\['wxy']\[0] != dst_primaries\['wxy']\[0] or src_primaries\['wxy']\[1] != dst_primaries\['wxy']\[1])\n\n    # Get chromatic adaptation method\n    if cat_method == 'Bradford':\n        coneRespMat = CONE_RESP_MAT_BRADFORD\n    elif cat_method == 'cat02':\n        coneRespMat = CONE_RESP_MAT_CAT02\n    elif cat_method == 'vonKries Hunt-Pointer-Estevez D65-Normalized':\n        coneRespMat = CONE_RESP_MAT_VONKRIES\n    elif cat_method == 'cmccat2000':\n        coneRespMat = CONE_RESP_MAT_CMCCAT2000\n    elif cat_method == 'sharp':\n        coneRespMat = CONE_RESP_MAT_SHARP\n    elif cat_method == 'None':\n        coneRespMat = identity_mtx\n        whitepoint_changed = False\n\n    if enable_src:\n        # Calculate Source RGB to XYZ matrix\n        src_rgb_to_xyz_mtx = RGBtoXYZ(src_primaries)\n\n    if enable_dst:\n        # Calculate Destination XYZ to RGB matrix\n        dst_xyz_to_rgb_mtx = RGBtoXYZ(dst_primaries, inverse=True)\n\n    if enable_src and not enable_dst:\n        # Convert from Source RGB to XYZ only\n        mtx = src_rgb_to_xyz_mtx\n\n    if enable_dst and not enable_src:\n        # Convert from XYZ to Destination RGB only\n        mtx = dst_xyz_to_rgb_mtx\n\n    if enable_src and enable_dst:\n        if whitepoint_changed:\n            # Calculate chromatic adaptation matrix\n            cat_mtx = calculate_cat_matrix(src_primaries\['wxy'], dst_primaries\['wxy'], coneRespMat=coneRespMat)\n            # We will use our own matrix multiplication algorithm since there seems to be precision issues with the nuke.math module :/\n            # mtx = (cat_mtx * src_rgb_to_xyz_mtx) * dst_xyz_to_rgb_mtx\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, mult_f33_f33(cat_mtx, src_rgb_to_xyz_mtx))\n        else:\n            mtx = mult_f33_f33(dst_xyz_to_rgb_mtx, src_rgb_to_xyz_mtx)\n\n    if invert:\n        mtx = mtx.inverse()\n\n    node\['matrix'].setValue(mtx)\n\n    return True\n\n\n\nn = nuke.thisNode()\ng = nuke.thisGroup()\nk = nuke.thisKnob()\n\nstart()\n"
  tile_color 0x5b0000
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 258
  addUserKnob {20 Knobs}
  addUserKnob {12 rxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  rxy {0.780308 0.304253}
  addUserKnob {12 gxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  gxy {0.121595 1.493994}
  addUserKnob {12 bxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  bxy {0.095612 -0.084589}
  addUserKnob {12 wxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  wxy {0.3127 0.329}
  addUserKnob {12 drxy l r t "Red xy chromaticity coordinates in CIE 1931 colorspace."}
  drxy {0.713 0.293}
  addUserKnob {12 dgxy l g t "Green xy chromaticity coordinates in CIE 1931 colorspace."}
  dgxy {0.165 0.83}
  addUserKnob {12 dbxy l b t "Blue xy chromaticity coordinates in CIE 1931 colorspace."}
  dbxy {0.128 0.044}
  addUserKnob {12 dwxy l w t "Whitepoint xy chromaticity coordinates in CIE 1931 colorspace."}
  dwxy {0.32168 0.33767}
  addUserKnob {4 cat_method l method t "Choose the chromatic adaptation method for adapting whitepoint." M {Bradford cat02 "vonKries Hunt-Pointer-Estevez D65-Normalized" cmccat2000 sharp None}}
  addUserKnob {6 invert t "Invert direction of matrix." +STARTLINE}
 }
 ColorMatrix {
  matrix {
      {1.149837732 -0.06796914339 -0.08186843991}
      {-0.02548933774 1.304554939 -0.2790654302}
      {-0.0672031194 -0.3197369576 1.386940122}
    }
  name ColorMatrix
  xpos -40
  ypos 302
 }
 Output {
  name Output
  xpos -40
  ypos 350
 }
end_group
Group {
 name VisualizeColorDistance8
 xpos 7660
 ypos 6830
 addUserKnob {20 VisualizeColorDistance}
 addUserKnob {4 type M {inside outside}}
 addUserKnob {6 show_distance l "show distance" -STARTLINE}
 show_distance true
 addUserKnob {7 threshold t "threshold of color distance to visualize. 1.0 is the edge of the gamut boundary. 0.0 is all colors." R 0 1.2}
 threshold 1
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {4 bg t "choose bg to put behind result colors" M {checkerboard "solid color"}}
 addUserKnob {41 color T Fill1.color}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -285
 }
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -174
 }
set Ne79ddb0 [stack 0]
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -174
 }
set Ne7a2d70 [stack 0]
 Dot {
  name Dot5
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos -174
 }
set Ne7a7c50 [stack 0]
 Expression {
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 max(r,g,b)
  name achromatic
  note_font Helvetica
  xpos -370
  ypos -129
 }
set Ne7acb20 [stack 0]
push $Ne7a7c50
 Merge2 {
  inputs 2
  operation minus
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  note_font Helvetica
  xpos -260
  ypos -129
 }
push $Ne7acb20
 Expression {
  temp_name0 c_r
  temp_expr0 1-r
  temp_name1 c_g
  temp_expr1 1-g
  temp_name2 c_b
  temp_expr2 1-b
  expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
  expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
  expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
  name toe
  note_font Helvetica
  xpos -370
  ypos -81
  disable {{parent.shd_rolloff==0}}
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{parent.shd_rolloff}}
 }
 Merge2 {
  inputs 2
  operation divide
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  note_font Helvetica
  xpos -260
  ypos -81
 }
set Ne7da170 [stack 0]
 Dot {
  name Dot4
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -226
  ypos 66
 }
push $Ne7da170
push $Ne7a2d70
 MergeExpression {
  inputs 2
  temp_name0 limit
  temp_expr0 threshold
  temp_name1 sat
  temp_expr1 max(Ar,Ag,Ab)
  expr0 type?(sat>=limit?Br:0):sat<=limit?Br:0
  expr1 type?(sat>=limit?Bg:0):sat<=limit?Bg:0
  expr2 type?(sat>=limit?Bb:0):sat<=limit?Bb:0
  expr3 type?(sat>limit?1:0):sat<limit?1:0
  name MergeExpression1
  note_font Helvetica
  xpos -150
  ypos -81
 }
 Dot {
  name Dot3
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -116
  ypos -30
 }
push $Ne79ddb0
 Fill {
  output rgb
  color 0.18
  name Fill1
  note_font Helvetica
  xpos -40
  ypos -129
 }
 CheckerBoard2 {
  inputs 0
  color0 0.1000000015
  color1 {{parent.color} {parent.color} {parent.color} {parent.color}}
  color2 {{color0} {color0} {color0} {color0}}
  color3 {{color1} {color1} {color1} {color1}}
  linecolor 0
  centerlinewidth 0
  name CheckerBoard1
  note_font Helvetica
  xpos 70
  ypos -129
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{parent.input.width}}
  box_height {{parent.input.height}}
  box_fixed true
  resize fill
  name ReformatBox
  xpos 70
  ypos -82
 }
 Switch {
  inputs 2
  which {{parent.bg}}
  name Switch1
  note_font Helvetica
  xpos -40
  ypos -81
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  note_font Helvetica
  xpos -40
  ypos -33
 }
 Switch {
  inputs 2
  which {{parent.show_distance}}
  name switch_distance
  note_font Helvetica
  xpos -40
  ypos 63
 }
 Output {
  name Output
  xpos -40
  ypos 110
 }
end_group
Group {
 name MaxRGB6
 label "<pre><b>R</b> : \[value rmax]\n<b>G</b> : \[value gmax]\n<b>B</b> : \[value bmax]"
 note_font Helvetica
 xpos 7660
 ypos 6869
 addUserKnob {20 MaxRGB_tab l MaxRGB}
 addUserKnob {22 calculate t "calculate the max pixel value in red, green, and blue color components." T "def get_max(ct_node, frame):\n    ch = ct_node.name().lower()\[0]\n    nuke.execute(ct_node, frame, frame)\n    maxval = max(ct_node\['maxlumapixvalue'].getValue())\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    kmax.setValueAt(maxval, frame)\n    for i in range(2):\n        kpos.setValueAt(ct_node\['maxlumapixdata'].getValue()\[i], frame, i)\n    \n\nn = nuke.thisNode()\ncurframe = n\['curframe'].getValue()\nif curframe:\n    first_frame = nuke.frame()\n    last_frame = nuke.frame()\nelse:\n    first_frame = n.frameRange().first()\n    last_frame = n.frameRange().last()\n\nct_nodes = \[nuke.toNode('\{0\}.\{1\}MAX'.format(n.fullName(), c)) for c in \['R', 'G', 'B']]\n\nfor ch in \[c.name().lower()\[0] for c in ct_nodes]:\n    kmax = n\['\{0\}max'.format(ch)]\n    kpos = n\['\{0\}pos'.format(ch)]\n    for k in \[kmax, kpos]:\n        k.clearAnimated()\n        if not curframe:\n            k.setAnimated()\n\nif curframe:\n    for ct_node in ct_nodes:\n        get_max(ct_node, first_frame)\n\n#else: # threading issues... not implemented for now\n#    for frame in range(first_frame, last_frame+1):\n#        for ct_node in ct_nodes:\n#            threading.Thread(group=None, target=get_max, args=(ct_node, frame)).start()" +STARTLINE}
 addUserKnob {22 clear -STARTLINE T "n = nuke.thisNode()\nfor c in \['r', 'g', 'b']:\n    kmax =  n\['\{0\}max'.format(c)]\n    kpos = n\['\{0\}pos'.format(c)]\n    for k in \[kmax, kpos]:\n        k.setValue(0)\n        k.clearAnimated()"}
 addUserKnob {6 curframe l "current frame" t "Calculate only the current frame. If false, will prompt calculate input framerange." -STARTLINE}
 curframe true
 addUserKnob {7 rmax t "maximum red value" R 0 50}
 rmax 1.059028029
 addUserKnob {12 rpos l "" t "rmax position" -STARTLINE}
 rpos {2 0}
 addUserKnob {7 gmax t "maximum green value" R 0 50}
 gmax 1.201209426
 addUserKnob {12 gpos l "" t "gmax position" -STARTLINE}
 gpos {2 0}
 addUserKnob {7 bmax t "maximum blue value" R 0 50}
 bmax 1.24509275
 addUserKnob {12 bpos l "" t "bmax position" -STARTLINE}
 bpos {1 0}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {rgba.red -rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 209 209 209 2 513 513 513 513 513 385 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 2 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513 513} {curve x1 1175 1175 1175 0 994 994 994 994 994 686 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 0 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994 994}}
  maxlumapixvalue {{curve x1 1.03131032 1.361329675 1.03131032 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.016959906 37.13138962 37.13138962 37.13138962 37.13138962 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 1.059028029 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962 37.13138962} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  minlumapixdata {{curve x1 1 1 1 0 389 389 389 389 389 998 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 0 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 210 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040}}
  minlumapixvalue {{curve x1 0 0 0 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 0 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463 -0.4703712463} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0} 0}
  name RMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 39
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red rgba.green -rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 894 50 50 2 1347 1347 1347 1347 1347 259 1347 1347 1347 1347 2 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 1347 x48 2} {curve x1 1274 9 9 0 896 896 896 896 896 459 896 896 896 896 0 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 896 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 1.143916965 1.778251767 1.347160339 1.201209426 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 1.138906717 39.63381577 39.63381577 39.63381577 39.63381577 1.201209426 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 39.63381577 x48 1.201209426} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  minlumapixdata {{curve x1 0 0 0 1 389 389 389 389 389 1234 389 389 389 389 1 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 389 x48 1} {curve x1 0 0 0 0 1040 1040 1040 1040 1040 220 1040 1040 1040 1040 0 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0} {curve x1 0 0 0 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 0 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 -2.469618797 x48 0} {curve x1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 x48 0}}
  name GMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 87
 }
 CurveTool {
  operation "Max Luma Pixel"
  channels {-rgba.red -rgba.green rgba.blue none}
  ROI {0 0 {width} {height}}
  autocropdata {480 270 1440 810}
  maxlumapixdata {{curve x1 531 7 7 1 x10 1235 x15 1 x48 1} {curve x1 985 41 41 0 x10 221 x15 0 x48 0}}
  maxlumapixvalue {{curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0.9455359578 1.744389296 1.321506977 1.24509275 x10 1.041050911 x15 1.24509275 x48 1.24509275}}
  minlumapixdata {{curve x1 3 3 3 2 x10 0 x15 2 x48 2} {curve x1 0 0 0 0 x10 0 x15 0 x48 0}}
  minlumapixvalue {{curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0} {curve x1 0 0 0 0 x10 0 x15 0 x48 0}}
  name BMAX
  tile_color 0x84000000
  note_font Helvetica
  xpos -40
  ypos 135
 }
 Output {
  name Output
  xpos -40
  ypos 182
 }
end_group
StickyNote {
 inputs 0
 name StickyNote1
 tile_color 0x40454aff
 label "<left>Calculate max distance of out of gamut values\ngiven a source and destination gamut \n(assuming all values are in gamut in the source gamut)"
 note_font Helvetica
 note_font_size 14
 note_font_color 0xb3b3b3ff
 xpos 7434
 ypos 6548
}
StickyNote {
 inputs 0
 name StickyNote2
 tile_color 0x40454aff
 label "<left>Compare results of gamut compression with default\nequal max distance and max distances set according\nto the max possible distance given the source and destination gamuts"
 note_font Helvetica
 note_font_size 14
 note_font_color 0xb3b3b3ff
 xpos 7739
 ypos 7213
}
push $Na2df2a0
NoOp {
 name ___pointer_rmuh
 autolabel "nuke.thisNode()\[\"connect_to_target\"].execute()"
 tile_color 0x989898ff
 label "<font size=7>Grainy Lambertian Sphere"
 note_font "Helvetica \[pyrs]"
 xpos 9090
 ypos 7151
 icon Input.png
 hide_input true
 addUserKnob {20 pointer_tab l pointer}
 addUserKnob {1 target}
 target Dot58
 addUserKnob {22 connect_to_target l connect T "n = nuke.thisNode()\nt = n\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    n.setInput(0, tn)" +STARTLINE}
 addUserKnob {22 zoom_to_target l zoom -STARTLINE T "t = nuke.thisNode()\['target'].getValue()\nif nuke.exists(t):\n    tn = nuke.toNode(t)\n    nuke.zoom(2.0, \[tn.xpos(), tn.ypos()])"}
 addUserKnob {22 set_target l "set target" -STARTLINE T "n = nuke.thisNode()\nsn = nuke.selectedNodes()\nif sn:\n    t = sn\[-1]\nn\['target'].setValue(t.fullName())"}
}
Group {
 name Mult1
 tile_color 0x7aa9ffff
 label "\[value exposure]"
 xpos 9090
 ypos 7232
 disable true
 addUserKnob {20 Mult}
 addUserKnob {41 channels T _MULTIPLY_.channels}
 addUserKnob {18 exposure R -4 4}
 exposure 3
 addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 multiply R 0 4}
 multiply 1
 addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name InputMask
  xpos 94
  ypos -170
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -250
 }
 Multiply {
  inputs 1+1
  channels rgb
  value {{"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} 1}
  name _MULTIPLY_
  xpos -40
  ypos -170
 }
 Output {
  name Output
  xpos -40
  ypos -90
 }
end_group
Group {
 name GamutCompress_blink2
 label "\[value method] : \[value direction]\ndefaults"
 xpos 9090
 ypos 7298
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 method atan
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.2
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.2
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
Group {
 name Mult2
 tile_color 0x7aa9ffff
 label "\[value exposure]"
 xpos 9090
 ypos 7400
 disable true
 addUserKnob {20 Mult}
 addUserKnob {41 channels T _MULTIPLY_.channels}
 addUserKnob {18 exposure R -4 4}
 exposure -3
 addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 multiply R 0 4}
 multiply 1
 addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name InputMask
  xpos 94
  ypos -170
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -250
 }
 Multiply {
  inputs 1+1
  channels rgb
  value {{"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} 1}
  name _MULTIPLY_
  xpos -40
  ypos -170
 }
 Output {
  name Output
  xpos -40
  ypos -90
 }
end_group
Group {
 name Mult
 tile_color 0x7aa9ffff
 xpos 9090
 ypos 7574
 addUserKnob {20 Mult}
 addUserKnob {41 channels T _MULTIPLY_.channels}
 addUserKnob {18 exposure R -4 4}
 exposure 3
 addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 multiply R 0 4}
 multiply 1
 addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name InputMask
  xpos 94
  ypos -170
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -250
 }
 Multiply {
  inputs 1+1
  channels rgb
  value {{"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} {"pow(2, parent.exposure)*parent.multiply"} 1}
  name _MULTIPLY_
  xpos -40
  ypos -170
 }
 Output {
  name Output
  xpos -40
  ypos -90
 }
end_group
push $Ndfb5360
Dot {
 name Dot94
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 3186
}
Expression {
 channel0 {rgba.red rgba.green rgba.blue none}
 expr0 max(r,g,b)
 name achromatic
 note_font Helvetica
 xpos 7660
 ypos 3207
}
Dot {
 name Dot103
 label " Achromatic"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 3244
}
Dot {
 name Dot104
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 3402
}
set Ndfd2260 [stack 0]
Dot {
 name Dot95
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 3450
}
set Ndfd7130 [stack 0]
Dot {
 name Dot97
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 3906
}
push $Ndfd7130
Expression {
 temp_name0 c_r
 temp_expr0 1-r
 temp_name1 c_g
 temp_expr1 1-g
 temp_name2 c_b
 temp_expr2 1-b
 expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
 expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
 expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
 name toe
 label "\[value thr]"
 note_font Helvetica
 xpos 7770
 ypos 3442
 addUserKnob {20 Params_tab l Params}
 addUserKnob {7 thr t "complement of threshold"}
 thr 0.03
}
set Ndfe0f00 [stack 0]
Dot {
 name Dot98
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7804
 ypos 3858
}
push $Ndfe0f00
push $Ndfd2260
push $Ndfb5360
Merge2 {
 inputs 2
 operation minus
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge
 note_font Helvetica
 xpos 7880
 ypos 3399
}
MergeExpression {
 inputs 2
 expr0 "isnan(Br/Ar) ? 0 : Br/Ar"
 expr1 "isnan(Bg/Ag) ? 0 : Bg/Ag"
 expr2 "isnan(Bb/Ab) ? 0 : Bb/Ab"
 name Merge_Divide
 xpos 7880
 ypos 3446
}
Dot {
 name Dot101
 label " Distance Original"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 3522
}
Group {
 name compress
 knobChanged "from math import (pow, exp, log, tan, atan, atanh, cos, pi, fabs)\n\ndef i_log(x):\n    return (exp((1-t+t*log(1-x)-x*t*log(1-x))/(t*(1-x))))*t+x*t-k\ndef i_exp(x):\n    return -log((-x+1)/(t-x))*(-t+x)+t-k\ndef i_atan(x):\n    return (2*tan((pi*(1-t))/(2*(x-t)))*(x-t))/pi+t-k\ndef i_tanh(x):\n    return atanh((1-t)/(x-t))*(x-t)+t-k\ndef sign(x):\n    return 0 if x == 0 else 1 if x > 0 else -1\n\ndef bisect(f, a, b):\n    if sign(f(a)) == sign(f(b)): \n        # bad estimate. return something close to linear\n        if method == 'exp' or method == 'log':\n            return -100\n        else: \n            return 1.99999\n    c = (a+b)/2.0\n    y = f(c)\n    if y == 0:\n        return c # lucky guess\n    n = 1\n    while fabs(y) > tol and n <= nmax:\n        if sign(y) == sign(f(a)):\n            a = c\n        else:\n            b = c\n        c = (a+b)/2.0\n        y = f(c)\n        n += 1\n    return c\n\ndef calc():\n    a = 1.0001\n    b = 5\n    if method == 'log':\n        f = i_log\n        a = -50\n        b = 0.98\n    elif method == 'exp':\n        f = i_exp\n    elif method == 'atan':\n        f = i_atan\n    elif method == 'tanh':\n        f = i_tanh\n        a = 1.000001\n    lim = bisect(f, a, b)\n    return lim\n\n\nn = nuke.thisNode()\nknob = nuke.thisKnob()\n\nt = 1-n\['threshold'].getValue()\nmethod = n\['method'].value()\n\ntol = 1e-3\nnmax = 100\n\nn.begin()\nif n\['method'].value() != 'reinhard':\n    k_knobs = \['cyan', 'magenta', 'yellow']\n    lim_knobs = \['lim_x', 'lim_y', 'lim_z']\n    if knob.name() in k_knobs:\n        lim_knob = lim_knobs\[k_knobs.index(knob.name())]\n        k = knob.getValue()+1\n        lim = calc()\n        n\[lim_knob].setValue(lim)\n    elif knob.name() == 'method' or knob.name() == 'threshold':\n        for i, lknob in enumerate(lim_knobs):\n            k = n\[k_knobs\[i]].getValue()+1\n            lim = calc()\n            n\[lknob].setValue(lim)\n            \nn.end()"
 note_font Helvetica
 xpos 7880
 ypos 3615
 addUserKnob {20 compress}
 addUserKnob {4 method M {log reinhard exp atan tanh ""}}
 addUserKnob {7 threshold R 0 0.3}
 threshold 0.2
 addUserKnob {7 cyan}
 cyan 0.2
 addUserKnob {7 magenta}
 magenta 0.2
 addUserKnob {7 yellow}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {7 lim_x R -5 2}
 lim_x 0.8010845947
 addUserKnob {7 lim_y R -5 2}
 lim_y 0.8010845947
 addUserKnob {7 lim_z R -5 2}
 lim_z 0.8010845947
 addUserKnob {26 ""}
 addUserKnob {6 invert +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -202
 }
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -102
 }
set Ne028ab0 [stack 0]
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos -30
 }
set Ne02d780 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*log((1+(r/(lim_x-thr)-thr/(lim_x-thr)))/(1-(r/(lim_x-thr)-thr/(lim_x-thr))))/2
  expr1 g<thr?g:thr+(lim_y-thr)*log((1+(g/(lim_y-thr)-thr/(lim_y-thr)))/(1-(g/(lim_y-thr)-thr/(lim_y-thr))))/2
  expr2 b<thr?b:thr+(lim_z-thr)*log((1+(b/(lim_z-thr)-thr/(lim_z-thr)))/(1-(b/(lim_z-thr)-thr/(lim_z-thr))))/2
  name uncompress_tanh
  note_font Helvetica
  xpos 510
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne02d780
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*tan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*tan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*tan(pi/2*(b-thr)/(lim_z-thr))
  name uncompress_atan
  xpos 400
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne02d780
 Expression {
  expr0 r<thr?r:-log((r-lim_x)/(thr-lim_x))*(-thr+lim_x)+thr
  expr1 g<thr?g:-log((g-lim_y)/(thr-lim_y))*(-thr+lim_y)+thr
  expr2 b<thr?b:-log((b-lim_z)/(thr-lim_z))*(-thr+lim_z)+thr
  name uncompress_exp
  note_font Helvetica
  xpos 290
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne02d780
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)-1/(1-thr)+1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)-1/(1-thr)+1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)-1/(1-thr)+1/(lim_z-thr)))
  name uncompress_reinhard
  note_font Helvetica
  xpos 180
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.compress_reinhard.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.compress_reinhard.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.compress_reinhard.lim_z}}
 }
push $Ne02d780
 Expression {
  expr0 r<thr?r:exp((r-thr+thr*log(1-lim_x)-lim_x*thr*log(1-lim_x))/(thr*(1-lim_x)))*thr+lim_x*thr
  expr1 "g<thr?g:exp((g-thr+thr*log(1-lim_y)-lim_y*thr*log(1-lim_y))/(thr*(1-lim_y)))*thr+lim_y*thr\n"
  expr2 b<thr?b:exp((b-thr+thr*log(1-lim_z)-lim_z*thr*log(1-lim_z))/(thr*(1-lim_z)))*thr+lim_z*thr
  name uncompress_log
  note_font Helvetica
  xpos 70
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method1
  note_font Helvetica
  xpos 290
  ypos 135
 }
push $Ne028ab0
 Dot {
  name Dot6
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -336
  ypos -30
 }
set Ne08af70 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*tanh(((r-thr)/(lim_x-thr)))
  expr1 g<thr?g:thr+(lim_y-thr)*tanh(((g-thr)/(lim_y-thr)))
  expr2 b<thr?b:thr+(lim_z-thr)*tanh(((b-thr)/(lim_z-thr)))
  name compress_tanh
  note_font Helvetica
  xpos -150
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne08af70
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*atan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*atan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*atan(pi/2*(b-thr)/(lim_z-thr))
  name compress_atan
  xpos -260
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne08af70
 Expression {
  expr0 r<thr?r:lim_x-(lim_x-thr)*exp(-(((r-thr)*((lim_x)/(lim_x-thr))/lim_x)))
  expr1 g<thr?g:lim_y-(lim_y-thr)*exp(-(((g-thr)*((lim_y)/(lim_y-thr))/lim_y)))
  expr2 b<thr?b:lim_z-(lim_z-thr)*exp(-(((b-thr)*((lim_z)/(lim_z-thr))/lim_z)))
  name compress_exp
  note_font Helvetica
  xpos -370
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne08af70
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)+1/(1-thr)-1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)+1/(1-thr)-1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)+1/(1-thr)-1/(lim_z-thr)))
  name compress_reinhard
  note_font Helvetica
  xpos -480
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.cyan+1}}
  addUserKnob {7 lim_y}
  lim_y {{parent.magenta+1}}
  addUserKnob {7 lim_z}
  lim_z {{parent.yellow+1}}
 }
push $Ne08af70
 Expression {
  expr0 r<thr?r:thr*log(r/thr-lim_x)-lim_x*thr*log(r/thr-lim_x)+thr-thr*log(1-lim_x)+lim_x*thr*log(1-lim_x)
  expr1 g<thr?g:thr*log(g/thr-lim_y)-lim_y*thr*log(g/thr-lim_y)+thr-thr*log(1-lim_y)+lim_y*thr*log(1-lim_y)
  expr2 b<thr?b:thr*log(b/thr-lim_z)-lim_z*thr*log(b/thr-lim_z)+thr-thr*log(1-lim_z)+lim_z*thr*log(1-lim_z)
  name compress_log
  note_font Helvetica
  xpos -590
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method
  note_font Helvetica
  xpos -370
  ypos 135
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name switch_reverse
  xpos -40
  ypos 278
 }
 Output {
  name Output
  xpos -40
  ypos 422
 }
end_group
Dot {
 name Dot105
 label " Distance Compressed"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 3680
}
Merge2 {
 inputs 2
 operation multiply
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge17
 note_font Helvetica
 xpos 7880
 ypos 3855
}
Merge2 {
 inputs 2
 operation minus
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge18
 note_font Helvetica
 xpos 7880
 ypos 3903
}
set Ne10a630 [stack 0]
push $Ne28edb0
Dot {
 name Dot2
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8134
 ypos 3858
}
set Nb03f7930 [stack 0]
Merge2 {
 inputs 2
 operation difference
 bbox B
 name Difference
 note_font Helvetica
 xpos 7990
 ypos 3903
}
push $Ne10a630
Dot {
 name Dot106
 label " Gamut Compressed RGB"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4002
}
Dot {
 name Dot100
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4194
}
set Ne11feb0 [stack 0]
Dot {
 name Dot107
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 4194
}
Expression {
 channel0 {rgba.red rgba.green rgba.blue none}
 expr0 max(r,g,b)
 name achromatic1
 note_font Helvetica
 xpos 7660
 ypos 4215
}
Dot {
 name Dot108
 label " Achromatic"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 4266
}
Dot {
 name Dot109
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 4338
}
set Ne13c870 [stack 0]
Dot {
 name Dot110
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 4362
}
set Ne141740 [stack 0]
Dot {
 name Dot112
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7694
 ypos 4554
}
push $Ne141740
Expression {
 temp_name0 c_r
 temp_expr0 1-r
 temp_name1 c_g
 temp_expr1 1-g
 temp_name2 c_b
 temp_expr2 1-b
 expr0 1-(c_r<(1-thr)?c_r:(1-thr)+thr*tanh(((c_r-(1-thr))/thr)))
 expr1 1-(c_g<(1-thr)?c_g:(1-thr)+thr*tanh(((c_g-(1-thr))/thr)))
 expr2 1-(c_b<(1-thr)?c_b:(1-thr)+thr*tanh(((c_b-(1-thr))/thr)))
 name toe1
 label "\[value thr]"
 note_font Helvetica
 xpos 7770
 ypos 4354
 addUserKnob {20 Params_tab l Params}
 addUserKnob {7 thr t "complement of threshold"}
 thr 0.03
}
set Ne14b510 [stack 0]
Dot {
 name Dot113
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7804
 ypos 4530
}
push $Ne14b510
push $Ne13c870
push $Ne11feb0
Merge2 {
 inputs 2
 operation minus
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge15
 note_font Helvetica
 xpos 7880
 ypos 4335
}
MergeExpression {
 inputs 2
 expr0 "isnan(Br/Ar) ? 0 : Br/Ar"
 expr1 "isnan(Bg/Ag) ? 0 : Bg/Ag"
 expr2 "isnan(Bb/Ab) ? 0 : Bb/Ab"
 name Merge_Divide1
 xpos 7880
 ypos 4358
}
Dot {
 name Dot111
 label " Distance Compressed"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4410
}
Group {
 name uncompress
 knobChanged "from math import (pow, exp, log, tan, atan, atanh, cos, pi, fabs)\n\ndef i_log(x):\n    return (exp((1-t+t*log(1-x)-x*t*log(1-x))/(t*(1-x))))*t+x*t-k\ndef i_exp(x):\n    return -log((-x+1)/(t-x))*(-t+x)+t-k\ndef i_atan(x):\n    return (2*tan((pi*(1-t))/(2*(x-t)))*(x-t))/pi+t-k\ndef i_tanh(x):\n    return atanh((1-t)/(x-t))*(x-t)+t-k\ndef sign(x):\n    return 0 if x == 0 else 1 if x > 0 else -1\n\ndef bisect(f, a, b):\n    if sign(f(a)) == sign(f(b)): \n        # bad estimate. return something close to linear\n        if method == 'exp' or method == 'log':\n            return -100\n        else: \n            return 1.99999\n    c = (a+b)/2.0\n    y = f(c)\n    if y == 0:\n        return c # lucky guess\n    n = 1\n    while fabs(y) > tol and n <= nmax:\n        if sign(y) == sign(f(a)):\n            a = c\n        else:\n            b = c\n        c = (a+b)/2.0\n        y = f(c)\n        n += 1\n    return c\n\ndef calc():\n    a = 1.0001\n    b = 5\n    if method == 'log':\n        f = i_log\n        a = -50\n        b = 0.98\n    elif method == 'exp':\n        f = i_exp\n    elif method == 'atan':\n        f = i_atan\n    elif method == 'tanh':\n        f = i_tanh\n        a = 1.000001\n    lim = bisect(f, a, b)\n    return lim\n\n\nn = nuke.thisNode()\nknob = nuke.thisKnob()\n\nt = 1-n\['threshold'].getValue()\nmethod = n\['method'].value()\n\ntol = 1e-3\nnmax = 100\n\nn.begin()\nif n\['method'].value() != 'reinhard':\n    k_knobs = \['cyan', 'magenta', 'yellow']\n    lim_knobs = \['lim_x', 'lim_y', 'lim_z']\n    if knob.name() in k_knobs:\n        lim_knob = lim_knobs\[k_knobs.index(knob.name())]\n        k = knob.getValue()+1\n        lim = calc()\n        n\[lim_knob].setValue(lim)\n    elif knob.name() == 'method' or knob.name() == 'threshold':\n        for i, lknob in enumerate(lim_knobs):\n            k = n\[k_knobs\[i]].getValue()+1\n            lim = calc()\n            n\[lknob].setValue(lim)\n            \nn.end()"
 note_font Helvetica
 xpos 7880
 ypos 4437
 addUserKnob {20 compress}
 addUserKnob {4 method M {log reinhard exp atan tanh ""}}
 addUserKnob {7 threshold R 0 0.3}
 threshold 0.2
 addUserKnob {7 cyan}
 cyan 0.2
 addUserKnob {7 magenta}
 magenta 0.2
 addUserKnob {7 yellow}
 yellow 0.2
 addUserKnob {26 ""}
 addUserKnob {7 lim_x R -5 2}
 lim_x 0.8010845947
 addUserKnob {7 lim_y R -5 2}
 lim_y 0.8010845947
 addUserKnob {7 lim_z R -5 2}
 lim_z 0.8010845947
 addUserKnob {26 ""}
 addUserKnob {6 invert +STARTLINE}
 invert true
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -202
 }
 Dot {
  name Dot2
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos -102
 }
set Ne192dc0 [stack 0]
 Dot {
  name Dot1
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos -30
 }
set Ne197a90 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*log((1+(r/(lim_x-thr)-thr/(lim_x-thr)))/(1-(r/(lim_x-thr)-thr/(lim_x-thr))))/2
  expr1 g<thr?g:thr+(lim_y-thr)*log((1+(g/(lim_y-thr)-thr/(lim_y-thr)))/(1-(g/(lim_y-thr)-thr/(lim_y-thr))))/2
  expr2 b<thr?b:thr+(lim_z-thr)*log((1+(b/(lim_z-thr)-thr/(lim_z-thr)))/(1-(b/(lim_z-thr)-thr/(lim_z-thr))))/2
  name uncompress_tanh
  note_font Helvetica
  xpos 510
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne197a90
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*tan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*tan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*tan(pi/2*(b-thr)/(lim_z-thr))
  name uncompress_atan
  xpos 400
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne197a90
 Expression {
  expr0 r<thr?r:-log((r-lim_x)/(thr-lim_x))*(-thr+lim_x)+thr
  expr1 g<thr?g:-log((g-lim_y)/(thr-lim_y))*(-thr+lim_y)+thr
  expr2 b<thr?b:-log((b-lim_z)/(thr-lim_z))*(-thr+lim_z)+thr
  name uncompress_exp
  note_font Helvetica
  xpos 290
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne197a90
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)-1/(1-thr)+1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)-1/(1-thr)+1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)-1/(1-thr)+1/(lim_z-thr)))
  name uncompress_reinhard
  note_font Helvetica
  xpos 180
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.compress_reinhard.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.compress_reinhard.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.compress_reinhard.lim_z}}
 }
push $Ne197a90
 Expression {
  expr0 r<thr?r:exp((r-thr+thr*log(1-lim_x)-lim_x*thr*log(1-lim_x))/(thr*(1-lim_x)))*thr+lim_x*thr
  expr1 "g<thr?g:exp((g-thr+thr*log(1-lim_y)-lim_y*thr*log(1-lim_y))/(thr*(1-lim_y)))*thr+lim_y*thr\n"
  expr2 b<thr?b:exp((b-thr+thr*log(1-lim_z)-lim_z*thr*log(1-lim_z))/(thr*(1-lim_z)))*thr+lim_z*thr
  name uncompress_log
  note_font Helvetica
  xpos 70
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method1
  note_font Helvetica
  xpos 290
  ypos 135
 }
push $Ne192dc0
 Dot {
  name Dot6
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -336
  ypos -30
 }
set Ne1f5020 [stack 0]
 Expression {
  expr0 r<thr?r:thr+(lim_x-thr)*tanh(((r-thr)/(lim_x-thr)))
  expr1 g<thr?g:thr+(lim_y-thr)*tanh(((g-thr)/(lim_y-thr)))
  expr2 b<thr?b:thr+(lim_z-thr)*tanh(((b-thr)/(lim_z-thr)))
  name compress_tanh
  note_font Helvetica
  xpos -150
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne1f5020
 Expression {
  temp_name0 pi
  temp_expr0 3.14159265359
  expr0 r<thr?r:thr+(lim_x-thr)*2/pi*atan(pi/2*(r-thr)/(lim_x-thr))
  expr1 g<thr?g:thr+(lim_y-thr)*2/pi*atan(pi/2*(g-thr)/(lim_y-thr))
  expr2 b<thr?b:thr+(lim_z-thr)*2/pi*atan(pi/2*(b-thr)/(lim_z-thr))
  name compress_atan
  xpos -260
  ypos 38
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne1f5020
 Expression {
  expr0 r<thr?r:lim_x-(lim_x-thr)*exp(-(((r-thr)*((lim_x)/(lim_x-thr))/lim_x)))
  expr1 g<thr?g:lim_y-(lim_y-thr)*exp(-(((g-thr)*((lim_y)/(lim_y-thr))/lim_y)))
  expr2 b<thr?b:lim_z-(lim_z-thr)*exp(-(((b-thr)*((lim_z)/(lim_z-thr))/lim_z)))
  name compress_exp
  note_font Helvetica
  xpos -370
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
push $Ne1f5020
 Expression {
  expr0 r<thr?r:(thr+1/(1/(r-thr)+1/(1-thr)-1/(lim_x-thr)))
  expr1 g<thr?g:(thr+1/(1/(g-thr)+1/(1-thr)-1/(lim_y-thr)))
  expr2 b<thr?b:(thr+1/(1/(b-thr)+1/(1-thr)-1/(lim_z-thr)))
  name compress_reinhard
  note_font Helvetica
  xpos -480
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.cyan+1}}
  addUserKnob {7 lim_y}
  lim_y {{parent.magenta+1}}
  addUserKnob {7 lim_z}
  lim_z {{parent.yellow+1}}
 }
push $Ne1f5020
 Expression {
  expr0 r<thr?r:thr*log(r/thr-lim_x)-lim_x*thr*log(r/thr-lim_x)+thr-thr*log(1-lim_x)+lim_x*thr*log(1-lim_x)
  expr1 g<thr?g:thr*log(g/thr-lim_y)-lim_y*thr*log(g/thr-lim_y)+thr-thr*log(1-lim_y)+lim_y*thr*log(1-lim_y)
  expr2 b<thr?b:thr*log(b/thr-lim_z)-lim_z*thr*log(b/thr-lim_z)+thr-thr*log(1-lim_z)+lim_z*thr*log(1-lim_z)
  name compress_log
  note_font Helvetica
  xpos -590
  ypos 39
  addUserKnob {20 Params_tab l Params}
  addUserKnob {7 thr t "complement of threshold"}
  thr {{1-parent.threshold}}
  addUserKnob {7 lim_x}
  lim_x {{parent.lim_x}}
  addUserKnob {7 lim_y}
  lim_y {{parent.lim_y}}
  addUserKnob {7 lim_z}
  lim_z {{parent.lim_z}}
 }
 Switch {
  inputs 5
  which {{parent.method}}
  name switch_method
  note_font Helvetica
  xpos -370
  ypos 135
 }
 Switch {
  inputs 2
  which {{parent.invert}}
  name switch_reverse
  xpos -40
  ypos 278
 }
 Output {
  name Output
  xpos -40
  ypos 422
 }
end_group
Dot {
 name Dot114
 label " Distance Original"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4482
}
Merge2 {
 inputs 2
 operation multiply
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge16
 note_font Helvetica
 xpos 7880
 ypos 4527
}
Merge2 {
 inputs 2
 operation minus
 bbox B
 Achannels rgb
 Bchannels rgb
 output rgb
 name Merge19
 note_font Helvetica
 xpos 7880
 ypos 4551
}
Dot {
 name Dot116
 label " Original RGB"
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4626
}
Dot {
 name Dot126
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 7914
 ypos 4698
}
push $Nb03f7930
Dot {
 name Dot27
 note_font "Helvetica Bold"
 note_font_size 24
 note_font_color 0xff
 xpos 8134
 ypos 4626
}
Merge2 {
 inputs 2
 operation difference
 bbox B
 name Difference1
 note_font Helvetica
 xpos 7990
 ypos 4695
}
Multiply {
 channels rgb
 value 10
 name Multiply2
 note_font Helvetica
 xpos 7990
 ypos 4743
}
push $Ncc57ff0
Group {
 name GamutCompress_blink13
 label "\[value method] : \[value direction]\nmax distance for awg"
 xpos 7660
 ypos 7394
 addUserKnob {20 GamutCompress}
 addUserKnob {4 method t "Choose the type of distance compression function you want to use" M {log reinhard exp atan tanh}}
 addUserKnob {22 reset -STARTLINE T "n = nuke.thisNode()\nknobs = \['threshold', 'cyan', 'magenta', 'yellow']\nfor k in knobs:\n    n\[k].setValue(0.2)\nn\['shd_rolloff'].setValue(0.03)"}
 addUserKnob {6 use_gpu l "use gpu" t "use gpu for blinkscript node" -STARTLINE}
 use_gpu true
 addUserKnob {7 threshold t "Percentage of the gamut to affect. A value of 0.2 will leave leave the core 80% of the colors within the gamut unaffected." R 0 0.3}
 threshold 0.2
 addUserKnob {7 shd_rolloff l "shd rolloff" R 0 0.1}
 shd_rolloff 0.03
 addUserKnob {26 distance_limit_label l " " t "Specifies the distance beyond the gamut boundary to map to the gamut boundary for each color component." T "<b>distance limit"}
 addUserKnob {7 cyan t "distance limit for the R component." R 0.001 1}
 cyan 0.076
 addUserKnob {7 magenta t "distance limit for the G component." R 0.001 1}
 magenta 0.219
 addUserKnob {7 yellow t "distance limit for the B component." R 0.001 1}
 yellow 0.053
 addUserKnob {26 ""}
 addUserKnob {4 direction M {forward inverse}}
 addUserKnob {20 info_tab l Info}
 addUserKnob {26 info_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>GamutCompress</b><br>\nmaps out of gamut colors back into gamut.\n<br><br><a href=https://github.com/jedypod/gamut-compress>Documentation</a>"}
 addUserKnob {20 doc_grp l "" +STARTLINE n 1}
 doc_grp 0
 addUserKnob {26 doc_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\n<b>Method</b><br>\nSpecify the tone compression curve to use when <br>\nmapping out of gamut colors into the boundary threshold.<br>\n<a href=https://www.desmos.com/calculator/hmzirlw7tj>log</a>\n<a href=https://www.desmos.com/calculator/lkhdtjbodx>reinhard</a>\n<a href=https://www.desmos.com/calculator/s2adnicmmr>exp</a>\n<a href=https://www.desmos.com/calculator/h96qmnozpo>atan</a>\n<a href=https://www.desmos.com/calculator/xiwliws24x>tanh</a>\n<br><br>\n\n<b>Threshold</b><br>\nPercentage of the gamut to affect. If threshold is 0.2, <br>\nthe inner 80% of the gamut will be unaffected and <br>\nout of gamut values will be compressed into <br>\nthe outer 20% of the gamut's color volume.<br><br>\n\n<b>Shadow Rolloff</b><br>\nReduce gamut compression effect in grain below specified value.<br><br>\n\n<b>Max Distance</b><br>\nPer color component control to specify what distance will be <br>\ncompressed to the gamut boundary. For example, <br>\na value of cyan=0.2 will map colors with a distance of red=1.2 from <br>\nthe achromatic axis to red=1.0, which is the gamut boundary.<br><br>\n\n<b>Direction</b><br>\nSpecifies whether to apply or inverse the gamut compression operation.<br><br>"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 about_label l " " T "<style> a:link \{ color: #ccc \}</style>\n<font color=#ccc>\nWritten by <a href=https://github.com/jedypod color=red>Jed Smith</a> with <a href=https://community.acescentral.com/t/rgb-saturation-gamut-mapping-approach-and-a-comp-vfx-perspective>help</a> from the <a href=https://community.acescentral.com/c/aces-development-acesnext/vwg-aces-gamut-mapping-working-group>ACES Gamut Mapping VWG</a>"}
}
 Input {
  inputs 0
  name Input
  xpos -40
  ypos -10
 }
 AddChannels {
  name AddChannels
  note_font Helvetica
  xpos -40
  ypos 26
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"GamutCompression\" iterate pixelWise 264cf350509fbbef2d0cead2101966da04d4909c46d4db5d512b02f29fdb6de8 2 \"src\" Read Point \"dst\" Write Point 7 \"threshold\" Float 1 AAAAAA== \"shd_rolloff\" Float 1 AAAAAA== \"cyan\" Float 1 AAAAAA== \"magenta\" Float 1 AAAAAA== \"yellow\" Float 1 AAAAAA== \"method\" Int 1 AAAAAA== \"invert\" Bool 1 AA== 7 \"threshold\" 1 1 \"shd_rolloff\" 1 1 \"cyan\" 1 1 \"magenta\" 1 1 \"yellow\" 1 1 \"method\" 1 1 \"invert\" 1 1 3 \"thr\" Float 1 1 AAAAAA== \"lim\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"pi\" Float 1 1 AAAAAA=="
  kernelSource "kernel GamutCompression : public ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float threshold;\n    float shd_rolloff;\n    float cyan;\n    float magenta;\n    float yellow;\n    int method;\n    bool invert;\n\n\n  local:\n  float thr;\n  float3 lim;\n  float pi;\n\n  void init() \{\n    pi = 3.14159265359;\n\n    // thr is the percentage of the core gamut to protect: the complement of threshold.\n    thr = 1 - threshold;\n\n    // lim is the max distance from the gamut boundary that will be compressed\n    // 0 is a no-op, 1 will compress colors from a distance of 2.0 from achromatic to the gamut boundary\n    // if method is Reinhard, use the limit as-is\n    if (method == 1) \{\n      lim = float3(cyan+1, magenta+1, yellow+1);\n    \} else \{\n      // otherwise, we have to bruteforce the value of limit \n      // such that lim is the value of x where y=1\n      // importantly, this runs once at the beginning of evaluation, NOT per-pixel!!!\n      lim = float3(\n        bisect(max(0.0001, cyan)+1),\n        bisect(max(0.0001, magenta)+1),\n        bisect(max(0.0001, yellow)+1));\n    \}\n  \}\n\n  // calculate hyperbolic tangent\n  float tanh( float in) \{\n    float f = exp(2.0f*in);\n    return (f-1.0f) / (f+1.0f);\n  \}\n\n  // calculate inverse hyperbolic tangent\n  float atanh( float in) \{\n    return log((1.0f+in)/(1.0f-in))/2.0f;\n  \}\n\n  // compression function which gives the y=1 x intersect at y=0\n  float f(float x, float k) \{\n    if (method == 0) \{\n      // natural logarithm compression method\n      return (exp((1-thr+thr*log(1-x)-x*thr*log(1-x))/(thr*(1-x))))*thr+x*thr-k;\n    \} else if (method == 1) \{\n      return k;\n    \} else if (method == 2) \{ \n      // natural exponent compression method\n      return -log((-x+1)/(thr-x))*(-thr+x)+thr-k;\n    \} else if (method == 3) \{\n      // arctangent compression method\n      return (2*tan( (pi*(1-thr))/(2*(x-thr)))*(x-thr))/pi+thr-k;\n    \} else if (method == 4) \{\n      // hyperbolic tangent compression method\n      return atanh((1-thr)/(x-thr))*(x-thr)+thr-k;\n    \}\n  \}\n\n  int sign(float x) \{\n    return x == 0 ? 0 : x > 0 ? 1 : 0;\n  \}\n\n  float bisect(float k) \{\n    // use a simple bisection algorithm to bruteforce the root of f\n    // returns an approximation of the value of limit \n    // such that the compression function intersects y=1 at desired value k\n    // this allows us to specify the max distance we will compress to the gamut boundary\n    \n    float a, b, c, y;\n    float tol = 0.0001; // accuracy of estimate\n    int nmax = 100; // max iterations\n\n    // set up reasonable initial guesses for each method given output ranges of each function\n    if (method == 0) \{\n      // natural logarithm needs a limit between -inf (linear), and 1 (clip)\n      a = -15;\n      b = 0.98;\n    \} else if (method == 4) \{\n      // tanh needs more precision\n      a = 1.000001;\n      b = 5;\n    \} else \{\n      a = 1.0001;\n      b = 5;\n    \}\n\n    if (sign(f(a, k)) == sign(f(b, k))) \{\n      // bad estimate. return something close to linear\n      if ((method == 0) || (method == 2)) \{\n        return -100;\n      \} else \{\n        return 1.999999;\n      \}\n    \}\n    c = (a+b)/2;\n    y = f(c, k);\n    if (y == 0) \{\n      return c; // lucky guess\n    \}\n\n    int n = 1;\n    while ((fabs(y) > tol) && (n <= nmax)) \{\n      if (sign(y) == sign(f(a, k))) \{\n        a = c;\n      \} else \{\n        b = c;\n      \}\n      c = (a+b)/2;\n      y = f(c, k);\n      n += 1;\n    \}\n    return c;\n  \}\n\n\n  // calculate compressed distance\n  float compress(float dist, float lim) \{\n    float cdist;\n    if (dist < thr) \{\n      cdist = dist;\n    \} else \{\n      if (method == 0) \{\n        // natural logarithm compression method: https://www.desmos.com/calculator/hmzirlw7tj\n        // inspired by ITU-R BT.2446 http://www.itu.int/pub/R-REP-BT.2446-2019\n        if (invert == 0) \{\n          cdist = thr*log(dist/thr-lim)-lim*thr*log(dist/thr-lim)+thr-thr*log(1-lim)+lim*thr*log(1-lim);\n        \} else \{\n          cdist = exp((dist-thr+thr*log(1-lim)-lim*thr*log(1-lim))/(thr*(1-lim)))*thr+lim*thr;\n        \}\n      \} else if (method == 1) \{\n        // simple Reinhard type compression method: https://www.desmos.com/calculator/lkhdtjbodx\n        if (invert == 0) \{\n          cdist = thr + 1/(1/(dist - thr) + 1/(1 - thr) - 1/(lim - thr));\n        \} else \{\n          cdist = thr + 1/(1/(dist - thr) - 1/(1 - thr) + 1/(lim - thr));\n        \}\n      \} else if (method == 2) \{\n        // natural exponent compression method: https://www.desmos.com/calculator/s2adnicmmr\n        if (invert == 0) \{\n          cdist = lim-(lim-thr)*exp(-(((dist-thr)*((1*lim)/(lim-thr))/lim)));\n        \} else \{\n          cdist = -log((dist-lim)/(thr-lim))*(-thr+lim)/1+thr;\n        \}\n      \} else if (method == 3) \{\n        // arctangent compression method: https://www.desmos.com/calculator/h96qmnozpo\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * 2 / pi * atan(pi/2 * (dist - thr)/(lim - thr));\n        \} else \{\n          cdist = thr + (lim - thr) * 2 / pi * tan(pi/2 * (dist - thr)/(lim - thr));\n        \}\n      \} else if (method == 4) \{\n        // hyperbolic tangent compression method: https://www.desmos.com/calculator/xiwliws24x\n        if (invert == 0) \{\n          cdist = thr + (lim - thr) * tanh( ( (dist - thr)/( lim - thr)));\n        \} else \{\n          cdist = thr + (lim - thr) * atanh( dist/( lim - thr) - thr/( lim - thr));\n        \}\n      \}\n    \}\n    return cdist;\n  \}\n\n\n  void process() \{\n    // source pixels\n    SampleType(src) rgba = src();\n    float3 rgb = float3(rgba.x, rgba.y, rgba.z);\n\n    // achromatic axis \n    float ach = max(rgb.x, max(rgb.y, rgb.z));\n\n    // achromatic with shadow rolloff below shd_rolloff threshold\n    float ach_shd = 1-( (1-ach)<(1-shd_rolloff)?(1-ach):(1-shd_rolloff)+shd_rolloff*tanh((((1-ach)-(1-shd_rolloff))/shd_rolloff)));\n\n    // distance from the achromatic axis for each color component aka inverse rgb ratios\n    // distance is normalized by achromatic, so that 1.0 is at gamut boundary, avoid 0 div\n    float3 dist = ach_shd == 0 ? float3(0, 0, 0) : (ach-rgb)/ach_shd;\n\n    // compress distance with user controlled parameterized shaper function\n    float3 cdist = float3(\n      compress(dist.x, lim.x),\n      compress(dist.y, lim.y),\n      compress(dist.z, lim.z));\n\n    // recalculate rgb from compressed distance and achromatic\n    // effectively this scales each color component relative to achromatic axis by the compressed distance\n    float3 crgb = ach-cdist*ach_shd;\n\n    // write to output\n    dst() = float4(crgb.x, crgb.y, crgb.z, rgba.w);\n  \}\n\};"
  useGPUIfAvailable {{parent.use_gpu}}
  rebuild ""
  GamutCompression_threshold {{parent.threshold}}
  GamutCompression_shd_rolloff {{parent.shd_rolloff}}
  GamutCompression_cyan {{parent.cyan}}
  GamutCompression_magenta {{parent.magenta}}
  GamutCompression_yellow {{parent.yellow}}
  GamutCompression_method {{parent.method}}
  GamutCompression_invert {{parent.direction}}
  rebuild_finalise ""
  name GamutCompress
  xpos -40
  ypos 80
 }
 Output {
  name Output
  xpos -40
  ypos 134
 }
end_group
set Ne8ebb60 [stack 0]
Reformat {
 format "1024 1024 0 0 1024 1024 1 square_1K"
 name Reformat4
 note_font Helvetica
 xpos 7880
 ypos 7450
}
Group {
 name PlotPoints2
 xpos 7880
 ypos 7502
 addUserKnob {20 PlotPoints_tab l PlotPoints}
 addUserKnob {6 plot_input l "plot input" +STARTLINE}
 addUserKnob {6 plot_spectral_locus l "plot spectral locus" -STARTLINE}
 plot_spectral_locus true
 addUserKnob {6 plot_pointers_gamut l "plot pointers gamut" -STARTLINE}
 plot_pointers_gamut true
 addUserKnob {41 gamut T GamutToXYZ.gamut}
 addUserKnob {4 transform M {none XYZ Yxy}}
 transform Yxy
 addUserKnob {4 diagram M {"1931 xy chromaticity diagram" "1976 u'v' chromaticity diagram" none}}
 addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
 addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 addUserKnob {26 ""}
 addUserKnob {7 right_margin l "right margin" R 1 2}
 right_margin 1.04
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin -0.153
}
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name ORTHO
  xpos -1350
  ypos 476
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -2369
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -2369
  ypos -439
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -2369
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -2369
  ypos -333
 }
 BlackOutside {
  name BlackOutside2
  xpos -2369
  ypos -251
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -2369
  ypos -203
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2335
  ypos -148
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos -2149
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -2149
  ypos -440
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -2149
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -2149
  ypos -328
 }
 BlackOutside {
  name BlackOutside3
  xpos -2149
  ypos -251
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -2149
  ypos -202
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -2149
  ypos -152
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -2149
  ypos -105
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -2149
  ypos -63
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2115
  ypos -28
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1903
  ypos -28
 }
set N60ff9b10 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -1827
  ypos -552
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -1827
  ypos -510
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -1827
  ypos -456
 }
set Nfcff9fd0 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -452
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -1717
  ypos -414
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -1717
  ypos -360
 }
 BlackOutside {
  name BlackOutside1
  xpos -1717
  ypos -312
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -236
 }
push $Nfcff9fd0
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -1827
  ypos -414
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -1827
  ypos -356
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -294
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -1827
  ypos -240
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -1827
  ypos -203
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -1827
  ypos -151
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -1827
  ypos -125
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -1827
  ypos -99
  disable {{parent.plot_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos -52
 }
set N971ed2a0 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos -52
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -1717
  ypos -32
  disable {{!parent.plot_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -1717
  ypos 6
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos 179
 }
push $N60ff9b10
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1937
  ypos -1
 }
push $N971ed2a0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -1
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -1827
  ypos 60
  disable {{!parent.plot_pointers_gamut}}
 }
 Group {
  inputs 2
  name PlotPoints1
  xpos -1827
  ypos 175
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 590
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 668
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail {{parent.parent.PositionToPoints1.detail}}
   pointSize {{parent.parent.PositionToPoints1.pointSize}}
   name PositionToPoints1
   xpos 400
   ypos 782
  }
  Output {
   name Output
   xpos 400
   ypos 878
  }
 end_group
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos 342
 }
 Input {
  inputs 0
  name Input
  xpos -1250
  ypos -153
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 42
 }
set N9695b430 [stack 0]
 Group {
  name GamutToXYZ
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos -1140
  ypos 32
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 90
 }
set N8440e2f0 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1030
  ypos 80
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1030
  ypos 127
  disable {{"!(parent.diagram == 1)"}}
 }
push $N8440e2f0
push $N9695b430
 Switch {
  inputs 3
  which {{parent.transform}}
  name Switch1
  xpos -1140
  ypos 183
 }
push $N9695b430
 Group {
  inputs 2
  name PositionToPoints1
  xpos -1250
  ypos 218
  disable {{!parent.plot_input}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 587
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 585
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 639
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail 0.135
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 754
  }
  Output {
   name Output
   xpos 400
   ypos 846
  }
 end_group
 Scene {
  inputs 2
  name Scene1
  xpos -1240
  ypos 318
 }
 Constant {
  inputs 0
  format "2048 2048 0 0 2048 2048 1 square_2K"
  name Constant1
  xpos -1140
  ypos 496
  postage_stamp false
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender1
  xpos -1250
  ypos 544
 }
 Output {
  name Output
  xpos -1250
  ypos 664
 }
end_group
set N60df9e70 [stack 0]
Group {
 name PlotChromaticity2
 xpos 7000
 ypos 7622
 hide_input true
 addUserKnob {20 PlotGamut_tab l PlotGamut}
 addUserKnob {6 plot_input l "&nbsp;<b>Plot Input Pixels" t "Enable plotting of the input pixels" +STARTLINE}
 plot_input true
 addUserKnob {41 input_gamut t "Set the gamut that the input colors are encoded in" T GamutToXYZ.gamut}
 addUserKnob {4 diagram t "Choose the type of chromaticity diagram" M {"CIE 1931 xy Chromaticity Diagram" "CIE 1976 u' v' Uniform Chromaticity Scale Diagram" ""}}
 addUserKnob {4 plot_type l "plot type" t "Choose the type of plot rendering.\n\nBlinkScript uses a custom blinkscript plotting node which is very fast.\n\nPositionToPoints renders each pixels as a point in 3D space and renders it through a ScanlineRender node. Much slower and more buggy, but can be useful for visualizing the 3 dimensional aspect of the color data." M {BlinkScript "PositionToPoints + ScanlineRender"}}
 addUserKnob {6 enable_sample_color l "enable sample color" t "Enable plotting of the sampled color below" +STARTLINE}
 addUserKnob {41 sample_color l "sample color" t "sample and plot selected color" T SampleColor.color}
 addUserKnob {22 follow_viewer l "follow viewer" T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('v = nuke.activeViewer().node()\\nif v and v.name() == nuke.thisNode().name():\\n    con = v.input(nuke.activeViewer().activeInput())\\n    plt = nuke.toNode(\"\{0\}\")\\n    plt.setInput(0, con)'.format(n.name()))" +STARTLINE}
 addUserKnob {22 unfollow_viewer l "unfollow viewer" -STARTLINE T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('')"}
 addUserKnob {26 ""}
 addUserKnob {26 plot_dimensions_label l " " T "<b>Plot Dimensions"}
 addUserKnob {7 right_margin l "right margin" R 1 1.5}
 right_margin 1.3
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin 0.08
 addUserKnob {41 output_format l format T Plot_Input.format}
 addUserKnob {6 resample_input l "resample input" t "scale down input - can help speed up plotting for high resolution inputs." +STARTLINE}
 addUserKnob {3 input_width l " " t "width to resample input to" -STARTLINE}
 input_width 2048
 addUserKnob {6 map_overlays_to_input_gamut l "map overlays to input gamut" t "This maps the overlays like the spectral locus, pointer's gamut, and the gamut overlay to the working gamut instead of keeping them as XYZ.\n\nFor example if the input gamut is ACEScg, these overlays will be mapped to that. Note that this can cause most of the overlays to be negative or highly saturated which might harm the visual appearance." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 draw_axis l "&nbsp;&nbsp; <b> Coordinate Grid" t "Draw coordinate grid" +STARTLINE}
 draw_axis true
 addUserKnob {6 full_width_grid l "full width grid" t "Enable full width coordinate grid" +STARTLINE}
 addUserKnob {41 plot_cie_xy_axis_color l "axis color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_color}
 addUserKnob {41 plot_cie_xy_axis_hatch_color l "grid color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_hatch_color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_spectral_locus l " &nbsp;&nbsp; <b> Spectral Locus" t "draw the spectrum locus: the boundary of color the human eye can see." +STARTLINE}
 draw_spectral_locus true
 addUserKnob {6 colorize_spectral_locus l "colorize spectral locus" +STARTLINE}
 addUserKnob {41 spectral_locus_color l color T Fill2.color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_gamut_overlay l " &nbsp;&nbsp; <b> Gamut Overlay" t "draw an overlay of a color gamut (choose gamut below)" +STARTLINE}
 draw_gamut_overlay true
 addUserKnob {41 gamut_overlay l gamut t "choose gamut to overlay" T GamutToXYZ_OVERLAY.gamut}
 addUserKnob {4 style t "Choose the style to display the gamut plot" M {boundary dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density t "Density of the grid or points if style is not boundary" R 10 100}
 density 55
 addUserKnob {7 opacity_gamut_overlay l opacity R 0.1 1}
 opacity_gamut_overlay 0.5
 addUserKnob {6 colorize_gamut_boundary l "colorize gamut boundary" t "use a constant color for the gamut overlay instead of the spectral boundary colors." +STARTLINE}
 colorize_gamut_boundary true
 addUserKnob {41 overlay_gamut_color l color t "gamut boundary fill color, if enabled." T Fill1.color}
 addUserKnob {26 ""}
 addUserKnob {6 enable_pointers_gamut l "&nbsp; <b>Pointers Gamut" t "Enable Pointer's gamut overlay" +STARTLINE}
 addUserKnob {6 enable_pointer_samples l "enable samples" t "show the individual pointer gamut samples" +STARTLINE}
 enable_pointer_samples true
 addUserKnob {6 colorize_pointers_gamut l "colorize pointers gamut" t "set the pointer's gamut colors to a constant" +STARTLINE}
 addUserKnob {41 color T ColorizePointers.color}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "Draw Gamut"
  note_font_size 42
  xpos -2165
  ypos -325
  bdwidth 585
  bdheight 1462
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x222222ff
  label "Draw Spectral Locus"
  note_font_size 42
  xpos -955
  ypos -321
  bdwidth 582
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "Plot Input Pixels"
  note_font_size 42
  xpos 218
  ypos -633
  bdwidth 797
  bdheight 2562
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x202020ff
  label "Pointer's Gamut"
  note_font_size 48
  xpos -1535
  ypos -321
  bdwidth 554
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3a3a3aff
  label "Sample Input Color"
  note_font_size 42
  xpos -112
  ypos 75
  bdwidth 664
  bdheight 714
  z_order 4
 }
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name Camera1
  xpos -708
  ypos 1329
 }
 Input {
  inputs 0
  name Input
  xpos 620
  ypos -490
 }
 AddChannels {
  name AddChannels1
  xpos 620
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{parent.input_width}}
  box_height {{rint(box_width/(input.width/input.height))}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  filter impulse
  name ResampleInput
  xpos 620
  ypos -370
  disable {{!parent.resample_input}}
 }
 Dot {
  name Dot7
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 162
 }
set N10bb21f0 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 162
 }
 Group {
  name GamutToXYZ
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos 730
  ypos 248
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 730
  ypos 296
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression4
  label "CIE Yxy to CIELuv"
  xpos 730
  ypos 344
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot13
  label " Pos"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 618
 }
set N10c3a720 [stack 0]
push $N10bb21f0
 Dot {
  name Dot16
  label " Col"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 522
 }
set N10c3f800 [stack 0]
 Group {
  inputs 2
  name PlotPoints2
  xpos 730
  ypos 686
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 0.1
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 1266
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -1470
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -1470
  ypos -9
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -1470
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -1470
  ypos 98
 }
 BlackOutside {
  name BlackOutside2
  xpos -1470
  ypos 179
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -1470
  ypos 227
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1436
  ypos 282
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -1250
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -1250
  ypos -10
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -1250
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -1250
  ypos 98
 }
 BlackOutside {
  name BlackOutside3
  xpos -1250
  ypos 179
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -1250
  ypos 228
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1250
  ypos 278
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -1250
  ypos 325
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -1250
  ypos 367
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 402
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -776
  ypos 402
 }
set N10da16b0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -700
  ypos -122
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -700
  ypos -80
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -700
  ypos -26
 }
set N10dbf580 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos -22
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -590
  ypos 16
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 70
 }
 BlackOutside {
  name BlackOutside1
  xpos -590
  ypos 118
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos 194
 }
push $N10dbf580
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -700
  ypos 16
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -700
  ypos 74
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 136
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -700
  ypos 190
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -700
  ypos 227
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -700
  ypos 279
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -700
  ypos 305
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -700
  ypos 337
  disable {{parent.draw_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 378
 }
set N10eb61e0 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -590
  ypos 398
  disable {{!parent.enable_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -590
  ypos 493
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 609
 }
set N10edf220 [stack 0]
push $N10da16b0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -810
  ypos 440
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix3
  label "XYZ to working"
  xpos -810
  ypos 478
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.43 1 1}
  unpremult rgba.alpha
  name ColorizePointers
  xpos -810
  ypos 575
  disable {{!parent.colorize_pointers_gamut x1 1}}
 }
push $N10eb61e0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 429
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to working"
  xpos -700
  ypos 477
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0.5 1 1}
  unpremult rgba.alpha
  name Fill2
  xpos -700
  ypos 528
  disable {{!parent.colorize_spectral_locus}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -700
  ypos 581
  disable {{!parent.enable_pointers_gamut}}
 }
set N10f46ec0 [stack 0]
 Group {
  inputs 2
  name PlotPoints1
  xpos -590
  ypos 650
  disable {{!(parent.draw_spectral_locus||parent.enable_pointers_gamut)}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Group {
  inputs 0
  name GamutGrid
  xpos -2020
  ypos 398
  addUserKnob {20 GamutGrid}
  addUserKnob {3 style}
  style {{max(0,parent.style-1)}}
  addUserKnob {3 distribution -STARTLINE}
  distribution {{parent.distribution}}
  addUserKnob {7 density R 10 150}
  density {{parent.density}}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {12 wxy}
  wxy {{parent.GamutToXYZ_OVERLAY.wxy} {parent.GamutToXYZ_OVERLAY.wxy}}
 }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   centerSaturation 1
   fillFormat false
   area {-170 -158 682 670}
   name ColorWheel4
   xpos -260
   ypos 3
   postage_stamp false
  }
  Crop {
   box {0 0 512 512}
   crop false
   name Crop2
   xpos -260
   ypos 29
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat3
   note_font "Bitstream Vera Sans"
   xpos -260
   ypos 110
  }
set N10faadc0 [stack 0]
push $N10faadc0
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   roworder TopBottom
   name ContactSheet2
   xpos -260
   ypos 169
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -226
   ypos 246
  }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   fillFormat false
   area {40 40 472 472}
   name ColorWheel1
   xpos -40
   ypos -664
   postage_stamp false
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -628
  }
  Crop {
   box {0 0 {width} {height}}
   reformat true
   name Crop1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -602
  }
  Unpremult {
   name Unpremult1
   xpos -40
   ypos -526
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos -415
  }
  Colorspace {
   colorspace_in CIE-XYZ
   colorspace_out CIE-Yxy
   name Colorspace1
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -341
  }
set N11004c50 [stack 0]
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos -331
  }
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression5
   label "CIE Yxy to CIELuv"
   xpos -590
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
   expr2 "hypot(g-white.x, b-white.y)"
   expr3 a
   name Expression3
   xpos -590
   ypos -261
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
  }
set N11030920 [stack 0]
  Posterize {
   channels rgb
   Colors {{rint(parent.density/3*2)}}
   name Posterize1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos -194
  }
set N1103fb20 [stack 0]
push $N11030920
  Dot {
   name Dot15
   note_font "Bitstream Vera Sans"
   xpos -446
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   name Copy1
   xpos -480
   ypos -154
  }
push $N1103fb20
push $N11030920
  Dot {
   name Dot16
   note_font "Bitstream Vera Sans"
   xpos -666
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   name Copy2
   xpos -700
   ypos -153
  }
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   center true
   roworder TopBottom
   name ContactSheet3
   xpos -590
   ypos -102
  }
  Expression {
   expr0 r
   expr1 cos(radians(g*360))*b+white.x
   expr2 sin(radians(g*360))*b+white.y
   expr3 a
   name Expression19
   xpos -590
   ypos -57
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{parent.Expression3.white} {parent.Expression3.white}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression2
   label "CIELuv to CIE Yxy"
   xpos -590
   ypos -16
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace2
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -590
   ypos 31
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix1
   label "XYZ to RGB"
   xpos -590
   ypos 81
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin2
   xpos -590
   ypos 119
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 156
  }
  Premult {
   name Premult1
   xpos -590
   ypos 194
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge2
   xpos -590
   ypos 242
  }
  Shuffle {
   alpha white
   name Shuffle1
   label "\[value in] -> \[value out]"
   xpos -590
   ypos 314
  }
  Dot {
   name Dot3
   label " GRID"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos 378
  }
push $N10faadc0
push $N11004c50
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression4
   label "CIE Yxy to CIELuv"
   xpos -40
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 rint(g*Colors)/Colors
   expr2 rint(b*Colors)/Colors
   expr3 a
   name Expression1
   label rint
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -233
   addUserKnob {20 User}
   addUserKnob {7 Colors R 1 256}
   Colors {{parent.density}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression6
   label "CIELuv to CIE Yxy"
   xpos -40
   ypos -184
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace3
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -133
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix3
   label "XYZ to RGB"
   xpos -40
   ypos -57
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp4
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -13
  }
  Premult {
   name Premult2
   xpos -40
   ypos 34
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge1
   xpos -40
   ypos 110
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin1
   xpos -40
   ypos 175
  }
  Dot {
   name Dot4
   label " DOTS"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 378
  }
  Switch {
   inputs 2
   which {{parent.style}}
   name Switch1
   xpos -257
   ypos 483
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix2
   label "RGB to XYZ"
   xpos -257
   ypos 560
  }
  Output {
   name Output
   xpos -257
   ypos 740
  }
  ColorWheel {
   inputs 0
   format "256 256 0 0 256 256 1 square_256"
   area {40 40 472 472}
   name ColorWheel2
   xpos -37
   ypos -705
   postage_stamp false
  }
 end_group
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  centerSaturation 1
  name ColorWheel4
  xpos -1910
  ypos 254
  postage_stamp false
 }
 Unpremult {
  name Unpremult1
  xpos -1910
  ypos 302
 }
 Group {
  name GamutToXYZ_OVERLAY
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos -1910
  ypos 343
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch_Outline
  xpos -1910
  ypos 398
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 450
 }
set N1122ebe0 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1800
  ypos 440
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1800
  ypos 512
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 570
 }
set N11259f30 [stack 0]
push $N1122ebe0
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to working"
  xpos -1910
  ypos 471
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.5 0.1 1}
  name Fill1
  xpos -1910
  ypos 521
  disable {{!parent.colorize_gamut_boundary}}
 }
set N1126c600 [stack 0]
 Group {
  inputs 2
  name PlotPoints
  xpos -1800
  ypos 614
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 1266
 }
 Scene {
  inputs 3
  name Scene1
  xpos -580
  ypos 1242
 }
push $N10c3a720
push $N10c3f800
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{"parent.diagram? parent.right_margin * 0.72 : parent.right_margin"}}
  plot_cie_xy_left_margin {{parent.left_margin}}
  plot_cie_xy_process_input {{parent.plot_input}}
  format "1024 1024 0 0 1024 1024 1 square_1K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Input
  xpos 620
  ypos 608
 }
set N112bcfc0 [stack 0]
 Fill {
  color 0
  name Fill4
  xpos -464
  ypos 1357
  hide_input true
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender
  xpos -590
  ypos 1382
 }
 Dot {
  name Dot17
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 1482
 }
push $N11259f30
push $N1126c600
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 3a854edac5c1c8e3a3d2801ec73798509e6e91ec7294287590bd8357a67964d1 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 5 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 5 \"padding\" 1 1 \"left_margin\" 1 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input true
  plot_cie_xy_add_samples 0.5
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Gamut
  xpos -1910
  ypos 604
 }
 Multiply {
  channels rgba
  value {{parent.opacity_gamut_overlay}}
  name GamutOverlayOpacity
  xpos -1910
  ypos 686
  disable true
 }
 FrameHold {
  first_frame 1
  name FrameHold2
  xpos -1910
  ypos 764
  cached true
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 834
 }
push $N10edf220
push $N10f46ec0
 BlinkScript {
  inputs 2
  recompileCount 5
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 65751dc3c93d46b59ba922fda7175ada4e69018b6dd8c29c890f1487b4a4c5d0 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 9 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"draw_axes\" Bool 1 AA== \"grid_hatch_length\" Float 1 AAAAAA== \"axis_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"axis_hatch_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 9 \"padding\" 1 1 \"left_margin\" 1 1 \"draw_axes\" 1 1 \"grid_hatch_length\" 1 1 \"axis_color\" 4 1 \"axis_hatch_color\" 4 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool draw_axes;\n  float grid_hatch_length;\n  float4 axis_color;\n  float4 axis_hatch_color;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n\n  void draw_grid() \{\n    // grid width in pixels. expresses a 0 to 1 range in CIE xy\n    float grid_width = 1.0f * outsize + offset;\n    // hatch interval gives us cross-hatching at specified interval in pixels. defaults to 0.1\n    int hatch_int = int(round(grid_width - offset) * 0.1f);\n    float hatchw = outsize * grid_hatch_length; // The width of the cross-hatch: 1% of grid width\n\n    int hatch_ct = 0;\n    for ( int i = offset; i < grid_width; i++ ) \{\n      // draw vertical axis\n      bilin( float2(offset, i), axis_color);\n      // draw horizontal axis\n      bilin( float2(i, offset), axis_color);\n      // draw cross hatches at every \n      if (hatch_ct == hatch_int) \{\n        hatch_ct = 0;\n        for ( int j = -outsize*0.01; j < hatchw; j++) \{\n          bilin(float2(round(offset + j), i), axis_hatch_color);\n          bilin(float2(i+ (offset-offset), round(offset + j)), axis_hatch_color);\n        \}\n      \}\n      hatch_ct++;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n    // Draw axes if enabled\n    if (draw_axes) \{\n      draw_grid();\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_draw_axes {{parent.draw_axis}}
  plot_cie_xy_grid_hatch_length {{"parent.full_width_grid ? 1 : 0.01"}}
  plot_cie_xy_axis_color 0.1
  plot_cie_xy_axis_hatch_color 0.02
  plot_cie_xy_antialias true
  plot_cie_xy_process_input {{"parent.draw_spectral_locus || parent.enable_pointers_gamut"}}
  plot_cie_xy_add_samples 0.7
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SpectralLocus_and_Axis
  xpos -700
  ypos 643
 }
 FrameHold {
  first_frame 1
  name FrameHold1
  xpos -700
  ypos 699
  cached true
 }
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 762
 }
push $N10bb21f0
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos 400
  ypos 110
  postage_stamp false
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input0]"}}
  name Switch1
  xpos 400
  ypos 158
 }
 Fill {
  output rgb
  color {1 1 1 1}
  name SampleColor
  xpos 290
  ypos 158
 }
 Fill {
  output alpha
  name Fill3
  xpos 290
  ypos 224
 }
 Reformat {
  type "to box"
  box_width 1
  box_height {{box_width}}
  box_fixed true
  name ReformatBox
  xpos 290
  ypos 278
 }
set N11389100 [stack 0]
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "working to XYZ"
  xpos 180
  ypos 272
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 180
  ypos 320
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression6
  label "CIE Yxy to CIELuv"
  xpos 180
  ypos 368
  disable {{!parent.diagram}}
 }
push $N11389100
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_process_input true
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SampledColor
  xpos 290
  ypos 368
 }
 Dot {
  name Dot22
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos 426
 }
set N113e2980 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate1
  label "\[value size]"
  xpos 290
  ypos 488
 }
set N113e85b0 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate2
  label "\[value size]"
  xpos 180
  ypos 488
 }
push $N113e2980
 Dot {
  name Dot21
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 426
 }
 Dilate {
  channels rgba
  size 1
  name Dilate5
  label "\[value size]"
  xpos -40
  ypos 464
 }
 FilterErode {
  channels rgba
  size -0.5
  filter gaussian
  name FilterErode1
  label "\[value size]"
  note_font Helvetica
  xpos -40
  ypos 514
 }
set N1140ea00 [stack 0]
 Dilate {
  channels rgba
  size {0 {parent.Dilate3.size.w}}
  name Dilate4
  label "\[value size]"
  xpos -40
  ypos 584
 }
push $N1140ea00
 Dilate {
  channels rgba
  size {{Output.width*plus_size/100} 0}
  name Dilate3
  label "\[value size]"
  xpos 70
  ypos 512
  addUserKnob {20 User}
  addUserKnob {7 plus_size R 0 4}
  plus_size 0.8
 }
 Merge2 {
  inputs 2
  operation screen
  bbox B
  name Merge9
  note_font Helvetica
  xpos 70
  ypos 591
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge10
  note_font Helvetica
  xpos 180
  ypos 591
 }
 Group {
  name HueRotate
  note_font Helvetica
  xpos 180
  ypos 639
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
push $N113e85b0
 Merge2 {
  inputs 2
  bbox B
  name Merge8
  xpos 290
  ypos 638
 }
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 690
 }
push $N112bcfc0
 Merge2 {
  inputs 2
  bbox B
  name Merge7
  xpos 620
  ypos 686
  disable {{!parent.enable_sample_color}}
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 620
  ypos 758
  disable {{"!parent.draw_spectral_locus && !parent.draw_axis"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 620
  ypos 830
  disable {{!parent.draw_gamut_overlay}}
 }
 Blur {
  channels rgba
  size 1.5
  name Blur1
  label "poor man's antialiasing"
  xpos 620
  ypos 1136
 }
 Switch {
  inputs 2
  which {{parent.plot_type}}
  name Switch_PlotType
  xpos 620
  ypos 1478
 }
 Output {
  name Output
  xpos 620
  ypos 1641
 }
end_group
set N10b48de0 [stack 0]
Viewer {
 frame_range 1-100
 viewerProcess "raw (rec1886)"
 name CHROMATICITY
 knobChanged "v = nuke.activeViewer().node()\nif v and v.name() == nuke.thisNode().name():\n    con = v.input(nuke.activeViewer().activeInput())\n    plt = nuke.toNode(\"PlotChromaticity2\")\n    plt.setInput(0, con)"
 note_font Helvetica
 xpos 7000
 ypos 7671
 addUserKnob {20 Lock}
 addUserKnob {6 lock_all_buffers l "lock all buffers" -STARTLINE}
 lock_all_buffers true
 addUserKnob {6 lock_buffer_1 l "lock buffer 1" +STARTLINE}
 addUserKnob {6 lock_buffer_2 l "lock buffer 2" +STARTLINE}
 addUserKnob {6 lock_buffer_3 l "lock buffer 3" +STARTLINE}
 addUserKnob {6 lock_buffer_4 l "lock buffer 4" +STARTLINE}
 addUserKnob {6 lock_buffer_5 l "lock buffer 5" +STARTLINE}
 addUserKnob {6 lock_buffer_6 l "lock buffer 6" +STARTLINE}
 addUserKnob {6 lock_buffer_7 l "lock buffer 7" +STARTLINE}
 addUserKnob {6 lock_buffer_8 l "lock buffer 8" +STARTLINE}
 addUserKnob {6 lock_buffer_9 l "lock buffer 9" +STARTLINE}
 addUserKnob {6 lock_buffer_0 l "lock buffer 0" +STARTLINE}
}
Group {
 inputs 0
 name PlotPoints3
 xpos 11290
 ypos 2846
 addUserKnob {20 PlotPoints_tab l PlotPoints}
 addUserKnob {6 plot_input l "plot input" +STARTLINE}
 addUserKnob {6 plot_spectral_locus l "plot spectral locus" -STARTLINE}
 plot_spectral_locus true
 addUserKnob {6 plot_pointers_gamut l "plot pointers gamut" -STARTLINE}
 plot_pointers_gamut true
 addUserKnob {41 gamut T GamutToXYZ.gamut}
 addUserKnob {4 transform M {none XYZ Yxy}}
 transform Yxy
 addUserKnob {4 diagram M {"1931 xy chromaticity diagram" "1976 u'v' chromaticity diagram" none}}
 addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
 addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 addUserKnob {26 ""}
 addUserKnob {7 right_margin l "right margin" R 1 2}
 right_margin 1.04
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin -0.153
}
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name ORTHO
  xpos -1350
  ypos 476
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -2369
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -2369
  ypos -439
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -2369
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.31 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.397 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.483 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.569 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.655 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.741 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.828 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.914}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -2369
  ypos -333
 }
 BlackOutside {
  name BlackOutside2
  xpos -2369
  ypos -251
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -2369
  ypos -203
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2335
  ypos -148
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos -2149
  ypos -488
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -2149
  ypos -440
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -2149
  ypos -392
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -2149
  ypos -328
 }
 BlackOutside {
  name BlackOutside3
  xpos -2149
  ypos -251
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -2149
  ypos -202
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -2149
  ypos -152
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -2149
  ypos -105
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -2149
  ypos -63
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -2115
  ypos -28
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1903
  ypos -28
 }
set N101fc150 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -1827
  ypos -552
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -1827
  ypos -510
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -1827
  ypos -456
 }
set N306d7fa0 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -452
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -1717
  ypos -414
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -1717
  ypos -360
 }
 BlackOutside {
  name BlackOutside1
  xpos -1717
  ypos -312
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -1683
  ypos -236
 }
push $N306d7fa0
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -1827
  ypos -414
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -1827
  ypos -356
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -294
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -1827
  ypos -240
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -1827
  ypos -203
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -1827
  ypos -151
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -1827
  ypos -125
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -1827
  ypos -99
  disable {{parent.plot_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos -52
 }
set N603f67c0 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos -52
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -1717
  ypos -32
  disable {{!parent.plot_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -1717
  ypos 6
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1683
  ypos 179
 }
push $N101fc150
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1937
  ypos -1
 }
push $N603f67c0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1827
  ypos -1
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -1827
  ypos 60
  disable {{!parent.plot_pointers_gamut}}
 }
 Group {
  inputs 2
  name PlotPoints1
  xpos -1827
  ypos 175
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 590
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 668
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail {{parent.parent.PositionToPoints1.detail}}
   pointSize {{parent.parent.PositionToPoints1.pointSize}}
   name PositionToPoints1
   xpos 400
   ypos 782
  }
  Output {
   name Output
   xpos 400
   ypos 878
  }
 end_group
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1793
  ypos 342
 }
 Input {
  inputs 0
  name Input
  xpos -1250
  ypos -153
 }
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 42
 }
set N445d22a0 [stack 0]
 Group {
  name GamutToXYZ
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos -1140
  ypos 32
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1106
  ypos 90
 }
set Nc140f70 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1030
  ypos 80
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1030
  ypos 127
  disable {{"!(parent.diagram == 1)"}}
 }
push $Nc140f70
push $N445d22a0
 Switch {
  inputs 3
  which {{parent.transform}}
  name Switch1
  xpos -1140
  ypos 183
 }
push $N445d22a0
 Group {
  inputs 2
  name PositionToPoints1
  xpos -1250
  ypos 218
  disable {{!parent.plot_input}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 587
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 585
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 pos.red
   from1 rgba.blue
   to1 pos.green
   from2 rgba.red
   to2 pos.blue
   name Copy1
   xpos 400
   ypos 639
  }
  PositionToPoints2 {
   display textured
   selectable false
   render_mode textured
   cast_shadow false
   receive_shadow false
   P_channel pos
   detail 0.135
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 754
  }
  Output {
   name Output
   xpos 400
   ypos 846
  }
 end_group
 Scene {
  inputs 2
  name Scene1
  xpos -1240
  ypos 318
 }
 Constant {
  inputs 0
  format "2048 2048 0 0 2048 2048 1 square_2K"
  name Constant1
  xpos -1140
  ypos 496
  postage_stamp false
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender1
  xpos -1250
  ypos 544
 }
 Output {
  name Output
  xpos -1250
  ypos 664
 }
end_group
Group {
 inputs 0
 name PlotChromaticity4
 xpos 11180
 ypos 2846
 addUserKnob {20 PlotGamut_tab l PlotGamut}
 addUserKnob {6 plot_input l "&nbsp;<b>Plot Input Pixels" t "Enable plotting of the input pixels" +STARTLINE}
 plot_input true
 addUserKnob {41 input_gamut t "Set the gamut that the input colors are encoded in" T GamutToXYZ.gamut}
 addUserKnob {4 diagram t "Choose the type of chromaticity diagram" M {"CIE 1931 xy Chromaticity Diagram" "CIE 1976 u' v' Uniform Chromaticity Scale Diagram" ""}}
 addUserKnob {4 plot_type l "plot type" t "Choose the type of plot rendering.\n\nBlinkScript uses a custom blinkscript plotting node which is very fast.\n\nPositionToPoints renders each pixels as a point in 3D space and renders it through a ScanlineRender node. Much slower and more buggy, but can be useful for visualizing the 3 dimensional aspect of the color data." M {BlinkScript "PositionToPoints + ScanlineRender"}}
 addUserKnob {6 enable_sample_color l "enable sample color" t "Enable plotting of the sampled color below" +STARTLINE}
 addUserKnob {41 sample_color l "sample color" t "sample and plot selected color" T SampleColor.color}
 addUserKnob {22 follow_viewer l "follow viewer" T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('v = nuke.activeViewer().node()\\nif v and v.name() == nuke.thisNode().name():\\n    con = v.input(nuke.activeViewer().activeInput())\\n    plt = nuke.toNode(\"\{0\}\")\\n    plt.setInput(0, con)'.format(n.name()))" +STARTLINE}
 addUserKnob {22 unfollow_viewer l "unfollow viewer" -STARTLINE T "n = nuke.thisNode()\nnuke.root().begin()\nv = nuke.selectedNode()\nif not v or v.Class() != 'Viewer':\n    nuke.message('Please select a viewer node to follow.')\nelse:\n    v\['knobChanged'].setValue('')"}
 addUserKnob {26 ""}
 addUserKnob {26 plot_dimensions_label l " " T "<b>Plot Dimensions"}
 addUserKnob {7 right_margin l "right margin" R 1 1.5}
 right_margin 1.3
 addUserKnob {7 left_margin l "left margin" R 0 0.2}
 left_margin 0.08
 addUserKnob {41 output_format l format T Plot_Input.format}
 addUserKnob {6 resample_input l "resample input" t "scale down input - can help speed up plotting for high resolution inputs." +STARTLINE}
 addUserKnob {3 input_width l " " t "width to resample input to" -STARTLINE}
 input_width 2048
 addUserKnob {6 map_overlays_to_input_gamut l "map overlays to input gamut" t "This maps the overlays like the spectral locus, pointer's gamut, and the gamut overlay to the working gamut instead of keeping them as XYZ.\n\nFor example if the input gamut is ACEScg, these overlays will be mapped to that. Note that this can cause most of the overlays to be negative or highly saturated which might harm the visual appearance." +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 draw_axis l "&nbsp;&nbsp; <b> Coordinate Grid" t "Draw coordinate grid" +STARTLINE}
 draw_axis true
 addUserKnob {6 full_width_grid l "full width grid" t "Enable full width coordinate grid" +STARTLINE}
 addUserKnob {41 plot_cie_xy_axis_color l "axis color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_color}
 addUserKnob {41 plot_cie_xy_axis_hatch_color l "grid color" T Plot_SpectralLocus_and_Axis.plot_cie_xy_axis_hatch_color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_spectral_locus l " &nbsp;&nbsp; <b> Spectral Locus" t "draw the spectrum locus: the boundary of color the human eye can see." +STARTLINE}
 draw_spectral_locus true
 addUserKnob {6 colorize_spectral_locus l "colorize spectral locus" +STARTLINE}
 addUserKnob {41 spectral_locus_color l color T Fill2.color}
 addUserKnob {26 ""}
 addUserKnob {6 draw_gamut_overlay l " &nbsp;&nbsp; <b> Gamut Overlay" t "draw an overlay of a color gamut (choose gamut below)" +STARTLINE}
 draw_gamut_overlay true
 addUserKnob {41 gamut_overlay l gamut t "choose gamut to overlay" T GamutToXYZ_OVERLAY.gamut}
 addUserKnob {4 style t "Choose the style to display the gamut plot" M {boundary dots grid}}
 addUserKnob {4 distribution t "Which chromaticity space should the overlays be constructed in? \n\nYxy is familiar, but not very perceptually uniform.\n\nLu'v' is designed to be more perceptually uniform." -STARTLINE M {"CIE Yxy" "CIE Lu'v'"}}
 addUserKnob {7 density t "Density of the grid or points if style is not boundary" R 10 100}
 density 55
 addUserKnob {7 opacity_gamut_overlay l opacity R 0.1 1}
 opacity_gamut_overlay 0.5
 addUserKnob {6 colorize_gamut_boundary l "colorize gamut boundary" t "use a constant color for the gamut overlay instead of the spectral boundary colors." +STARTLINE}
 colorize_gamut_boundary true
 addUserKnob {41 overlay_gamut_color l color t "gamut boundary fill color, if enabled." T Fill1.color}
 addUserKnob {26 ""}
 addUserKnob {6 enable_pointers_gamut l "&nbsp; <b>Pointers Gamut" t "Enable Pointer's gamut overlay" +STARTLINE}
 addUserKnob {6 enable_pointer_samples l "enable samples" t "show the individual pointer gamut samples" +STARTLINE}
 enable_pointer_samples true
 addUserKnob {6 colorize_pointers_gamut l "colorize pointers gamut" t "set the pointer's gamut colors to a constant" +STARTLINE}
 addUserKnob {41 color T ColorizePointers.color}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "Draw Gamut"
  note_font_size 42
  xpos -2165
  ypos -325
  bdwidth 585
  bdheight 1462
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x222222ff
  label "Draw Spectral Locus"
  note_font_size 42
  xpos -955
  ypos -321
  bdwidth 582
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "Plot Input Pixels"
  note_font_size 42
  xpos 218
  ypos -633
  bdwidth 797
  bdheight 2562
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x202020ff
  label "Pointer's Gamut"
  note_font_size 48
  xpos -1535
  ypos -321
  bdwidth 554
  bdheight 1458
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x3a3a3aff
  label "Sample Input Color"
  note_font_size 42
  xpos -112
  ypos 75
  bdwidth 664
  bdheight 714
  z_order 4
 }
 Camera2 {
  inputs 0
  display off
  selectable false
  translate {{0.5-parent.left_margin*0.3 x14 0.476000011} {0.5-parent.left_margin*0.3 x14 0.476000011} 3}
  projection_mode orthographic
  focal {{40/parent.right_margin}}
  haperture 50
  vaperture 18
  far 10
  name Camera1
  xpos -708
  ypos 1329
 }
 Input {
  inputs 0
  name Input
  xpos 620
  ypos -490
 }
 AddChannels {
  name AddChannels1
  xpos 620
  ypos -424
 }
 Reformat {
  type "to box"
  box_width {{parent.input_width}}
  box_height {{rint(box_width/(input.width/input.height))}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  filter impulse
  name ResampleInput
  xpos 620
  ypos -370
  disable {{!parent.resample_input}}
 }
 Dot {
  name Dot7
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 162
 }
set N941dcb60 [stack 0]
 Dot {
  name Dot1
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 162
 }
 Group {
  name GamutToXYZ
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos 730
  ypos 248
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace2
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 730
  ypos 296
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression4
  label "CIE Yxy to CIELuv"
  xpos 730
  ypos 344
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot13
  label " Pos"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 618
 }
set N31fe0940 [stack 0]
push $N941dcb60
 Dot {
  name Dot16
  label " Col"
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 654
  ypos 522
 }
set N15f933c0 [stack 0]
 Group {
  inputs 2
  name PlotPoints2
  xpos 730
  ypos 686
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 0.1
   pointSize 2
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot19
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 764
  ypos 1266
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant6
  xpos -1470
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 296
  box_height 2
  box_fixed true
  name ReformatBox3
  xpos -1470
  ypos -9
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp1
  xpos -1470
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve}
    green {curve 0.433 0.464 0.513 0.611 0.576 0.46 0.426 0.412 0.404 0.397 0.384 0.374 0.346 0.333 0.311 0.287 0.257 0.23 0.21 0.219 0.208 0.211 0.208 0.187 0.191 0.187 0.18 0.164 0.17 0.177 0.175 0.188 0.252 0.325 0.385 0.416 0.433 0.487 0.532 0.588 0.637 0.634 0.549 0.506 0.49 0.458 0.426 0.412 0.397 0.365 0.337 0.301 0.262 0.221 0.192 0.164 0.167 0.162 0.176 0.179 0.148 0.156 0.142 0.148 0.138 0.145 0.145 0.161 0.197 0.256 0.324 0.393 0.451 0.487 0.508 0.538 0.587 0.634 0.659 0.611 0.552 0.526 0.484 0.452 0.428 0.406 0.371 0.334 0.293 0.243 0.204 0.177 0.151 0.151 0.162 0.158 0.161 0.142 0.141 0.129 0.134 0.14 0.156 0.166 0.192 0.221 0.265 0.325 0.392 0.451 0.508 0.48 0.513 0.554 0.597 0.63 0.634 0.58 0.546 0.499 0.466 0.434 0.408 0.372 0.332 0.288 0.242 0.202 0.179 0.16 0.157 0.162 0.157 0.159 0.149 0.153 0.147 0.154 0.164 0.18 0.199 0.226 0.25 0.279 0.325 0.38 0.439 0.48 0.436 0.468 0.502 0.541 0.57 0.605 0.594 0.555 0.511 0.473 0.439 0.409 0.371 0.332 0.288 0.252 0.217 0.196 0.181 0.178 0.185 0.176 0.173 0.168 0.176 0.178 0.19 0.202 0.214 0.235 0.254 0.27 0.291 0.323 0.366 0.41 0.436 0.396 0.414 0.438 0.465 0.485 0.527 0.566 0.557 0.523 0.478 0.442 0.409 0.371 0.334 0.294 0.265 0.244 0.223 0.225 0.212 0.218 0.211 0.211 0.207 0.214 0.217 0.229 0.237 0.244 0.264 0.275 0.285 0.3 0.321 0.348 0.376 0.396 0.357 0.368 0.377 0.391 0.402 0.431 0.481 0.503 0.521 0.482 0.444 0.409 0.372 0.337 0.307 0.286 0.27 0.257 0.247 0.251 0.257 0.255 0.254 0.25 0.258 0.259 0.265 0.269 0.278 0.284 0.292 0.297 0.305 0.317 0.33 0.344 0.357 0.321 0.322 0.328 0.332 0.333 0.346 0.365 0.389 0.411 0.459 0.443 0.399 0.352 0.327 0.313 0.304 0.3 0.294 0.295 0.294 0.293 0.292 0.291 0.295 0.3 0.301 0.302 0.304 0.304 0.304 0.305 0.307 0.309 0.312 0.313 0.316 0.321}
    blue {curve 0.26 0.281 0.298 0.306 0.342 0.365 0.39 0.381 0.392 0.416 0.413 0.43 0.448 0.446 0.433 0.425 0.419 0.394 0.362 0.328 0.305 0.298 0.286 0.247 0.26 0.219 0.199 0.168 0.178 0.14 0.11 0.084 0.104 0.158 0.18 0.225 0.26 0.235 0.26 0.28 0.298 0.327 0.372 0.395 0.417 0.43 0.435 0.455 0.488 0.479 0.521 0.522 0.515 0.49 0.436 0.383 0.331 0.295 0.282 0.258 0.219 0.208 0.179 0.168 0.141 0.129 0.106 0.094 0.095 0.112 0.127 0.165 0.199 0.235 0.226 0.258 0.28 0.298 0.316 0.361 0.399 0.427 0.446 0.461 0.482 0.52 0.521 0.553 0.563 0.573 0.524 0.454 0.389 0.33 0.295 0.266 0.247 0.214 0.195 0.168 0.178 0.142 0.14 0.128 0.129 0.126 0.131 0.144 0.167 0.199 0.226 0.238 0.266 0.289 0.31 0.329 0.351 0.395 0.428 0.453 0.475 0.494 0.533 0.542 0.568 0.584 0.576 0.53 0.451 0.385 0.331 0.299 0.266 0.245 0.22 0.206 0.184 0.174 0.167 0.166 0.166 0.173 0.172 0.165 0.172 0.187 0.208 0.238 0.258 0.28 0.3 0.321 0.343 0.362 0.391 0.427 0.458 0.482 0.503 0.546 0.554 0.573 0.582 0.546 0.499 0.431 0.375 0.33 0.304 0.275 0.254 0.234 0.225 0.212 0.209 0.206 0.203 0.21 0.215 0.212 0.204 0.208 0.214 0.231 0.258 0.277 0.294 0.31 0.328 0.348 0.372 0.397 0.427 0.462 0.487 0.51 0.544 0.558 0.559 0.556 0.503 0.444 0.402 0.355 0.329 0.309 0.289 0.275 0.26 0.254 0.245 0.245 0.241 0.238 0.249 0.249 0.245 0.241 0.242 0.246 0.258 0.277 0.295 0.305 0.315 0.327 0.339 0.359 0.39 0.421 0.461 0.491 0.515 0.54 0.546 0.522 0.478 0.429 0.393 0.368 0.345 0.325 0.313 0.303 0.295 0.286 0.284 0.279 0.277 0.274 0.277 0.277 0.28 0.276 0.273 0.274 0.279 0.285 0.295 0.311 0.314 0.316 0.32 0.323 0.331 0.346 0.367 0.397 0.468 0.513 0.494 0.425 0.388 0.372 0.348 0.336 0.331 0.326 0.32 0.316 0.314 0.312 0.309 0.321 0.32 0.319 0.305 0.317 0.316 0.316 0.315 0.316 0.317 0.319 0.321 0.311}
    alpha {}}
  name ColorLookup1
  label "Pointers Samples Yxy\nSource: https://www.rit.edu/cos/colorscience/rc_useful_data.php"
  xpos -1470
  ypos 98
 }
 BlackOutside {
  name BlackOutside2
  xpos -1470
  ypos 179
 }
 Crop {
  box {0 0 {input.width} {height+1}}
  reformat true
  name Crop1
  xpos -1470
  ypos 227
 }
 Dot {
  name Dot12
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1436
  ypos 282
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant1
  xpos -1250
  ypos -58
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width 8000.731495
  box_height 2
  box_fixed true
  name ReformatBox2
  xpos -1250
  ypos -10
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 12
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  color {{input.width}}
  name Ramp2
  xpos -1250
  ypos 38
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.4830000103 x50 0.5045000315 0.5260000229 0.5475000143 0.5690000057 0.5904999971 0.6119999886 0.63349998 0.6549999714 0.6805312037 0.7087500095 0.7315937281 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.7409999967 0.75459373 0.7845000029 0.8144062757 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8280000091 0.8009687662 0.74150002 0.6820312142 0.6549999714 0.6684374809 0.6980000138 0.7275624871 0.7409999967 0.7315937281 0.7087500095 0.6805312037 0.6549999714 0.629468739 0.6012499928 0.5784062743 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5555624962 0.5260000229 0.4964375198 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4964375198 0.5260000229 0.5555624962 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5690000057 0.5653046966 0.5555624962 0.5417890549 0.5260000229 0.5102109313 0.4964375198 0.4866953194 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4695625007 0.4400000274 0.4104375243 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.3970000148 0.4104375243 0.4400000274 0.4695625007 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103 0.4830000103}
    green {curve R 0.6589999795 x50 0.6536288857 0.6479062438 0.6414804459 0.6340000033 0.6249843836 0.6147499681 0.6041406393 0.5939999819 0.5844687223 0.575124979 0.5659687519 0.5569999814 0.5484530926 0.5402500033 0.5319218636 0.5230000019 0.5131718516 0.5027499795 0.4922031164 0.4819999933 0.4722187519 0.4626249969 0.4532187581 0.4440000057 0.4351093769 0.4265000224 0.4178906381 0.4090000093 0.3997343779 0.3902499974 0.380640626 0.3709999919 0.3614374995 0.3518749774 0.3421249986 0.3319999874 0.321398437 0.3104375005 0.2992577851 0.2879999876 0.2764999866 0.2647500038 0.2531249821 0.2419999987 0.2312265635 0.2206875086 0.2108047009 0.202000007 0.1947187632 0.1886250079 0.1829687506 0.1770000011 0.1693515629 0.1608124971 0.1538671851 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1509999931 0.1527187377 0.1564999968 0.1602812558 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1620000005 0.1612187475 0.1595000029 0.1577812582 0.1570000052 0.1573124975 0.1579999924 0.1586875021 0.1589999944 0.1575781256 0.1543750018 0.1509843767 0.1490000039 0.1485625058 0.1484999955 0.1484375 0.1480000019 0.1467812508 0.1449999958 0.1432187557 0.1420000046 0.1415625066 0.1414999962 0.1414375007 0.1410000026 0.1397656202 0.1378750056 0.1357968748 0.1340000033 0.1323750019 0.1307500005 0.1295000017 0.1289999932 0.130031243 0.1324999928 0.1354687512 0.1379999965 0.1402187496 0.1424999982 0.1442812532 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1449999958 0.1464921832 0.1503124982 0.1554765552 0.1609999985 0.1673984379 0.1749375015 0.1822578013 0.1879999936 0.1906718612 0.1913749874 0.1926406175 0.1969999969 0.2064140588 0.2199375033 0.2357421964 0.2520000041 0.2688750029 0.2871249914 0.3058125079 0.324000001 0.3417187631 0.359375 0.3765937686 0.3930000067 0.4082968831 0.4227499962 0.4368281364 0.451000005 0.4659531415 0.4812500179 0.4956718981 0.5080000162 0.5169296861 0.5234375 0.5297265649 0.5379999876 0.5491171479 0.5618124604 0.5751015544 0.5879999995 0.6009531021 0.6142500043 0.6266719103 0.6370000243 0.6447148919 0.6505312324 0.655082047 0.6589999795}
    blue {curve R 0.3160000145 x50 0.3244570494 0.3330312669 0.3418398499 0.351000011 0.3607422113 0.3709374964 0.3811640739 0.3910000026 0.4003046751 0.4093124866 0.4181640446 0.4269999862 0.4359609187 0.4449374974 0.453695327 0.4620000124 0.4697890878 0.4771875143 0.4842422009 0.4909999967 0.4971874952 0.5028749704 0.5086249709 0.5149999857 0.5227031112 0.53125 0.5394218564 0.5460000038 0.5502656102 0.5530000329 0.5552343726 0.5580000281 0.561632812 0.5655625463 0.5694609284 0.5730000138 0.5765469074 0.5801249743 0.5828906298 0.5839999914 0.5838750005 0.5830000043 0.5806249976 0.5759999752 0.5682968497 0.5576249957 0.5446406007 0.5299999714 0.5128515363 0.4931874871 0.4729296863 0.4539999962 0.4368359447 0.420437485 0.4045703113 0.3889999986 0.3731718659 0.3573749959 0.3426406384 0.3300000131 0.3193906248 0.310375005 0.3034218848 0.298999995 0.2972500026 0.2969999909 0.2967499793 0.2949999869 0.2899531126 0.2821249962 0.2734843791 0.2660000026 0.2602812648 0.2552500069 0.2503437698 0.2450000048 0.2380000055 0.2300000042 0.2232500017 0.2199999988 0.2195625007 0.2194999903 0.2194374949 0.2189999968 0.2183593661 0.2176249921 0.2163281292 0.2140000015 0.2101874948 0.205249995 0.1999374926 0.1949999928 0.1904453039 0.185937494 0.1817109436 0.1780000031 0.1754062474 0.1736250073 0.1715312451 0.1679999977 0.1620937437 0.1546249986 0.147093758 0.1410000026 0.1372031271 0.1347499937 0.1324218661 0.1289999932 0.1237656176 0.1174999923 0.1112343743 0.1059999987 0.1021796837 0.09918750077 0.09660156071 0.09399999678 0.09089062363 0.0876249969 0.0850468725 0.08399999887 0.08524999768 0.0882499963 0.09187500179 0.09499999881 0.09706249833 0.09875000268 0.1008125022 0.1040000021 0.1084140688 0.1136875004 0.1198671907 0.1270000041 0.1355390698 0.145312503 0.1554296911 0.1650000066 0.1739453226 0.1826875061 0.1910859346 0.199000001 0.2061250061 0.2126249969 0.2190624923 0.2259999961 0.2338827997 0.2423124909 0.2505859137 0.2579999864 0.2642968595 0.26987499 0.2750156224 0.2800000012 0.2847812474 0.2892500162 0.2935937643 0.2980000079 0.3025000095 0.3070000112 0.3115000129 0.3160000145}
    alpha {}}
  name ColorLookup3
  label "Pointer's Gamut Boundary Yxy\ninterpolated: incr 50 - 0 to 8000"
  xpos -1250
  ypos 98
 }
 BlackOutside {
  name BlackOutside3
  xpos -1250
  ypos 179
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop8
  xpos -1250
  ypos 228
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1250
  ypos 278
  disable {{!parent.enable_pointer_samples}}
 }
 BlackOutside {
  name BlackOutside4
  xpos -1250
  ypos 325
 }
 Crop {
  box {0 -1 {input.width} {height}}
  reformat true
  name Crop2
  xpos -1250
  ypos 367
 }
 Dot {
  name Dot4
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1216
  ypos 402
 }
 Dot {
  name Dot15
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -776
  ypos 402
 }
set Nb0c57cf0 [stack 0]
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant5
  xpos -700
  ypos -122
  postage_stamp false
 }
 Reformat {
  type "to box"
  box_width {{pow(2,bits)}}
  box_height 2
  box_fixed true
  name ReformatBox1
  label "\[value bits]bit"
  xpos -700
  ypos -80
  addUserKnob {20 User}
  addUserKnob {7 bits l "" +STARTLINE R 0 16}
  bits 14
 }
 Ramp {
  p0 {0 0}
  p1 {{input.width} 0}
  name Ramp3
  xpos -700
  ypos -26
 }
set Nb0c75c80 [stack 0]
 Dot {
  name Dot9
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos -22
 }
 Expression {
  expr0 r*-0.00132+0.00142
  expr1 r*-0.565+0.737
  expr2 r*-0.26+0.2637
  expr3 1
  name Expression1
  label "line of purples"
  xpos -590
  ypos 16
 }
 Transform {
  translate {13300 0}
  scale {0.1 1}
  filter impulse
  name Transform1
  note_font "Bitstream Vera Sans"
  xpos -590
  ypos 70
 }
 BlackOutside {
  name BlackOutside1
  xpos -590
  ypos 118
 }
 Dot {
  name Dot10
  note_font "Bitstream Vera Sans"
  xpos -556
  ypos 194
 }
push $Nb0c75c80
 Expression {
  temp_name0 start
  temp_expr0 360
  temp_name1 end
  temp_expr1 830
  channel0 {rgba.red rgba.green rgba.blue none}
  expr0 r*(end-start)+start
  channel1 none
  channel2 none
  expr3 1
  name Expression2
  label "360nm to 830nm"
  xpos -700
  ypos 16
 }
 ColorLookup {
  lut {master {}
    red {curve x360 0.0001298999996 C 0.0001458470069 0.0001638021058 0.0001840037003 0.0002066901943 0.0002321000065 0.0002607280039 0.0002930749906 0.0003293880145 0.0003699139925 0.0004148999869 0.0004641586856 0.000518986024 0.000581854023 0.0006552346749 0.0007416000008 0.0008450296009 0.0009645267855 0.001094948966 0.001231153961 0.001368000056 0.00150204997 0.001642327989 0.001802381943 0.001995756989 0.002236000029 0.00253538508 0.002892602934 0.003300829092 0.003753236029 0.004242999945 0.004762389231 0.005330048036 0.005978711881 0.00674111722 0.007650000043 0.008751372807 0.01002888009 0.01142170001 0.01286900975 0.01431000046 0.01570443064 0.01714744046 0.01878122054 0.02074800991 0.02318999916 0.02620735951 0.02978247963 0.03388091922 0.03846824169 0.04351000115 0.04899559915 0.05502260104 0.06171879917 0.06921199709 0.07762999833 0.08695811033 0.09717672318 0.1084062979 0.1207671985 0.1343799978 0.149358198 0.1653957069 0.1819830984 0.1986110061 0.2147700042 0.2301868051 0.2448796928 0.2587772906 0.271807909 0.2838999927 0.2949438095 0.3048965037 0.3137873113 0.3216454089 0.3285000026 0.3343513012 0.339210093 0.3431212902 0.3461295962 0.3482800126 0.3495998979 0.3501473963 0.3500129879 0.3492870033 0.3480600119 0.3463732898 0.3442623913 0.3418087959 0.3390941024 0.3361999989 0.3331977129 0.3300411105 0.3266356885 0.3228867948 0.3186999857 0.314025104 0.3088839948 0.3032903969 0.2972579002 0.2908000052 0.2839700878 0.2767213881 0.268917799 0.2604227066 0.2511000037 0.2408474982 0.2298512012 0.2184071988 0.2068115026 0.1953600049 0.1842135936 0.173327297 0.1626881063 0.152283296 0.1421000063 0.1321786046 0.1225695983 0.1132752001 0.1042978987 0.09564000368 0.08729954809 0.07930804044 0.07171776146 0.06458099186 0.05795000866 0.05186210945 0.04628152028 0.04115087911 0.0364128314 0.0320100002 0.0279172007 0.02414439991 0.02068700083 0.01754040085 0.01470000017 0.01216179039 0.009919960052 0.007967240177 0.006296345964 0.004900000058 0.003777173115 0.002945319982 0.002424879931 0.00223629293 0.002400000114 0.002925520064 0.003836560063 0.005174839869 0.006982080173 0.009300000034 0.01214949042 0.01553587988 0.01947752014 0.02399276942 0.02910000086 0.0348148495 0.04112016037 0.04798503965 0.05537860841 0.0632700026 0.07163500786 0.08046223968 0.08973996341 0.09945645183 0.1096000001 0.120167397 0.1311144978 0.1423678994 0.1538542062 0.1655000001 0.1772571057 0.1891400069 0.2011694014 0.2133657932 0.225749895 0.238320902 0.2510668039 0.2639921904 0.2771016955 0.2903999984 0.3038912117 0.3175725937 0.3314383924 0.3454827964 0.3596999943 0.3740839064 0.3886395991 0.4033783972 0.4183115065 0.4334498942 0.4487952888 0.4643360078 0.4800640047 0.4959712923 0.5120500922 0.5282958746 0.5446916223 0.5612093806 0.5778214931 0.5945000052 0.6112208962 0.6279758215 0.6447601914 0.6615697145 0.6783999801 0.6952391863 0.7120586038 0.7288283706 0.7455188036 0.7620999813 0.7785431743 0.7948256135 0.8109263778 0.8268247843 0.8424999714 0.857932508 0.8730816245 0.887894392 0.90231812 0.9162999988 0.9297994971 0.9427983761 0.9552776217 0.9672179222 0.9786000252 0.9893856049 0.9995487928 1.009089231 1.018006444 1.026299953 1.033982754 1.040985942 1.047188044 1.05246675 1.056699991 1.059794426 1.061799169 1.062806845 1.062909603 1.06219995 1.060735226 1.058443546 1.055224419 1.050976753 1.045600057 1.03903687 1.031360745 1.022666216 1.013047695 1.002599955 0.9913675189 0.9793313742 0.96649158 0.952847898 0.9383999705 0.9231939912 0.9072440267 0.890501976 0.8729199767 0.8544499278 0.8350840211 0.8149459958 0.7941859961 0.7729539871 0.7513999939 0.729583621 0.7075887918 0.6856021881 0.6638103724 0.6424000263 0.6215149164 0.6011137962 0.5811051726 0.5613976717 0.5418999791 0.5225995183 0.5035464168 0.4847435951 0.4661939144 0.4478999972 0.4298613071 0.4120979905 0.3946439922 0.3775332868 0.360799998 0.3444562852 0.3285168111 0.3130191863 0.2980011106 0.2834999859 0.2695448101 0.256118387 0.2431896031 0.2307271957 0.2187000066 0.2070970982 0.1959231943 0.1851707995 0.1748322994 0.1649000049 0.1553667039 0.1462299973 0.1374900043 0.1291466951 0.1212000027 0.1136396974 0.1064649969 0.09969043732 0.09333060682 0.08739999682 0.0819009617 0.07680428028 0.07207711786 0.06768663973 0.06360000372 0.05980684981 0.05628215894 0.05297103897 0.04981860891 0.04676999897 0.04378404841 0.04087536037 0.03807263821 0.03540461138 0.03290000185 0.03056419082 0.02838055976 0.02634483948 0.02445274964 0.02270000055 0.02108429 0.01959987916 0.01823732071 0.01698716916 0.01583999954 0.01479064021 0.01383132022 0.01294867974 0.01212919969 0.01135915983 0.01062935032 0.009938846342 0.009288421832 0.008678854443 0.008110916242 0.007582387887 0.007088745944 0.006627312861 0.006195407826 0.005790345836 0.005409826059 0.005052582826 0.004717512056 0.004403506871 0.004109457135 0.003833913011 0.003575748065 0.003334342036 0.003109074896 0.002899327083 0.002704347949 0.00252301991 0.0023541681 0.002196616028 0.002049189992 0.001910959953 0.001781438012 0.001660109963 0.00154645904 0.001439971034 0.001340041985 0.001246275031 0.001158470986 0.001076429966 0.0009999492904 0.0009287358262 0.0008624332258 0.0008007502765 0.0007433959981 0.0006900785957 0.0006405155873 0.0005945020821 0.0005518646212 0.0005124289892 0.0004760212905 0.0004424536019 0.0004115116899 0.0003829814086 0.0003566491068 0.0003323011042 0.0003097585868 0.0002888870949 0.0002695393923 0.0002515682136 0.0002348261041 0.0002191709937 0.0002045258007 0.0001908404956 0.0001780653984 0.0001661504939 0.0001550236047 0.0001446218957 0.000134909802 0.000125852006 0.0001174130011 0.0001095515036 0.0001022244978 9.539444727e-05 8.902390255e-05 8.307526878e-05 7.751269004e-05 7.231304335e-05 6.745778228e-05 6.292844046e-05 5.870651876e-05 5.477028026e-05 5.109918129e-05 4.767654173e-05 4.448567051e-05 4.150993846e-05 3.873324022e-05 3.61420316e-05 3.372352148e-05 3.146487143e-05 2.935325938e-05 2.73757305e-05 2.552433034e-05 2.379376019e-05 2.217869951e-05 2.067382957e-05 1.927226003e-05 1.796640026e-05 1.674990926e-05 1.56164806e-05 1.455976962e-05 1.357387009e-05 1.265436003e-05 1.17972304e-05 1.09984403e-05 1.025397978e-05 9.55964606e-06 8.912043995e-06 8.308357792e-06 7.745768926e-06 7.221456144e-06 6.732474958e-06 6.276422937e-06 5.851304195e-06 5.455117844e-06 5.085867997e-06 4.741466e-06 4.42023611e-06 4.12078316e-06 3.841716079e-06 3.581651981e-06 3.339127034e-06 3.112948889e-06 2.902120968e-06 2.705645102e-06 2.522524937e-06 2.351725925e-06 2.192414968e-06 2.043901986e-06 1.905497015e-06 1.776508952e-06 1.656214977e-06 1.544021984e-06 1.439439984e-06 1.341977054e-06 S 1.251141043e-06}
    green {curve x360 3.916999958e-06 C 4.393581094e-06 4.929604074e-06 5.532136129e-06 6.20824494e-06 6.965000011e-06 7.813218872e-06 8.767336112e-06 9.839844097e-06 1.104323019e-05 1.238999994e-05 1.388640976e-05 1.555727977e-05 1.74429606e-05 1.958374924e-05 2.201999996e-05 2.483965e-05 2.804126052e-05 3.153103899e-05 3.521520921e-05 3.899999865e-05 4.282639929e-05 4.691459981e-05 5.158959902e-05 5.717639942e-05 6.399999984e-05 7.234421355e-05 8.221223834e-05 9.350816254e-05 0.0001061361036 0.000119999997 0.0001349840022 0.0001514920004 0.0001702080044 0.0001918159978 0.0002169999934 0.0002469067113 0.0002812400053 0.0003185200039 0.0003572666901 0.0003959999885 0.0004337147111 0.0004730240034 0.0005178760039 0.0005722186761 0.0006399999838 0.0007245599991 0.0008254999993 0.0009411600186 0.001069879974 0.001210000017 0.001362091047 0.001530752052 0.001720368047 0.001935323002 0.002180000069 0.002454800066 0.002764000092 0.003117799992 0.003526400076 0.00400000019 0.004546239972 0.005159319844 0.005829279777 0.006546160206 0.007300000172 0.008086507209 0.008908719756 0.009767680429 0.01066443045 0.01159999985 0.01257316954 0.01358272042 0.01462967973 0.01571509056 0.01683999971 0.0180073604 0.01921447925 0.02045392059 0.02171823941 0.02300000004 0.0242946092 0.02561024018 0.02695856988 0.02835124917 0.02979999967 0.03131083027 0.03288368136 0.03452112153 0.03622571006 0.03799999878 0.03984666988 0.04176799953 0.04376599938 0.0458426699 0.04800000042 0.05024367943 0.05257304013 0.05498056114 0.0574587211 0.05999999866 0.06260196865 0.06527751684 0.06804207712 0.0709110871 0.07389999926 0.07701600343 0.08026640117 0.08366680145 0.08723279834 0.09098000079 0.09491755068 0.09904584289 0.1033674031 0.1078846008 0.1125999987 0.1175319999 0.1226743981 0.1279927939 0.1334528029 0.1390199959 0.1446764022 0.1504693031 0.1564618945 0.1627177 0.1693000048 0.1762430966 0.1835581064 0.1912734956 0.1994179934 0.2080200016 0.2171199024 0.2267345041 0.2368571013 0.2474811971 0.2585999966 0.2701849043 0.2822938859 0.2950505018 0.3085780144 0.3230000138 0.3384020925 0.3546858132 0.3716985881 0.3892875016 0.4072999954 0.4256299138 0.4443095922 0.4633944035 0.4829395115 0.503000021 0.5235692859 0.5445119739 0.565689981 0.5869653225 0.6082000136 0.6293455958 0.6503068209 0.6708751917 0.6908423901 0.7099999785 0.7281851768 0.7454636097 0.7619693875 0.7778367996 0.793200016 0.8081104159 0.8224961758 0.8363068104 0.8494915962 0.8619999886 0.8738108277 0.8849623799 0.8954936266 0.9054431915 0.9148501158 0.9237347841 0.9320924282 0.9399225712 0.9472252131 0.9539999962 0.9602560997 0.9660074115 0.9712606072 0.9760224819 0.9803000093 0.9840924144 0.9874181747 0.9903128147 0.9928116202 0.9949501157 0.9967107773 0.9980983138 0.99911201 0.9997481704 1 0.9998567104 0.9993045926 0.9983255267 0.9968987107 0.9950000048 0.9926005006 0.9897425771 0.9864444137 0.9827240705 0.9786000252 0.9740837216 0.969171226 0.9638568163 0.9581348896 0.9520000219 0.9454504251 0.9384992123 0.9311627746 0.9234576225 0.9154000282 0.9070063829 0.8982772231 0.8892048001 0.8797816038 0.8700000048 0.8598613143 0.8493919969 0.838621974 0.8275812864 0.8162999749 0.8047947288 0.7930819988 0.7811920047 0.7691547275 0.7570000291 0.744754076 0.7324224114 0.7200036049 0.7074965239 0.6948999763 0.6822192073 0.6694716215 0.6566743851 0.6438447833 0.6309999824 0.6181554794 0.605314374 0.5924755931 0.5796378851 0.5667999983 0.5539610982 0.5411372185 0.528352797 0.5156322718 0.503000021 0.4904688001 0.4780304134 0.4656775892 0.4534032047 0.4411999881 0.4290800095 0.4170359969 0.4050320089 0.3930320144 0.3810000122 0.3689183891 0.3568271995 0.3447768092 0.3328176141 0.3210000098 0.3093380928 0.2978504002 0.2865935862 0.2756245136 0.2649999857 0.254763186 0.2448896021 0.2353343964 0.2260528058 0.2169999927 0.2081616074 0.1995487958 0.1911551952 0.1829743981 0.174999997 0.1672234982 0.1596464068 0.1522776037 0.1451258957 0.1381999999 0.1315003037 0.1250247955 0.1187791973 0.1127690971 0.1070000008 0.1014761999 0.09618864208 0.09112296253 0.08626484871 0.08160000294 0.07712063938 0.07282552123 0.06871008128 0.06476975977 0.06100000069 0.05739621073 0.05395504087 0.05067376047 0.04754965007 0.04458000138 0.04175871983 0.03908495978 0.03656383976 0.03420047835 0.03200000152 0.02996261045 0.0280766394 0.0263293609 0.02470804937 0.0231999997 0.02180076949 0.02050112002 0.01928107999 0.01812068932 0.01700000092 0.01590378955 0.01483718026 0.01381068025 0.01283477992 0.01192000043 0.01106830966 0.01027339045 0.00953331124 0.00884615723 0.008209999651 0.007623780984 0.007085423917 0.006591476034 0.006138484925 0.005723000038 0.005343059078 0.004995795898 0.004676403943 0.004380074795 0.004102000035 0.003838452976 0.00358909904 0.003354219021 0.003134093015 0.002928999951 0.002738138894 0.002559876069 0.002393244067 0.00223727501 0.002091000089 0.001953586936 0.001824580017 0.001703580027 0.001590186963 0.001484000008 0.00138449599 0.001291268039 0.001204092056 0.001122744055 0.001047000056 0.0009765896248 0.0009111088002 0.0008501331904 0.0007932384033 0.0007399999886 0.0006900827284 0.0006433100207 0.0005994960084 0.000558454718 0.0005200000014 0.0004839136091 0.0004500527866 0.0004183452111 0.0003887184139 0.0003611000138 0.0003353834909 0.0003114404099 0.0002891655895 0.0002684539068 0.0002492000058 0.0002313019068 0.0002146855986 0.0001992884063 0.0001850474946 0.0001718999993 0.0001597780938 0.0001486044057 0.0001383016061 0.000128792497 0.000119999997 0.0001118595028 0.0001043223965 9.73356e-05 9.084586782e-05 8.479999815e-05 7.914666639e-05 7.385799836e-05 6.89160006e-05 6.43026724e-05 5.999999848e-05 5.598186908e-05 5.222560139e-05 4.871840065e-05 4.544746844e-05 4.239999907e-05 3.956104047e-05 3.691512029e-05 3.44486798e-05 3.214816024e-05 2.999999924e-05 2.799124923e-05 2.611355922e-05 2.436024079e-05 2.272460915e-05 2.119999954e-05 1.977855027e-05 1.845285078e-05 1.721686931e-05 1.606459045e-05 1.498999973e-05 1.398728e-05 1.305155001e-05 1.217818044e-05 1.136254014e-05 1.059999977e-05 9.885877262e-06 9.217304068e-06 8.592362065e-06 8.009133126e-06 7.465700037e-06 6.959567145e-06 6.487995051e-06 6.048699106e-06 5.639396022e-06 5.257799785e-06 4.901770808e-06 4.569720204e-06 4.260194146e-06 3.971738806e-06 3.702899903e-06 3.4521629e-06 3.218302027e-06 3.000300012e-06 2.797138904e-06 2.60780007e-06 2.431220082e-06 2.266531055e-06 2.113012897e-06 1.969943014e-06 1.836599949e-06 1.71222996e-06 1.596228003e-06 1.488089993e-06 1.387314001e-06 1.293400032e-06 1.205820013e-06 1.124142955e-06 1.04800904e-06 9.770579936e-07 9.109299981e-07 8.492510233e-07 7.917209928e-07 7.380900229e-07 6.881099921e-07 6.415299936e-07 5.980900255e-07 5.575749924e-07 5.198079975e-07 4.846119737e-07 S 4.518099956e-07}
    blue {curve x360 0.0006061000167 C 0.0006808792241 0.0007651455817 0.0008600124274 0.0009665928083 0.001086000004 0.001220586011 0.001372728962 0.001543579041 0.001734285965 0.001946000033 0.002177777002 0.002435809001 0.002731953049 0.00307806395 0.003486000001 0.00397522701 0.004540880211 0.005158320069 0.00580290705 0.00645000115 0.007083216216 0.007745488081 0.008501151577 0.009414544329 0.01054999046 0.01196580008 0.01365587022 0.01558804978 0.01773015037 0.02005000971 0.0225113593 0.02520287968 0.02827971987 0.03189703822 0.03621000051 0.04143771157 0.04750372097 0.05411988124 0.06099803001 0.06785000861 0.0744863227 0.08136156201 0.08915363997 0.09854047745 0.1102000028 0.1246133 0.1417016983 0.1613035053 0.1832568049 0.2073999941 0.2336920947 0.2626113892 0.2947745919 0.3307985067 0.3713000119 0.4162091017 0.4654642045 0.5196948051 0.5795302987 0.6456000209 0.7184838057 0.7967132926 0.8778458834 0.9594389796 1.039050102 1.115367293 1.188497066 1.258123279 1.323929548 1.385599971 1.442635179 1.494803548 1.542190313 1.58488071 1.622959971 1.656404853 1.685295939 1.709874511 1.730382085 1.747059941 1.760044575 1.76962328 1.776263714 1.780433416 1.782600045 1.782968163 1.781699777 1.77919817 1.775867105 1.772109985 1.768258929 1.76403904 1.758943796 1.752466321 1.744099975 1.733559489 1.720858097 1.705936909 1.688737154 1.669199944 1.647528648 1.623412728 1.596022248 1.564527988 1.528100014 1.486111403 1.439521551 1.389879942 1.338736176 1.287639976 1.237422347 1.187824249 1.138761044 1.090147972 1.041900039 0.994197607 0.9473472834 0.9014530778 0.8566192985 0.8129500747 0.7705172896 0.7294448018 0.6899135709 0.6521049142 0.6161999702 0.5823286176 0.5504161716 0.5203375816 0.4919672906 0.4651800096 0.4399245977 0.4161835909 0.3938821852 0.3729459047 0.3533000052 0.3348577917 0.3175520897 0.3013375103 0.2861686051 0.2720000148 0.2588171065 0.2464838028 0.234771803 0.2234532982 0.2123000026 0.2011691928 0.1901195943 0.1792254001 0.1685608029 0.1581999958 0.1481382996 0.1383758038 0.1289941967 0.1200750992 0.1116999984 0.1039047986 0.09666748345 0.08998271823 0.08384530991 0.07824999094 0.07320898771 0.06867816299 0.06456784159 0.06078834832 0.05725001171 0.05390435085 0.05074663833 0.04775276035 0.04489858821 0.04216000065 0.03950728104 0.03693563864 0.03445836157 0.03208871931 0.02983999997 0.02771181054 0.02569443919 0.02378715947 0.02198925056 0.02030000091 0.01871805079 0.01724036038 0.01586364023 0.01458461024 0.01339999959 0.01230723038 0.01130187977 0.01037792023 0.009529305622 0.008749999106 0.008035199717 0.007381599862 0.006785400212 0.006242800038 0.00574999908 0.005303599872 0.004899799824 0.004534199834 0.004202399869 0.003899999894 0.003623200115 0.003370600054 0.003141399939 0.002934799995 0.002749999054 0.002585199894 0.002438599942 0.00230939989 0.002196799964 0.002099999925 0.002017732942 0.00194820005 0.001889799954 0.001840932993 0.001799999969 0.001766267 0.001737799961 0.001711199991 0.001683066948 0.001650001039 0.001610132982 0.001564400038 0.0015136 0.001458532992 0.00139999995 0.001336666988 0.001270000008 0.001204999979 0.001146667055 0.001099999994 0.001068799989 0.001049399958 0.001035599969 0.001021199976 0.001000000047 0.0009686399717 0.0009299200028 0.0008868799778 0.0008425600245 0.0007999999798 0.0007609599852 0.0007236800157 0.0006859200075 0.0006454400136 0.0006000000285 0.0005478666862 0.000491600018 0.0004353999975 0.0003834666859 0.0003399999987 0.0003072533 0.0002831600141 0.0002654400014 0.0002518132969 0.0002399999939 0.0002295466984 0.000220639995 0.0002119599958 0.0002021866967 0.0001900000061 0.0001742133027 0.0001556399948 0.0001359599992 0.0001168532981 9.999999747e-05 8.613333193e-05 7.460000052e-05 6.500000018e-05 5.693333151e-05 4.999999146e-05 4.415999865e-05 3.948000085e-05 3.57200006e-05 3.264000043e-05 2.999999924e-05 2.765333011e-05 2.556000072e-05 2.36399992e-05 2.181333002e-05 1.999999949e-05 1.813333074e-05 1.619999966e-05 1.41999999e-05 1.213332962e-05 9.999999747e-06 7.733333405e-06 5.400000191e-06 3.200000037e-06 1.333332989e-06 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 S 0}
    alpha {}}
  name ColorLookup2
  label "CIE 1931 2 Degree Standard Observer\n360nm to 830nm"
  xpos -700
  ypos 74
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace5
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 136
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos -700
  ypos 190
 }
 Expression {
  expr0 "r < 0 ? r * sole.r + lift.r : r < lift.r * 2 ? pow( (lift.r *2 - r) / (lift.r * 2), 2) * lift.r + r : r"
  expr1 "g < 0 ? g * sole.g + lift.g : g < lift.g * 2 ? pow( (lift.g *2 - g) / (lift.g * 2), 2) * lift.g + g : g"
  expr2 "b < 0 ? b * sole.b + lift.b : b < lift.b * 2 ? pow( (lift.b *2 - b) / (lift.b * 2), 2) * lift.b + b : b"
  name ToeExpr1
  label "increase brightness of line of purples"
  xpos -700
  ypos 227
  dope_sheet true
  addUserKnob {20 User}
  addUserKnob {18 lift}
  lift {0.08 0 0}
  addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  lift_panelDropped true
  addUserKnob {18 sole R 0 0.1}
  sole {0 0 0}
  addUserKnob {6 sole_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Crop {
  box {0 0 16384 1}
  name Crop10
  xpos -700
  ypos 279
 }
 Crop {
  box {0 0 16384 3}
  reformat true
  name Crop9
  xpos -700
  ypos 305
  disable {{!parent.enable_pointers_gamut}}
 }
 Fill {
  color {0 0 0 1}
  name Disable_SpectralLocus
  xpos -700
  ypos 337
  disable {{parent.draw_spectral_locus}}
 }
 Dot {
  name Dot2
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 378
 }
set Nb0d6b1c0 [stack 0]
 Dot {
  name Dot5
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 378
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -590
  ypos 398
  disable {{!parent.enable_pointers_gamut}}
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression5
  label "CIE Yxy to CIELuv"
  xpos -590
  ypos 493
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot11
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 609
 }
set Nb0d939b0 [stack 0]
push $Nb0c57cf0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace4
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -810
  ypos 440
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix3
  label "XYZ to working"
  xpos -810
  ypos 478
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.43 1 1}
  unpremult rgba.alpha
  name ColorizePointers
  xpos -810
  ypos 575
  disable {{!parent.colorize_pointers_gamut x1 1}}
 }
push $Nb0d6b1c0
 Colorspace {
  colorspace_in CIE-Yxy
  primary_in "Adobe (1998)"
  colorspace_out CIE-XYZ
  name Colorspace6
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -700
  ypos 429
 }
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix1
  label "XYZ to working"
  xpos -700
  ypos 477
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {0 0.5 1 1}
  unpremult rgba.alpha
  name Fill2
  xpos -700
  ypos 528
  disable {{!parent.colorize_spectral_locus}}
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -700
  ypos 581
  disable {{!parent.enable_pointers_gamut}}
 }
set Nb0dfb530 [stack 0]
 Group {
  inputs 2
  name PlotPoints1
  xpos -590
  ypos 650
  disable {{!(parent.draw_spectral_locus||parent.enable_pointers_gamut)}}
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Group {
  inputs 0
  name GamutGrid
  xpos -2020
  ypos 398
  addUserKnob {20 GamutGrid}
  addUserKnob {3 style}
  style {{max(0,parent.style-1)}}
  addUserKnob {3 distribution -STARTLINE}
  distribution {{parent.distribution}}
  addUserKnob {7 density R 10 150}
  density {{parent.density}}
  addUserKnob {26 ""}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {12 wxy}
  wxy {{parent.GamutToXYZ_OVERLAY.wxy} {parent.GamutToXYZ_OVERLAY.wxy}}
 }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   centerSaturation 1
   fillFormat false
   area {-170 -158 682 670}
   name ColorWheel4
   xpos -260
   ypos 3
   postage_stamp false
  }
  Crop {
   box {0 0 512 512}
   crop false
   name Crop2
   xpos -260
   ypos 29
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat3
   note_font "Bitstream Vera Sans"
   xpos -260
   ypos 110
  }
set Nb0e5f510 [stack 0]
push $Nb0e5f510
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   roworder TopBottom
   name ContactSheet2
   xpos -260
   ypos 169
  }
  Dot {
   name Dot1
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -226
   ypos 246
  }
  ColorWheel {
   inputs 0
   format "512 512 0 0 512 512 1 square_512"
   fillFormat false
   area {40 40 472 472}
   name ColorWheel1
   xpos -40
   ypos -664
   postage_stamp false
  }
  Reformat {
   type scale
   scale {{max(parent.density/50,0.25)}}
   resize distort
   filter impulse
   pbb true
   name Reformat1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -628
  }
  Crop {
   box {0 0 {width} {height}}
   reformat true
   name Crop1
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -602
  }
  Unpremult {
   name Unpremult1
   xpos -40
   ypos -526
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos -415
  }
  Colorspace {
   colorspace_in CIE-XYZ
   colorspace_out CIE-Yxy
   name Colorspace1
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -341
  }
set Nb0eb92c0 [stack 0]
  Dot {
   name Dot2
   label " "
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos -331
  }
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression5
   label "CIE Yxy to CIELuv"
   xpos -590
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 "(-(degrees(atan2(g-white.x, b-white.y))-180)+270)%360/360"
   expr2 "hypot(g-white.x, b-white.y)"
   expr3 a
   name Expression3
   xpos -590
   ypos -261
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{"parent.distribution ? 4*parent.wxy.x / ( -2 * parent.wxy.x + 12 * parent.wxy.y + 3) : parent.wxy"} {"parent.distribution ? 9*parent.wxy.y / ( -2*parent.wxy.x + 12*parent.wxy.y + 3) : parent.wxy"}}
  }
set Nb0ee4c10 [stack 0]
  Posterize {
   channels rgb
   Colors {{rint(parent.density/3*2)}}
   name Posterize1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos -194
  }
set Nb0ef3be0 [stack 0]
push $Nb0ee4c10
  Dot {
   name Dot15
   note_font "Bitstream Vera Sans"
   xpos -446
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   name Copy1
   xpos -480
   ypos -154
  }
push $Nb0ef3be0
push $Nb0ee4c10
  Dot {
   name Dot16
   note_font "Bitstream Vera Sans"
   xpos -666
   ypos -257
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   name Copy2
   xpos -700
   ypos -153
  }
  ContactSheet {
   inputs 2
   width {{width*columns}}
   height {{height/pixel_aspect*rows}}
   rows 1
   columns 2
   center true
   roworder TopBottom
   name ContactSheet3
   xpos -590
   ypos -102
  }
  Expression {
   expr0 r
   expr1 cos(radians(g*360))*b+white.x
   expr2 sin(radians(g*360))*b+white.y
   expr3 a
   name Expression19
   xpos -590
   ypos -57
   cached true
   addUserKnob {20 User}
   addUserKnob {12 white}
   white {{parent.Expression3.white} {parent.Expression3.white}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression2
   label "CIELuv to CIE Yxy"
   xpos -590
   ypos -16
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace2
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -590
   ypos 31
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix1
   label "XYZ to RGB"
   xpos -590
   ypos 81
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin2
   xpos -590
   ypos 119
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp1
   note_font "Bitstream Vera Sans"
   xpos -590
   ypos 156
  }
  Premult {
   name Premult1
   xpos -590
   ypos 194
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge2
   xpos -590
   ypos 242
  }
  Shuffle {
   alpha white
   name Shuffle1
   label "\[value in] -> \[value out]"
   xpos -590
   ypos 314
  }
  Dot {
   name Dot3
   label " GRID"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -556
   ypos 378
  }
push $Nb0e5f510
push $Nb0eb92c0
  Expression {
   expr0 r
   expr1 "4*g / ( -2*g + 12*b + 3)"
   expr2 "9*b / ( -2*g + 12*b + 3)"
   name Expression4
   label "CIE Yxy to CIELuv"
   xpos -40
   ypos -304
   disable {{!parent.distribution}}
  }
  Expression {
   expr0 r
   expr1 rint(g*Colors)/Colors
   expr2 rint(b*Colors)/Colors
   expr3 a
   name Expression1
   label rint
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -233
   addUserKnob {20 User}
   addUserKnob {7 Colors R 1 256}
   Colors {{parent.density}}
  }
  Expression {
   expr0 r
   expr1 "9*g / ( 6*g - 16*b + 12)"
   expr2 "4*b/ ( 6*g - 16*b + 12)"
   name Expression6
   label "CIELuv to CIE Yxy"
   xpos -40
   ypos -184
   disable {{!parent.distribution}}
  }
  Colorspace {
   colorspace_in CIE-Yxy
   colorspace_out CIE-XYZ
   name Colorspace3
   label "\[value colorspace_in] -> \[value colorspace_out]"
   xpos -40
   ypos -133
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   invert true
   name ColorMatrix3
   label "XYZ to RGB"
   xpos -40
   ypos -57
  }
  Clamp {
   channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   minimum 1
   MinClampTo_enable true
   MaxClampTo_enable true
   name Clamp4
   note_font "Bitstream Vera Sans"
   xpos -40
   ypos -13
  }
  Premult {
   name Premult2
   xpos -40
   ypos 34
  }
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge1
   xpos -40
   ypos 110
  }
  Clamp {
   channels rgba
   maximum_enable false
   name ClampMin1
   xpos -40
   ypos 175
  }
  Dot {
   name Dot4
   label " DOTS"
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xa5a5a501
   xpos -6
   ypos 378
  }
  Switch {
   inputs 2
   which {{parent.style}}
   name Switch1
   xpos -257
   ypos 483
  }
  ColorMatrix {
   matrix {
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
       {{parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix} {parent.parent.GamutToXYZ_OVERLAY.ColorMatrix.matrix}}
     }
   name ColorMatrix2
   label "RGB to XYZ"
   xpos -257
   ypos 560
  }
  Output {
   name Output
   xpos -257
   ypos 740
  }
  ColorWheel {
   inputs 0
   format "256 256 0 0 256 256 1 square_256"
   area {40 40 472 472}
   name ColorWheel2
   xpos -37
   ypos -705
   postage_stamp false
  }
 end_group
 ColorWheel {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  centerSaturation 1
  name ColorWheel4
  xpos -1910
  ypos 254
  postage_stamp false
 }
 Unpremult {
  name Unpremult1
  xpos -1910
  ypos 302
 }
 Group {
  name GamutToXYZ_OVERLAY
  label "\[if \{\[value invert]\} \{return \"XYZ to \[value gamut]\"\} else \{return \"\[value gamut] to XYZ\"\}]\n\n"
  xpos -1910
  ypos 343
  addUserKnob {20 GamutToXYZ_tab l GamutToXYZ}
  addUserKnob {4 gamut t "Choose gamut" M {XYZ ACES ACEScg "Filmlight E-Gamut" Rec709 Rec2020 P3D60 P3D65 P3DCI "Arri AlexaWideGamut" REDDRAGONcolor REDDRAGONcolor2 REDcolor REDcolor2 REDcolor3 REDcolor4 REDWideGamutRGB "GoPro Protune Native" CanonCinemaGamut SonySGamut SonySGamut3Cine PanasonicVGamut "DJI D-Gamut" "Fujifilm F-Gamut" BMDFilmV1 BMD4kFilmV1 BMD4kFilmV3 BMD46kFilmV1 BMD46kFilmV3 BMDWideGamutV4 "AdobeRGB\t" AdobeWideGamutRGB ROMM RIMM ERIMM ProPhotoRGB RusselRGB SharpRGB AppleRGB BestRGB}}
  gamut ACEScg
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {26 chromaticity_coordinates_label l " " T "<b>Chromaticity Coordinates</b>"}
  addUserKnob {41 rxy T ColorMatrix.rxy}
  addUserKnob {41 gxy T ColorMatrix.gxy}
  addUserKnob {41 bxy T ColorMatrix.bxy}
  addUserKnob {41 wxy T ColorMatrix.wxy}
  addUserKnob {41 matrix T ColorMatrix.matrix}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  ColorMatrix {
   matrix {
       {{curve(which) 1 0.9525524378 0.6624541879 0.7053968906 0.4123907983 0.6369580626 0.5049495697 0.4865709841 0.4451698363 0.6380076408 0.5070186853 0.4462202489 0.4300414324 0.4581649601 0.4878340662 0.4517004192 0.7352752686 0.5022571683 0.7160496712 0.7064827085 0.5990839601 0.6796444654 0.6481720209 0.6369580626 0.6390493512 0.6141571999 0.3724023998 0.60689044 0.4017650783 0.6065810919 0.5766690373 0.7165006995 0.797760427 0.797760427 0.797760427 0.7976718545 0.7015837431 0.8156226277 0.4496616423 0.6318944097} {curve(which) 0 0 0.1340042055 0.1640413404 0.3575843275 0.1446169019 0.2646814585 0.2656676769 0.2771343887 0.2147038579 0.3587769568 0.3157556653 0.3700728714 0.3832037449 0.3432727158 0.3178463876 0.06860940903 0.2929667532 0.1296834797 0.1288010478 0.2489254922 0.1522114277 0.1940581352 0.1446169019 0.1578372866 0.2825684249 0.4324877858 0.2193847299 0.4560420811 0.2203479856 0.1855582297 0.1010205746 0.1351858526 0.1351858526 0.1351858526 0.1351878047 0.1554162204 0.04716260359 0.3162561059 0.2053879201} {curve(which) 0 9.367863095e-05 0.1561876982 0.08101774752 0.180480808 0.1688809693 0.1830150485 0.1982172877 0.1722826511 0.09774444997 0.0868505761 0.190669477 0.152531758 0.1112773567 0.1215386018 0.1830992699 0.1465712637 0.1552320272 0.1047228053 0.1151721701 0.1024464965 0.1186000481 0.108225815 0.1688809693 0.1516760886 0.05183707923 0.1436725408 0.124180764 0.09264881909 0.123526901 0.1882286519 0.1467743814 0.03134934977 0.03134934977 0.03134934977 0.03133957833 0.09979832917 0.1372147948 0.1845382005 0.1270133406}}
       {{curve(which) 0 0.3439664543 0.2722287476 0.2801307142 0.2126390189 0.2627002299 0.237623319 0.2289745659 0.209491685 0.2919537723 0.2207257152 0.1942579001 0.2022213936 0.1694435924 0.2289056629 0.2119505703 0.2866941094 0.1387997568 0.2612613738 0.2709796727 0.2150758505 0.2606855333 0.2830046713 0.2627002299 0.1743051857 0.2365771234 0.1383759677 0.1973138005 0.1721783578 0.2680045366 0.2973450124 0.258728236 0.2880711257 0.2880711257 0.2880711257 0.2880405784 0.3152042925 0.3790788651 0.2446159422 0.2276017666} {curve(which) 1 0.7281661034 0.6740817428 0.8202066422 0.7151686549 0.6779980659 0.6891706586 0.6917385459 0.7215952873 0.8238410354 0.839184761 0.7385566831 0.7585275769 0.8648257852 0.7808576822 0.7230190039 0.8429791331 0.910841465 0.8696421385 0.786606431 0.8850684762 0.7748944759 0.8131960034 0.6779980659 0.951146543 0.8896810412 0.911518693 0.943950057 0.8553914428 0.8326833844 0.6273635626 0.7246823311 0.7118432522 0.7118432522 0.7118432522 0.7118694782 0.6648360491 0.5769088268 0.6720442176 0.7383946776} {curve(which) 0 -0.07213255018 0.05368951708 -0.1003373638 0.07219231874 0.05930171534 0.07320601493 0.07928691059 0.06891305745 -0.1157948226 -0.05991046131 0.06718540192 0.03925102949 -0.03426937759 -0.009763340466 0.06503042579 -0.1296732277 -0.04964122549 -0.1309035122 -0.05758608505 -0.1001443192 -0.03558001295 -0.09620071948 0.05930171534 -0.1254517138 -0.1262581497 -0.04989464581 -0.1412638426 -0.02756982669 -0.1006879359 0.07529145479 0.01658944227 8.565396274e-05 8.565396274e-05 8.565396274e-05 8.991353388e-05 0.01995966583 0.04401229322 0.08333983272 0.0340035744}}
       {{curve(which) 0 -3.863927134e-08 -0.005574660841 -0.1037815213 0.01933082007 0 0 0 0 0.0027982709 -0.0544523783 -0.04792318866 -0.0176958181 -0.1061859056 -0.02100777067 -0.01945115253 -0.07968087494 0.07801423222 -0.009676366113 -0.009677864611 -0.03206583485 -0.009310216643 -0.01825834997 0 -0.11669112 -0.02325225808 -0.1602820009 -0.1427432895 -0.10720893 -0.02941203304 0.02703136392 -2.906408625e-08 -3.236030111e-08 -3.236030111e-08 -3.236030111e-08 0 0 -0.01229703799 0.02518104948 0} {curve(which) 0 0 0.004060741514 -0.07290724665 0.1191947311 0.0280726999 0.0449459292 0.04511339962 0.04706057906 -0.06703422964 -0.0003228379355 -0.0002844714036 0.08768811822 0.02554347552 0.01782695204 0.01650637016 -0.3473432064 -0.3148325086 -0.2364816219 0.004600019194 -0.02765839547 -0.004612449091 -0.08316776901 0.0280726999 -0.5518454909 -0.4897170365 -0.171635136 -0.4278847873 0.07809129357 -0.08659287542 0.07068887353 0.05121183768 1.2621717e-08 1.2621717e-08 1.2621717e-08 -1.262213711e-08 0.04317118227 0.01672476344 0.1411857158 0.01001892332} {curve(which) 1 1.008825183 1.010339141 1.265746474 0.950532198 1.060985088 0.9638792276 1.043944359 0.9073553085 1.153293729 1.063571215 1.057001948 0.9388025999 1.089437366 1.01197505 1.011739731 1.51608181 1.325875998 1.335215807 1.094135642 1.148782015 1.102980375 1.190483928 1.060985088 1.745692492 1.590125084 1.409072995 1.65968585 1.118175387 1.205062628 0.9913375378 0.7738927603 0.8251045942 0.8251045942 0.8251045942 0.8248898983 0.8782252669 0.9955722094 0.9226909876 0.8150856495}}
     }
   invert {{parent.invert}}
   name ColorMatrix
   label "RGB to XYZ"
   xpos -40
   ypos 32
   addUserKnob {20 Gamut}
   addUserKnob {3 which}
   which {{parent.gamut}}
   addUserKnob {12 rxy}
   rxy {{curve(which) 1 0.7347 0.713 0.8 0.64 0.708 0.68 0.68 0.68 0.684 0.7530442228 0.7530444911 0.6997470013 0.8786825105 0.7011810359 0.7011805919 0.780308 0.69848046 0.74 0.73 0.766 0.73 0.71 0.708 0.9173 0.7422 1.0625 0.9175 0.8608 0.7177 0.64 0.7347 0.7347 0.7347 0.7347 0.734699 0.69 0.6898 0.625 0.7351916376} {curve(which) 0 0.2653 0.293 0.3177 0.33 0.292 0.32 0.32 0.32 0.313 0.3278305767 0.3278310295 0.3290469303 0.3249640074 0.3290141556 0.3290136991 0.304253 0.19302645 0.27 0.28 0.275 0.28 0.31 0.292 0.2502 0.2859 0.3948 0.2983 0.3689 0.3171 0.33 0.2653 0.2653 0.2653 0.2653 0.265301 0.31 0.3206 0.34 0.2648083624}}
   addUserKnob {12 gxy}
   gxy {{curve(which) 0 0 0.165 0.18 0.3 0.17 0.265 0.265 0.265 0.221 0.2995702285 0.2995704905 0.304264039 0.3008887144 0.3006003047 0.3006003955 0.121595 0.32955538 0.17 0.14 0.225 0.165 0.21 0.17 0.2833 0.414 0.3689 0.2983 0.3282 0.228 0.21 0.1152 0.1596 0.1596 0.1596 0.159597 0.18 0.0736 0.28 0.2153361345} {curve(which) 1 1 0.83 0.9 0.6 0.797 0.69 0.69 0.69 0.848 0.700699322 0.7006994156 0.6236411451 0.6790547558 0.6837888343 0.6837888243 1.493994 1.02459662 1.14 0.855 0.8 0.84 0.88 0.797 1.7072 1.3035 0.7775 1.2835 0.6156 0.8616 0.71 0.8264 0.8404 0.8404 0.8404 0.840403 0.77 0.9003 0.595 0.7741596639}}
   addUserKnob {12 bxy}
   bxy {{curve(which) 0 0.0001 0.128 0.065 0.15 0.131 0.15 0.15 0.15 0.0861 0.07964206674 0.1450115843 0.1349139613 0.09539869461 0.1081544556 0.1453319462 0.095612 0.10844263 0.08 0.1 0.089 0.1 0.09 0.131 0.0856 0.0342 0.0956 0.0756 0.0783 0.1006 0.15 0.1566 0.0366 0.0366 0.0366 0.036598 0.1 0.1166 0.155 0.1301229508} {curve(which) 0 -0.077 0.044 -0.0805 0.06 0.046 0.06 0.06 0.06 -0.102 -0.05493795109 0.05109712509 0.03471744128 -0.02937932683 -0.008688175787 0.05161680362 -0.084589 -0.03467857 -0.1 -0.05 -0.087 -0.03 -0.08 0.046 -0.0708 -0.0833 -0.0332 -0.086 -0.0233 -0.082 0.06 0.0177 0.0001 0.0001 0.0001 0.000105 0.02 0.0374 0.07 0.03483606557}}
   addUserKnob {12 wxy}
   wxy {{curve(which) 0.33333333 0.32168 0.32168 0.3127 0.3127 0.3127 0.32168 0.3127 0.314 0.3127 0.3216831877 0.3216832104 0.3216832894 0.3216832894 0.3216832104 0.3216832894 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3127 0.3135 0.3135 0.3135 0.3127 0.3127 0.3127 0.3127 0.3457 0.3457 0.3457 0.3457 0.345704 0.33243 0.33333333 0.3127 0.3457} {curve(which) 0.33333333 0.33767 0.33767 0.329 0.329 0.329 0.33767 0.329 0.351 0.329 0.337673316 0.3376736101 0.3376734472 0.3376734472 0.3376736101 0.3376734472 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.329 0.3305 0.3305 0.3305 0.329 0.329 0.329 0.329 0.3585 0.3585 0.3585 0.3585 0.35854 0.34744 0.33333333 0.329 0.3585}}
  }
  Output {
   name Output
   xpos -40
   ypos 86
  }
 end_group
 Switch {
  inputs 2
  which {{parent.style}}
  name Switch_Outline
  xpos -1910
  ypos 398
 }
 Dot {
  name Dot14
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 450
 }
set N948e6650 [stack 0]
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace3
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos -1800
  ypos 440
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression3
  label "CIE Yxy to CIELuv"
  xpos -1800
  ypos 512
  disable {{!parent.diagram}}
 }
 Dot {
  name Dot6
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 570
 }
set N94911a40 [stack 0]
push $N948e6650
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  invert true
  name ColorMatrix2
  label "XYZ to working"
  xpos -1910
  ypos 471
  disable {{!map_overlays_to_input_gamut}}
 }
 Fill {
  color {1 0.5 0.1 1}
  name Fill1
  xpos -1910
  ypos 521
  disable {{!parent.colorize_gamut_boundary}}
 }
set N94924170 [stack 0]
 Group {
  inputs 2
  name PlotPoints
  xpos -1800
  ypos 614
  addUserKnob {20 User}
  addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
  addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
 }
  Input {
   inputs 0
   name Inputpos
   xpos 510
   ypos 588
   number 1
  }
  Input {
   inputs 0
   name Inputcol
   xpos 400
   ypos 590
  }
  ShuffleCopy {
   inputs 2
   alpha alpha2
   black green
   white blue
   red2 red
   green2 alpha
   out2 pos
   name ShuffleCopy1
   label "\[value in] | \[value in2] -> \[value out]"
   xpos 400
   ypos 665
  }
  PositionToPoints2 {
   display textured
   render_mode textured
   P_channel pos
   detail 1
   pointSize 1.5
   name PositionToPoints1
   xpos 400
   ypos 742
  }
  Output {
   name Output
   xpos 404
   ypos 880
  }
 end_group
 Dot {
  name Dot18
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1766
  ypos 1266
 }
 Scene {
  inputs 3
  name Scene1
  xpos -580
  ypos 1242
 }
push $N31fe0940
push $N15f933c0
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{"parent.diagram? parent.right_margin * 0.72 : parent.right_margin"}}
  plot_cie_xy_left_margin {{parent.left_margin}}
  plot_cie_xy_process_input {{parent.plot_input}}
  format "1024 1024 0 0 1024 1024 1 square_1K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Input
  xpos 620
  ypos 608
 }
set N94974cf0 [stack 0]
 Fill {
  color 0
  name Fill4
  xpos -464
  ypos 1357
  hide_input true
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  transparency false
  ztest_enabled false
  filter impulse
  samples 0
  shutteroffset centred
  motion_vectors_type off
  name ScanlineRender
  xpos -590
  ypos 1382
 }
 Dot {
  name Dot17
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -556
  ypos 1482
 }
push $N94911a40
push $N94924170
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 3a854edac5c1c8e3a3d2801ec73798509e6e91ec7294287590bd8357a67964d1 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 5 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 5 \"padding\" 1 1 \"left_margin\" 1 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_antialias true
  plot_cie_xy_process_input true
  plot_cie_xy_add_samples 0.5
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_Gamut
  xpos -1910
  ypos 604
 }
 Multiply {
  channels rgba
  value {{parent.opacity_gamut_overlay}}
  name GamutOverlayOpacity
  xpos -1910
  ypos 686
  disable true
 }
 FrameHold {
  first_frame 1
  name FrameHold2
  xpos -1910
  ypos 764
  cached true
 }
 Dot {
  name Dot8
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -1876
  ypos 834
 }
push $Nb0d939b0
push $Nb0dfb530
 BlinkScript {
  inputs 2
  recompileCount 5
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise 65751dc3c93d46b59ba922fda7175ada4e69018b6dd8c29c890f1487b4a4c5d0 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 9 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"draw_axes\" Bool 1 AA== \"grid_hatch_length\" Float 1 AAAAAA== \"axis_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"axis_hatch_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"antialias\" Bool 1 AA== \"process_input\" Bool 1 AA== \"add_samples\" Float 1 AAAAAA== 9 \"padding\" 1 1 \"left_margin\" 1 1 \"draw_axes\" 1 1 \"grid_hatch_length\" 1 1 \"axis_color\" 4 1 \"axis_hatch_color\" 4 1 \"antialias\" 1 1 \"process_input\" 1 1 \"add_samples\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool draw_axes;\n  float grid_hatch_length;\n  float4 axis_color;\n  float4 axis_hatch_color;\n  bool antialias;\n  bool process_input;\n  float add_samples;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = float(dst.bounds.height()/padding);\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void write(float posx, float posy, float4 color, float weight=1.0f) \{\n    // Check if we are inside the bounds of the output image\n    if ( dst.bounds.inside(posx, posy)) \{\n      float4 dst_sample = (float4)dst(posx, posy);\n      float4 out = dst_sample*add_samples + (color * weight);\n      out.w = min(1.0f, out.w);\n      dst(posx, posy) = out;\n    \}\n  \}\n  \n  void bilin(float2 tpos, float4 color) \{\n    float2 p;\n    p.x = tpos.x - floor(tpos.x);\n    p.y = tpos.y - floor(tpos.y);\n    float weights\[] = \{(1.0f-p.x)*(1.0f-p.y), p.x*(1.0f-p.y), (1.0f-p.x)*p.y, p.x*p.y\};\n    int2 _position = int2(floor(tpos.x)-0,floor(tpos.y)-0);\n    write(_position.x, _position.y, color, weights\[0]);\n    write(_position.x+1, _position.y, color, weights\[1]);\n    write(_position.x, _position.y+1, color, weights\[2]);\n    write(_position.x+1, _position.y+1, color, weights\[3]);\n  \}\n\n\n  void draw_grid() \{\n    // grid width in pixels. expresses a 0 to 1 range in CIE xy\n    float grid_width = 1.0f * outsize + offset;\n    // hatch interval gives us cross-hatching at specified interval in pixels. defaults to 0.1\n    int hatch_int = int(round(grid_width - offset) * 0.1f);\n    float hatchw = outsize * grid_hatch_length; // The width of the cross-hatch: 1% of grid width\n\n    int hatch_ct = 0;\n    for ( int i = offset; i < grid_width; i++ ) \{\n      // draw vertical axis\n      bilin( float2(offset, i), axis_color);\n      // draw horizontal axis\n      bilin( float2(i, offset), axis_color);\n      // draw cross hatches at every \n      if (hatch_ct == hatch_int) \{\n        hatch_ct = 0;\n        for ( int j = -outsize*0.01; j < hatchw; j++) \{\n          bilin(float2(round(offset + j), i), axis_hatch_color);\n          bilin(float2(i+ (offset-offset), round(offset + j)), axis_hatch_color);\n        \}\n      \}\n      hatch_ct++;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if (antialias) \{\n            bilin(out_pos, bilinear(col, i, j));\n          \} else \{\n            // Remember there is a bug: no keyword arguments inside process()\n            // write(out_pos.x, out_pos.y, col(i, j), 1.0f);\n            if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{\n              dst(out_pos.x, out_pos.y) = col(i, j);\n            \}\n          \}\n        \}\n      \}\n    \}\n    // Draw axes if enabled\n    if (draw_axes) \{\n      draw_grid();\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_draw_axes {{parent.draw_axis}}
  plot_cie_xy_grid_hatch_length {{"parent.full_width_grid ? 1 : 0.01"}}
  plot_cie_xy_axis_color 0.1
  plot_cie_xy_axis_hatch_color 0.02
  plot_cie_xy_antialias true
  plot_cie_xy_process_input {{"parent.draw_spectral_locus || parent.enable_pointers_gamut"}}
  plot_cie_xy_add_samples 0.7
  format {{{parent.Plot_Input.format}}}
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SpectralLocus_and_Axis
  xpos -700
  ypos 643
 }
 FrameHold {
  first_frame 1
  name FrameHold1
  xpos -700
  ypos 699
  cached true
 }
 Dot {
  name Dot3
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos -666
  ypos 762
 }
push $N941dcb60
 Constant {
  inputs 0
  channels rgb
  color {0 0 0 1}
  format "256 256 0 0 256 256 1 square_256"
  name Constant2
  xpos 400
  ypos 110
  postage_stamp false
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input0]"}}
  name Switch1
  xpos 400
  ypos 158
 }
 Fill {
  output rgb
  color {1 1 1 1}
  name SampleColor
  xpos 290
  ypos 158
 }
 Fill {
  output alpha
  name Fill3
  xpos 290
  ypos 224
 }
 Reformat {
  type "to box"
  box_width 1
  box_height {{box_width}}
  box_fixed true
  name ReformatBox
  xpos 290
  ypos 278
 }
set N94a40400 [stack 0]
 ColorMatrix {
  matrix {
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
      {{parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix} {parent.GamutToXYZ.ColorMatrix.matrix}}
    }
  name ColorMatrix4
  label "working to XYZ"
  xpos 180
  ypos 272
 }
 Colorspace {
  colorspace_in CIE-XYZ
  primary_in "Adobe (1998)"
  colorspace_out CIE-Yxy
  name Colorspace1
  label "\[value colorspace_in] -> \[value colorspace_out]"
  xpos 180
  ypos 320
 }
 Expression {
  expr0 r
  expr1 "4*g / ( -2*g + 12*b + 3)"
  expr2 "9*b / ( -2*g + 12*b + 3)"
  name Expression6
  label "CIE Yxy to CIELuv"
  xpos 180
  ypos 368
  disable {{!parent.diagram}}
 }
push $N94a40400
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"plot_cie_xy\" iterate pixelWise fc48d30b761944f4622c7e7cade9c548789bc618dc38d8ca992161542531f81f 3 \"col\" Read Random \"Yxy\" Read Random \"dst\" Write Random 3 \"padding\" Float 1 AAAAAA== \"left_margin\" Float 1 AAAAAA== \"process_input\" Bool 1 AA== 3 \"padding\" 1 1 \"left_margin\" 1 1 \"process_input\" 1 1 2 \"outsize\" Float 1 1 AAAAAA== \"offset\" Float 1 1 AAAAAA=="
  kernelSource "kernel plot_cie_xy : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eRead, eAccessRandom, eEdgeClamped> Yxy;\n  Image<eWrite, eAccessRandom> dst;\n\nparam:\n  float padding;\n  float left_margin;\n  bool process_input;\n\n\nlocal:\n  float outsize;\n  float offset;\n\n  void init() \{\n    // calculate output width and height and offset based on padding\n    outsize = dst.bounds.height()/padding;\n    // xy offset for margin on lower left corner\n    offset = dst.bounds.height()*left_margin;\n  \}\n\n  void process(int2 pos) \{\n    // All the work will be done in the first pixel of the iteration. Essentially a single thread.\n    if ( pos.x > 1 || pos.y > 1) \{ return; \}\n    // Loop over all pixels in input Yxy\n    if (process_input) \{\n      for ( int j = Yxy.bounds.y1; j < Yxy.bounds.y2; j++) \{\n        for ( int i = Yxy.bounds.x1; i < Yxy.bounds.x2; i++) \{\n          // sample Yxy pixel at position i, j\n          float2 xy = float2(Yxy(i, j, 1), Yxy(i, j, 2));\n          // don't process black pixels\n          if( xy.x == 0.0f && xy.y == 0.0f) \{ continue; \}\n          // calculate output position: xy chromaticity coordinates at centered output pixel position\n          float2 out_pos = float2(xy.x * outsize + offset, xy.y * outsize + offset);\n          // Write color value to xy sample position in dst\n          if ( dst.bounds.inside(out_pos.x, out_pos.y)) \{ dst(out_pos.x, out_pos.y) = col(i, j); \}\n        \}\n      \}\n    \}\n  \}\n\};"
  useGPUIfAvailable false
  rebuild ""
  plot_cie_xy_padding {{parent.Plot_Input.plot_cie_xy_padding}}
  plot_cie_xy_left_margin {{parent.Plot_Input.plot_cie_xy_left_margin}}
  plot_cie_xy_process_input true
  format "2048 2048 0 0 2048 2048 1 square_2K"
  specifiedFormat true
  rebuild_finalise ""
  name Plot_SampledColor
  xpos 290
  ypos 368
 }
 Dot {
  name Dot22
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos 324
  ypos 426
 }
set N94a9a840 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate1
  label "\[value size]"
  xpos 290
  ypos 488
 }
set N94a9f5b0 [stack 0]
 Dilate {
  channels rgba
  size 2
  name Dilate2
  label "\[value size]"
  xpos 180
  ypos 488
 }
push $N94a9a840
 Dot {
  name Dot21
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xff
  xpos -6
  ypos 426
 }
 Dilate {
  channels rgba
  size 1
  name Dilate5
  label "\[value size]"
  xpos -40
  ypos 464
 }
 FilterErode {
  channels rgba
  size -0.5
  filter gaussian
  name FilterErode1
  label "\[value size]"
  note_font Helvetica
  xpos -40
  ypos 514
 }
set N94ac5a70 [stack 0]
 Dilate {
  channels rgba
  size {0 {parent.Dilate3.size.w}}
  name Dilate4
  label "\[value size]"
  xpos -40
  ypos 584
 }
push $N94ac5a70
 Dilate {
  channels rgba
  size {{Output.width*plus_size/100} 0}
  name Dilate3
  label "\[value size]"
  xpos 70
  ypos 512
  addUserKnob {20 User}
  addUserKnob {7 plus_size R 0 4}
  plus_size 0.8
 }
 Merge2 {
  inputs 2
  operation screen
  bbox B
  name Merge9
  note_font Helvetica
  xpos 70
  ypos 591
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge10
  note_font Helvetica
  xpos 180
  ypos 591
 }
 Group {
  name HueRotate
  note_font Helvetica
  xpos 180
  ypos 639
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 14
  }
  Unpremult {
   name Unpremult1
   note_font Helvetica
   xpos -40
   ypos 39
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace1
   note_font Helvetica
   xpos -40
   ypos 72
  }
  Add {
   channels {rgba.red -rgba.green -rgba.blue none}
   value 0.5
   name Add1
   note_font Helvetica
   xpos -40
   ypos 125
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace2
   note_font Helvetica
   xpos -40
   ypos 183
  }
  Premult {
   name Premult1
   note_font Helvetica
   xpos -40
   ypos 235
  }
  Output {
   name Output1
   xpos -40
   ypos 302
  }
 end_group
push $N94a9f5b0
 Merge2 {
  inputs 2
  bbox B
  name Merge8
  xpos 290
  ypos 638
 }
 Dot {
  name Dot20
  label " "
  note_font "Helvetica Bold"
  note_font_size 24
  note_font_color 0xa5a5a501
  xpos 324
  ypos 690
 }
push $N94974cf0
 Merge2 {
  inputs 2
  bbox B
  name Merge7
  xpos 620
  ypos 686
  disable {{!parent.enable_sample_color}}
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 620
  ypos 758
  disable {{"!parent.draw_spectral_locus && !parent.draw_axis"}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 620
  ypos 830
  disable {{!parent.draw_gamut_overlay}}
 }
 Blur {
  channels rgba
  size 1.5
  name Blur1
  label "poor man's antialiasing"
  xpos 620
  ypos 1136
 }
 Switch {
  inputs 2
  which {{parent.plot_type}}
  name Switch_PlotType
  xpos 620
  ypos 1478
 }
 Output {
  name Output
  xpos 620
  ypos 1641
 }
end_group
push $Ncc57ff0
push $Ne8ebb60
push $N60df9e70
push $N10b48de0
Viewer {
 inputs 4
 frame_range 1-50
 frame_range_lock true
 fps 8
 gain 64
 colour_sample_bbox {0.33984375 0.39453125 0.341796875 0.396484375}
 viewerProcess "raw (rec1886)"
 input_process false
 name Viewer1
 note_font Helvetica
 xpos 7000
 ypos 7743
 hide_input true
 addUserKnob {20 Lock}
 addUserKnob {6 lock_all_buffers l "lock all buffers" -STARTLINE}
 addUserKnob {6 lock_buffer_1 l "lock buffer 1" +STARTLINE}
 addUserKnob {6 lock_buffer_2 l "lock buffer 2" +STARTLINE}
 addUserKnob {6 lock_buffer_3 l "lock buffer 3" +STARTLINE}
 addUserKnob {6 lock_buffer_4 l "lock buffer 4" +STARTLINE}
 addUserKnob {6 lock_buffer_5 l "lock buffer 5" +STARTLINE}
 addUserKnob {6 lock_buffer_6 l "lock buffer 6" +STARTLINE}
 addUserKnob {6 lock_buffer_7 l "lock buffer 7" +STARTLINE}
 addUserKnob {6 lock_buffer_8 l "lock buffer 8" +STARTLINE}
 addUserKnob {6 lock_buffer_9 l "lock buffer 9" +STARTLINE}
 addUserKnob {6 lock_buffer_0 l "lock buffer 0" +STARTLINE}
}
